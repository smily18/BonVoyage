/*! For license information please see app.bundle.js.LICENSE.txt */
!(function (e) {
  var t = {};
  function n(i) {
    if (t[i]) return t[i].exports;
    var s = (t[i] = { i: i, l: !1, exports: {} });
    return e[i].call(s.exports, s, s.exports, n), (s.l = !0), s.exports;
  }
  (n.m = e),
    (n.c = t),
    (n.d = function (e, t, i) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i });
    }),
    (n.r = function (e) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (n.t = function (e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e;
      if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
      var i = Object.create(null);
      if (
        (n.r(i),
        Object.defineProperty(i, 'default', { enumerable: !0, value: e }),
        2 & t && 'string' != typeof e)
      )
        for (var s in e)
          n.d(
            i,
            s,
            function (t) {
              return e[t];
            }.bind(null, s)
          );
      return i;
    }),
    (n.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return n.d(t, 'a', t), t;
    }),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.p = ''),
    n((n.s = 3));
})([
  function (e, t, n) {
    var i;
    !(function (t, n) {
      'use strict';
      'object' == typeof e.exports
        ? (e.exports = t.document
            ? n(t, !0)
            : function (e) {
                if (!e.document)
                  throw new Error('jQuery requires a window with a document');
                return n(e);
              })
        : n(t);
    })('undefined' != typeof window ? window : this, function (n, s) {
      'use strict';
      var a = [],
        r = Object.getPrototypeOf,
        o = a.slice,
        l = a.flat
          ? function (e) {
              return a.flat.call(e);
            }
          : function (e) {
              return a.concat.apply([], e);
            },
        d = a.push,
        c = a.indexOf,
        u = {},
        p = u.toString,
        h = u.hasOwnProperty,
        f = h.toString,
        m = f.call(Object),
        g = {},
        v = function (e) {
          return 'function' == typeof e && 'number' != typeof e.nodeType;
        },
        y = function (e) {
          return null != e && e === e.window;
        },
        b = n.document,
        w = { type: !0, src: !0, nonce: !0, noModule: !0 };
      function x(e, t, n) {
        var i,
          s,
          a = (n = n || b).createElement('script');
        if (((a.text = e), t))
          for (i in w)
            (s = t[i] || (t.getAttribute && t.getAttribute(i))) &&
              a.setAttribute(i, s);
        n.head.appendChild(a).parentNode.removeChild(a);
      }
      function T(e) {
        return null == e
          ? e + ''
          : 'object' == typeof e || 'function' == typeof e
          ? u[p.call(e)] || 'object'
          : typeof e;
      }
      var C = function (e, t) {
        return new C.fn.init(e, t);
      };
      function E(e) {
        var t = !!e && 'length' in e && e.length,
          n = T(e);
        return (
          !v(e) &&
          !y(e) &&
          ('array' === n ||
            0 === t ||
            ('number' == typeof t && t > 0 && t - 1 in e))
        );
      }
      (C.fn = C.prototype =
        {
          jquery: '3.5.1',
          constructor: C,
          length: 0,
          toArray: function () {
            return o.call(this);
          },
          get: function (e) {
            return null == e
              ? o.call(this)
              : e < 0
              ? this[e + this.length]
              : this[e];
          },
          pushStack: function (e) {
            var t = C.merge(this.constructor(), e);
            return (t.prevObject = this), t;
          },
          each: function (e) {
            return C.each(this, e);
          },
          map: function (e) {
            return this.pushStack(
              C.map(this, function (t, n) {
                return e.call(t, n, t);
              })
            );
          },
          slice: function () {
            return this.pushStack(o.apply(this, arguments));
          },
          first: function () {
            return this.eq(0);
          },
          last: function () {
            return this.eq(-1);
          },
          even: function () {
            return this.pushStack(
              C.grep(this, function (e, t) {
                return (t + 1) % 2;
              })
            );
          },
          odd: function () {
            return this.pushStack(
              C.grep(this, function (e, t) {
                return t % 2;
              })
            );
          },
          eq: function (e) {
            var t = this.length,
              n = +e + (e < 0 ? t : 0);
            return this.pushStack(n >= 0 && n < t ? [this[n]] : []);
          },
          end: function () {
            return this.prevObject || this.constructor();
          },
          push: d,
          sort: a.sort,
          splice: a.splice,
        }),
        (C.extend = C.fn.extend =
          function () {
            var e,
              t,
              n,
              i,
              s,
              a,
              r = arguments[0] || {},
              o = 1,
              l = arguments.length,
              d = !1;
            for (
              'boolean' == typeof r && ((d = r), (r = arguments[o] || {}), o++),
                'object' == typeof r || v(r) || (r = {}),
                o === l && ((r = this), o--);
              o < l;
              o++
            )
              if (null != (e = arguments[o]))
                for (t in e)
                  (i = e[t]),
                    '__proto__' !== t &&
                      r !== i &&
                      (d && i && (C.isPlainObject(i) || (s = Array.isArray(i)))
                        ? ((n = r[t]),
                          (a =
                            s && !Array.isArray(n)
                              ? []
                              : s || C.isPlainObject(n)
                              ? n
                              : {}),
                          (s = !1),
                          (r[t] = C.extend(d, a, i)))
                        : void 0 !== i && (r[t] = i));
            return r;
          }),
        C.extend({
          expando: 'jQuery' + ('3.5.1' + Math.random()).replace(/\D/g, ''),
          isReady: !0,
          error: function (e) {
            throw new Error(e);
          },
          noop: function () {},
          isPlainObject: function (e) {
            var t, n;
            return (
              !(!e || '[object Object]' !== p.call(e)) &&
              (!(t = r(e)) ||
                ('function' ==
                  typeof (n = h.call(t, 'constructor') && t.constructor) &&
                  f.call(n) === m))
            );
          },
          isEmptyObject: function (e) {
            var t;
            for (t in e) return !1;
            return !0;
          },
          globalEval: function (e, t, n) {
            x(e, { nonce: t && t.nonce }, n);
          },
          each: function (e, t) {
            var n,
              i = 0;
            if (E(e))
              for (n = e.length; i < n && !1 !== t.call(e[i], i, e[i]); i++);
            else for (i in e) if (!1 === t.call(e[i], i, e[i])) break;
            return e;
          },
          makeArray: function (e, t) {
            var n = t || [];
            return (
              null != e &&
                (E(Object(e))
                  ? C.merge(n, 'string' == typeof e ? [e] : e)
                  : d.call(n, e)),
              n
            );
          },
          inArray: function (e, t, n) {
            return null == t ? -1 : c.call(t, e, n);
          },
          merge: function (e, t) {
            for (var n = +t.length, i = 0, s = e.length; i < n; i++)
              e[s++] = t[i];
            return (e.length = s), e;
          },
          grep: function (e, t, n) {
            for (var i = [], s = 0, a = e.length, r = !n; s < a; s++)
              !t(e[s], s) !== r && i.push(e[s]);
            return i;
          },
          map: function (e, t, n) {
            var i,
              s,
              a = 0,
              r = [];
            if (E(e))
              for (i = e.length; a < i; a++)
                null != (s = t(e[a], a, n)) && r.push(s);
            else for (a in e) null != (s = t(e[a], a, n)) && r.push(s);
            return l(r);
          },
          guid: 1,
          support: g,
        }),
        'function' == typeof Symbol &&
          (C.fn[Symbol.iterator] = a[Symbol.iterator]),
        C.each(
          'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(
            ' '
          ),
          function (e, t) {
            u['[object ' + t + ']'] = t.toLowerCase();
          }
        );
      var S = (function (e) {
        var t,
          n,
          i,
          s,
          a,
          r,
          o,
          l,
          d,
          c,
          u,
          p,
          h,
          f,
          m,
          g,
          v,
          y,
          b,
          w = 'sizzle' + 1 * new Date(),
          x = e.document,
          T = 0,
          C = 0,
          E = le(),
          S = le(),
          k = le(),
          M = le(),
          $ = function (e, t) {
            return e === t && (u = !0), 0;
          },
          P = {}.hasOwnProperty,
          L = [],
          z = L.pop,
          A = L.push,
          D = L.push,
          N = L.slice,
          I = function (e, t) {
            for (var n = 0, i = e.length; n < i; n++) if (e[n] === t) return n;
            return -1;
          },
          O =
            'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
          H = '[\\x20\\t\\r\\n\\f]',
          j =
            '(?:\\\\[\\da-fA-F]{1,6}' +
            H +
            '?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+',
          q =
            '\\[' +
            H +
            '*(' +
            j +
            ')(?:' +
            H +
            '*([*^$|!~]?=)' +
            H +
            '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' +
            j +
            '))|)' +
            H +
            '*\\]',
          B =
            ':(' +
            j +
            ')(?:\\(((\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|' +
            q +
            ')*)|.*)\\)|)',
          R = new RegExp(H + '+', 'g'),
          F = new RegExp(
            '^' + H + '+|((?:^|[^\\\\])(?:\\\\.)*)' + H + '+$',
            'g'
          ),
          G = new RegExp('^' + H + '*,' + H + '*'),
          W = new RegExp('^' + H + '*([>+~]|' + H + ')' + H + '*'),
          V = new RegExp(H + '|>'),
          X = new RegExp(B),
          Y = new RegExp('^' + j + '$'),
          _ = {
            ID: new RegExp('^#(' + j + ')'),
            CLASS: new RegExp('^\\.(' + j + ')'),
            TAG: new RegExp('^(' + j + '|[*])'),
            ATTR: new RegExp('^' + q),
            PSEUDO: new RegExp('^' + B),
            CHILD: new RegExp(
              '^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' +
                H +
                '*(even|odd|(([+-]|)(\\d*)n|)' +
                H +
                '*(?:([+-]|)' +
                H +
                '*(\\d+)|))' +
                H +
                '*\\)|)',
              'i'
            ),
            bool: new RegExp('^(?:' + O + ')$', 'i'),
            needsContext: new RegExp(
              '^' +
                H +
                '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' +
                H +
                '*((?:-\\d)?\\d*)' +
                H +
                '*\\)|)(?=[^-]|$)',
              'i'
            ),
          },
          U = /HTML$/i,
          K = /^(?:input|select|textarea|button)$/i,
          Z = /^h\d$/i,
          Q = /^[^{]+\{\s*\[native \w/,
          J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
          ee = /[+~]/,
          te = new RegExp(
            '\\\\[\\da-fA-F]{1,6}' + H + '?|\\\\([^\\r\\n\\f])',
            'g'
          ),
          ne = function (e, t) {
            var n = '0x' + e.slice(1) - 65536;
            return (
              t ||
              (n < 0
                ? String.fromCharCode(n + 65536)
                : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320))
            );
          },
          ie = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
          se = function (e, t) {
            return t
              ? '\0' === e
                ? '�'
                : e.slice(0, -1) +
                  '\\' +
                  e.charCodeAt(e.length - 1).toString(16) +
                  ' '
              : '\\' + e;
          },
          ae = function () {
            p();
          },
          re = we(
            function (e) {
              return (
                !0 === e.disabled && 'fieldset' === e.nodeName.toLowerCase()
              );
            },
            { dir: 'parentNode', next: 'legend' }
          );
        try {
          D.apply((L = N.call(x.childNodes)), x.childNodes),
            L[x.childNodes.length].nodeType;
        } catch (e) {
          D = {
            apply: L.length
              ? function (e, t) {
                  A.apply(e, N.call(t));
                }
              : function (e, t) {
                  for (var n = e.length, i = 0; (e[n++] = t[i++]); );
                  e.length = n - 1;
                },
          };
        }
        function oe(e, t, i, s) {
          var a,
            o,
            d,
            c,
            u,
            f,
            v,
            y = t && t.ownerDocument,
            x = t ? t.nodeType : 9;
          if (
            ((i = i || []),
            'string' != typeof e || !e || (1 !== x && 9 !== x && 11 !== x))
          )
            return i;
          if (!s && (p(t), (t = t || h), m)) {
            if (11 !== x && (u = J.exec(e)))
              if ((a = u[1])) {
                if (9 === x) {
                  if (!(d = t.getElementById(a))) return i;
                  if (d.id === a) return i.push(d), i;
                } else if (
                  y &&
                  (d = y.getElementById(a)) &&
                  b(t, d) &&
                  d.id === a
                )
                  return i.push(d), i;
              } else {
                if (u[2]) return D.apply(i, t.getElementsByTagName(e)), i;
                if (
                  (a = u[3]) &&
                  n.getElementsByClassName &&
                  t.getElementsByClassName
                )
                  return D.apply(i, t.getElementsByClassName(a)), i;
              }
            if (
              n.qsa &&
              !M[e + ' '] &&
              (!g || !g.test(e)) &&
              (1 !== x || 'object' !== t.nodeName.toLowerCase())
            ) {
              if (((v = e), (y = t), 1 === x && (V.test(e) || W.test(e)))) {
                for (
                  ((y = (ee.test(e) && ve(t.parentNode)) || t) === t &&
                    n.scope) ||
                    ((c = t.getAttribute('id'))
                      ? (c = c.replace(ie, se))
                      : t.setAttribute('id', (c = w))),
                    o = (f = r(e)).length;
                  o--;

                )
                  f[o] = (c ? '#' + c : ':scope') + ' ' + be(f[o]);
                v = f.join(',');
              }
              try {
                return D.apply(i, y.querySelectorAll(v)), i;
              } catch (t) {
                M(e, !0);
              } finally {
                c === w && t.removeAttribute('id');
              }
            }
          }
          return l(e.replace(F, '$1'), t, i, s);
        }
        function le() {
          var e = [];
          return function t(n, s) {
            return (
              e.push(n + ' ') > i.cacheLength && delete t[e.shift()],
              (t[n + ' '] = s)
            );
          };
        }
        function de(e) {
          return (e[w] = !0), e;
        }
        function ce(e) {
          var t = h.createElement('fieldset');
          try {
            return !!e(t);
          } catch (e) {
            return !1;
          } finally {
            t.parentNode && t.parentNode.removeChild(t), (t = null);
          }
        }
        function ue(e, t) {
          for (var n = e.split('|'), s = n.length; s--; )
            i.attrHandle[n[s]] = t;
        }
        function pe(e, t) {
          var n = t && e,
            i =
              n &&
              1 === e.nodeType &&
              1 === t.nodeType &&
              e.sourceIndex - t.sourceIndex;
          if (i) return i;
          if (n) for (; (n = n.nextSibling); ) if (n === t) return -1;
          return e ? 1 : -1;
        }
        function he(e) {
          return function (t) {
            return 'input' === t.nodeName.toLowerCase() && t.type === e;
          };
        }
        function fe(e) {
          return function (t) {
            var n = t.nodeName.toLowerCase();
            return ('input' === n || 'button' === n) && t.type === e;
          };
        }
        function me(e) {
          return function (t) {
            return 'form' in t
              ? t.parentNode && !1 === t.disabled
                ? 'label' in t
                  ? 'label' in t.parentNode
                    ? t.parentNode.disabled === e
                    : t.disabled === e
                  : t.isDisabled === e || (t.isDisabled !== !e && re(t) === e)
                : t.disabled === e
              : 'label' in t && t.disabled === e;
          };
        }
        function ge(e) {
          return de(function (t) {
            return (
              (t = +t),
              de(function (n, i) {
                for (var s, a = e([], n.length, t), r = a.length; r--; )
                  n[(s = a[r])] && (n[s] = !(i[s] = n[s]));
              })
            );
          });
        }
        function ve(e) {
          return e && void 0 !== e.getElementsByTagName && e;
        }
        for (t in ((n = oe.support = {}),
        (a = oe.isXML =
          function (e) {
            var t = e.namespaceURI,
              n = (e.ownerDocument || e).documentElement;
            return !U.test(t || (n && n.nodeName) || 'HTML');
          }),
        (p = oe.setDocument =
          function (e) {
            var t,
              s,
              r = e ? e.ownerDocument || e : x;
            return r != h && 9 === r.nodeType && r.documentElement
              ? ((f = (h = r).documentElement),
                (m = !a(h)),
                x != h &&
                  (s = h.defaultView) &&
                  s.top !== s &&
                  (s.addEventListener
                    ? s.addEventListener('unload', ae, !1)
                    : s.attachEvent && s.attachEvent('onunload', ae)),
                (n.scope = ce(function (e) {
                  return (
                    f.appendChild(e).appendChild(h.createElement('div')),
                    void 0 !== e.querySelectorAll &&
                      !e.querySelectorAll(':scope fieldset div').length
                  );
                })),
                (n.attributes = ce(function (e) {
                  return (e.className = 'i'), !e.getAttribute('className');
                })),
                (n.getElementsByTagName = ce(function (e) {
                  return (
                    e.appendChild(h.createComment('')),
                    !e.getElementsByTagName('*').length
                  );
                })),
                (n.getElementsByClassName = Q.test(h.getElementsByClassName)),
                (n.getById = ce(function (e) {
                  return (
                    (f.appendChild(e).id = w),
                    !h.getElementsByName || !h.getElementsByName(w).length
                  );
                })),
                n.getById
                  ? ((i.filter.ID = function (e) {
                      var t = e.replace(te, ne);
                      return function (e) {
                        return e.getAttribute('id') === t;
                      };
                    }),
                    (i.find.ID = function (e, t) {
                      if (void 0 !== t.getElementById && m) {
                        var n = t.getElementById(e);
                        return n ? [n] : [];
                      }
                    }))
                  : ((i.filter.ID = function (e) {
                      var t = e.replace(te, ne);
                      return function (e) {
                        var n =
                          void 0 !== e.getAttributeNode &&
                          e.getAttributeNode('id');
                        return n && n.value === t;
                      };
                    }),
                    (i.find.ID = function (e, t) {
                      if (void 0 !== t.getElementById && m) {
                        var n,
                          i,
                          s,
                          a = t.getElementById(e);
                        if (a) {
                          if ((n = a.getAttributeNode('id')) && n.value === e)
                            return [a];
                          for (
                            s = t.getElementsByName(e), i = 0;
                            (a = s[i++]);

                          )
                            if ((n = a.getAttributeNode('id')) && n.value === e)
                              return [a];
                        }
                        return [];
                      }
                    })),
                (i.find.TAG = n.getElementsByTagName
                  ? function (e, t) {
                      return void 0 !== t.getElementsByTagName
                        ? t.getElementsByTagName(e)
                        : n.qsa
                        ? t.querySelectorAll(e)
                        : void 0;
                    }
                  : function (e, t) {
                      var n,
                        i = [],
                        s = 0,
                        a = t.getElementsByTagName(e);
                      if ('*' === e) {
                        for (; (n = a[s++]); ) 1 === n.nodeType && i.push(n);
                        return i;
                      }
                      return a;
                    }),
                (i.find.CLASS =
                  n.getElementsByClassName &&
                  function (e, t) {
                    if (void 0 !== t.getElementsByClassName && m)
                      return t.getElementsByClassName(e);
                  }),
                (v = []),
                (g = []),
                (n.qsa = Q.test(h.querySelectorAll)) &&
                  (ce(function (e) {
                    var t;
                    (f.appendChild(e).innerHTML =
                      "<a id='" +
                      w +
                      "'></a><select id='" +
                      w +
                      "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                      e.querySelectorAll("[msallowcapture^='']").length &&
                        g.push('[*^$]=' + H + '*(?:\'\'|"")'),
                      e.querySelectorAll('[selected]').length ||
                        g.push('\\[' + H + '*(?:value|' + O + ')'),
                      e.querySelectorAll('[id~=' + w + '-]').length ||
                        g.push('~='),
                      (t = h.createElement('input')).setAttribute('name', ''),
                      e.appendChild(t),
                      e.querySelectorAll("[name='']").length ||
                        g.push(
                          '\\[' + H + '*name' + H + '*=' + H + '*(?:\'\'|"")'
                        ),
                      e.querySelectorAll(':checked').length ||
                        g.push(':checked'),
                      e.querySelectorAll('a#' + w + '+*').length ||
                        g.push('.#.+[+~]'),
                      e.querySelectorAll('\\\f'),
                      g.push('[\\r\\n\\f]');
                  }),
                  ce(function (e) {
                    e.innerHTML =
                      "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var t = h.createElement('input');
                    t.setAttribute('type', 'hidden'),
                      e.appendChild(t).setAttribute('name', 'D'),
                      e.querySelectorAll('[name=d]').length &&
                        g.push('name' + H + '*[*^$|!~]?='),
                      2 !== e.querySelectorAll(':enabled').length &&
                        g.push(':enabled', ':disabled'),
                      (f.appendChild(e).disabled = !0),
                      2 !== e.querySelectorAll(':disabled').length &&
                        g.push(':enabled', ':disabled'),
                      e.querySelectorAll('*,:x'),
                      g.push(',.*:');
                  })),
                (n.matchesSelector = Q.test(
                  (y =
                    f.matches ||
                    f.webkitMatchesSelector ||
                    f.mozMatchesSelector ||
                    f.oMatchesSelector ||
                    f.msMatchesSelector)
                )) &&
                  ce(function (e) {
                    (n.disconnectedMatch = y.call(e, '*')),
                      y.call(e, "[s!='']:x"),
                      v.push('!=', B);
                  }),
                (g = g.length && new RegExp(g.join('|'))),
                (v = v.length && new RegExp(v.join('|'))),
                (t = Q.test(f.compareDocumentPosition)),
                (b =
                  t || Q.test(f.contains)
                    ? function (e, t) {
                        var n = 9 === e.nodeType ? e.documentElement : e,
                          i = t && t.parentNode;
                        return (
                          e === i ||
                          !(
                            !i ||
                            1 !== i.nodeType ||
                            !(n.contains
                              ? n.contains(i)
                              : e.compareDocumentPosition &&
                                16 & e.compareDocumentPosition(i))
                          )
                        );
                      }
                    : function (e, t) {
                        if (t)
                          for (; (t = t.parentNode); ) if (t === e) return !0;
                        return !1;
                      }),
                ($ = t
                  ? function (e, t) {
                      if (e === t) return (u = !0), 0;
                      var i =
                        !e.compareDocumentPosition - !t.compareDocumentPosition;
                      return (
                        i ||
                        (1 &
                          (i =
                            (e.ownerDocument || e) == (t.ownerDocument || t)
                              ? e.compareDocumentPosition(t)
                              : 1) ||
                        (!n.sortDetached && t.compareDocumentPosition(e) === i)
                          ? e == h || (e.ownerDocument == x && b(x, e))
                            ? -1
                            : t == h || (t.ownerDocument == x && b(x, t))
                            ? 1
                            : c
                            ? I(c, e) - I(c, t)
                            : 0
                          : 4 & i
                          ? -1
                          : 1)
                      );
                    }
                  : function (e, t) {
                      if (e === t) return (u = !0), 0;
                      var n,
                        i = 0,
                        s = e.parentNode,
                        a = t.parentNode,
                        r = [e],
                        o = [t];
                      if (!s || !a)
                        return e == h
                          ? -1
                          : t == h
                          ? 1
                          : s
                          ? -1
                          : a
                          ? 1
                          : c
                          ? I(c, e) - I(c, t)
                          : 0;
                      if (s === a) return pe(e, t);
                      for (n = e; (n = n.parentNode); ) r.unshift(n);
                      for (n = t; (n = n.parentNode); ) o.unshift(n);
                      for (; r[i] === o[i]; ) i++;
                      return i
                        ? pe(r[i], o[i])
                        : r[i] == x
                        ? -1
                        : o[i] == x
                        ? 1
                        : 0;
                    }),
                h)
              : h;
          }),
        (oe.matches = function (e, t) {
          return oe(e, null, null, t);
        }),
        (oe.matchesSelector = function (e, t) {
          if (
            (p(e),
            n.matchesSelector &&
              m &&
              !M[t + ' '] &&
              (!v || !v.test(t)) &&
              (!g || !g.test(t)))
          )
            try {
              var i = y.call(e, t);
              if (
                i ||
                n.disconnectedMatch ||
                (e.document && 11 !== e.document.nodeType)
              )
                return i;
            } catch (e) {
              M(t, !0);
            }
          return oe(t, h, null, [e]).length > 0;
        }),
        (oe.contains = function (e, t) {
          return (e.ownerDocument || e) != h && p(e), b(e, t);
        }),
        (oe.attr = function (e, t) {
          (e.ownerDocument || e) != h && p(e);
          var s = i.attrHandle[t.toLowerCase()],
            a =
              s && P.call(i.attrHandle, t.toLowerCase()) ? s(e, t, !m) : void 0;
          return void 0 !== a
            ? a
            : n.attributes || !m
            ? e.getAttribute(t)
            : (a = e.getAttributeNode(t)) && a.specified
            ? a.value
            : null;
        }),
        (oe.escape = function (e) {
          return (e + '').replace(ie, se);
        }),
        (oe.error = function (e) {
          throw new Error('Syntax error, unrecognized expression: ' + e);
        }),
        (oe.uniqueSort = function (e) {
          var t,
            i = [],
            s = 0,
            a = 0;
          if (
            ((u = !n.detectDuplicates),
            (c = !n.sortStable && e.slice(0)),
            e.sort($),
            u)
          ) {
            for (; (t = e[a++]); ) t === e[a] && (s = i.push(a));
            for (; s--; ) e.splice(i[s], 1);
          }
          return (c = null), e;
        }),
        (s = oe.getText =
          function (e) {
            var t,
              n = '',
              i = 0,
              a = e.nodeType;
            if (a) {
              if (1 === a || 9 === a || 11 === a) {
                if ('string' == typeof e.textContent) return e.textContent;
                for (e = e.firstChild; e; e = e.nextSibling) n += s(e);
              } else if (3 === a || 4 === a) return e.nodeValue;
            } else for (; (t = e[i++]); ) n += s(t);
            return n;
          }),
        ((i = oe.selectors =
          {
            cacheLength: 50,
            createPseudo: de,
            match: _,
            attrHandle: {},
            find: {},
            relative: {
              '>': { dir: 'parentNode', first: !0 },
              ' ': { dir: 'parentNode' },
              '+': { dir: 'previousSibling', first: !0 },
              '~': { dir: 'previousSibling' },
            },
            preFilter: {
              ATTR: function (e) {
                return (
                  (e[1] = e[1].replace(te, ne)),
                  (e[3] = (e[3] || e[4] || e[5] || '').replace(te, ne)),
                  '~=' === e[2] && (e[3] = ' ' + e[3] + ' '),
                  e.slice(0, 4)
                );
              },
              CHILD: function (e) {
                return (
                  (e[1] = e[1].toLowerCase()),
                  'nth' === e[1].slice(0, 3)
                    ? (e[3] || oe.error(e[0]),
                      (e[4] = +(e[4]
                        ? e[5] + (e[6] || 1)
                        : 2 * ('even' === e[3] || 'odd' === e[3]))),
                      (e[5] = +(e[7] + e[8] || 'odd' === e[3])))
                    : e[3] && oe.error(e[0]),
                  e
                );
              },
              PSEUDO: function (e) {
                var t,
                  n = !e[6] && e[2];
                return _.CHILD.test(e[0])
                  ? null
                  : (e[3]
                      ? (e[2] = e[4] || e[5] || '')
                      : n &&
                        X.test(n) &&
                        (t = r(n, !0)) &&
                        (t = n.indexOf(')', n.length - t) - n.length) &&
                        ((e[0] = e[0].slice(0, t)), (e[2] = n.slice(0, t))),
                    e.slice(0, 3));
              },
            },
            filter: {
              TAG: function (e) {
                var t = e.replace(te, ne).toLowerCase();
                return '*' === e
                  ? function () {
                      return !0;
                    }
                  : function (e) {
                      return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
              },
              CLASS: function (e) {
                var t = E[e + ' '];
                return (
                  t ||
                  ((t = new RegExp('(^|' + H + ')' + e + '(' + H + '|$)')) &&
                    E(e, function (e) {
                      return t.test(
                        ('string' == typeof e.className && e.className) ||
                          (void 0 !== e.getAttribute &&
                            e.getAttribute('class')) ||
                          ''
                      );
                    }))
                );
              },
              ATTR: function (e, t, n) {
                return function (i) {
                  var s = oe.attr(i, e);
                  return null == s
                    ? '!=' === t
                    : !t ||
                        ((s += ''),
                        '=' === t
                          ? s === n
                          : '!=' === t
                          ? s !== n
                          : '^=' === t
                          ? n && 0 === s.indexOf(n)
                          : '*=' === t
                          ? n && s.indexOf(n) > -1
                          : '$=' === t
                          ? n && s.slice(-n.length) === n
                          : '~=' === t
                          ? (' ' + s.replace(R, ' ') + ' ').indexOf(n) > -1
                          : '|=' === t &&
                            (s === n || s.slice(0, n.length + 1) === n + '-'));
                };
              },
              CHILD: function (e, t, n, i, s) {
                var a = 'nth' !== e.slice(0, 3),
                  r = 'last' !== e.slice(-4),
                  o = 'of-type' === t;
                return 1 === i && 0 === s
                  ? function (e) {
                      return !!e.parentNode;
                    }
                  : function (t, n, l) {
                      var d,
                        c,
                        u,
                        p,
                        h,
                        f,
                        m = a !== r ? 'nextSibling' : 'previousSibling',
                        g = t.parentNode,
                        v = o && t.nodeName.toLowerCase(),
                        y = !l && !o,
                        b = !1;
                      if (g) {
                        if (a) {
                          for (; m; ) {
                            for (p = t; (p = p[m]); )
                              if (
                                o
                                  ? p.nodeName.toLowerCase() === v
                                  : 1 === p.nodeType
                              )
                                return !1;
                            f = m = 'only' === e && !f && 'nextSibling';
                          }
                          return !0;
                        }
                        if (((f = [r ? g.firstChild : g.lastChild]), r && y)) {
                          for (
                            b =
                              (h =
                                (d =
                                  (c =
                                    (u = (p = g)[w] || (p[w] = {}))[
                                      p.uniqueID
                                    ] || (u[p.uniqueID] = {}))[e] || [])[0] ===
                                  T && d[1]) && d[2],
                              p = h && g.childNodes[h];
                            (p = (++h && p && p[m]) || (b = h = 0) || f.pop());

                          )
                            if (1 === p.nodeType && ++b && p === t) {
                              c[e] = [T, h, b];
                              break;
                            }
                        } else if (
                          (y &&
                            (b = h =
                              (d =
                                (c =
                                  (u = (p = t)[w] || (p[w] = {}))[p.uniqueID] ||
                                  (u[p.uniqueID] = {}))[e] || [])[0] === T &&
                              d[1]),
                          !1 === b)
                        )
                          for (
                            ;
                            (p =
                              (++h && p && p[m]) || (b = h = 0) || f.pop()) &&
                            ((o
                              ? p.nodeName.toLowerCase() !== v
                              : 1 !== p.nodeType) ||
                              !++b ||
                              (y &&
                                ((c =
                                  (u = p[w] || (p[w] = {}))[p.uniqueID] ||
                                  (u[p.uniqueID] = {}))[e] = [T, b]),
                              p !== t));

                          );
                        return (b -= s) === i || (b % i == 0 && b / i >= 0);
                      }
                    };
              },
              PSEUDO: function (e, t) {
                var n,
                  s =
                    i.pseudos[e] ||
                    i.setFilters[e.toLowerCase()] ||
                    oe.error('unsupported pseudo: ' + e);
                return s[w]
                  ? s(t)
                  : s.length > 1
                  ? ((n = [e, e, '', t]),
                    i.setFilters.hasOwnProperty(e.toLowerCase())
                      ? de(function (e, n) {
                          for (var i, a = s(e, t), r = a.length; r--; )
                            e[(i = I(e, a[r]))] = !(n[i] = a[r]);
                        })
                      : function (e) {
                          return s(e, 0, n);
                        })
                  : s;
              },
            },
            pseudos: {
              not: de(function (e) {
                var t = [],
                  n = [],
                  i = o(e.replace(F, '$1'));
                return i[w]
                  ? de(function (e, t, n, s) {
                      for (var a, r = i(e, null, s, []), o = e.length; o--; )
                        (a = r[o]) && (e[o] = !(t[o] = a));
                    })
                  : function (e, s, a) {
                      return (
                        (t[0] = e), i(t, null, a, n), (t[0] = null), !n.pop()
                      );
                    };
              }),
              has: de(function (e) {
                return function (t) {
                  return oe(e, t).length > 0;
                };
              }),
              contains: de(function (e) {
                return (
                  (e = e.replace(te, ne)),
                  function (t) {
                    return (t.textContent || s(t)).indexOf(e) > -1;
                  }
                );
              }),
              lang: de(function (e) {
                return (
                  Y.test(e || '') || oe.error('unsupported lang: ' + e),
                  (e = e.replace(te, ne).toLowerCase()),
                  function (t) {
                    var n;
                    do {
                      if (
                        (n = m
                          ? t.lang
                          : t.getAttribute('xml:lang') ||
                            t.getAttribute('lang'))
                      )
                        return (
                          (n = n.toLowerCase()) === e ||
                          0 === n.indexOf(e + '-')
                        );
                    } while ((t = t.parentNode) && 1 === t.nodeType);
                    return !1;
                  }
                );
              }),
              target: function (t) {
                var n = e.location && e.location.hash;
                return n && n.slice(1) === t.id;
              },
              root: function (e) {
                return e === f;
              },
              focus: function (e) {
                return (
                  e === h.activeElement &&
                  (!h.hasFocus || h.hasFocus()) &&
                  !!(e.type || e.href || ~e.tabIndex)
                );
              },
              enabled: me(!1),
              disabled: me(!0),
              checked: function (e) {
                var t = e.nodeName.toLowerCase();
                return (
                  ('input' === t && !!e.checked) ||
                  ('option' === t && !!e.selected)
                );
              },
              selected: function (e) {
                return (
                  e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                );
              },
              empty: function (e) {
                for (e = e.firstChild; e; e = e.nextSibling)
                  if (e.nodeType < 6) return !1;
                return !0;
              },
              parent: function (e) {
                return !i.pseudos.empty(e);
              },
              header: function (e) {
                return Z.test(e.nodeName);
              },
              input: function (e) {
                return K.test(e.nodeName);
              },
              button: function (e) {
                var t = e.nodeName.toLowerCase();
                return ('input' === t && 'button' === e.type) || 'button' === t;
              },
              text: function (e) {
                var t;
                return (
                  'input' === e.nodeName.toLowerCase() &&
                  'text' === e.type &&
                  (null == (t = e.getAttribute('type')) ||
                    'text' === t.toLowerCase())
                );
              },
              first: ge(function () {
                return [0];
              }),
              last: ge(function (e, t) {
                return [t - 1];
              }),
              eq: ge(function (e, t, n) {
                return [n < 0 ? n + t : n];
              }),
              even: ge(function (e, t) {
                for (var n = 0; n < t; n += 2) e.push(n);
                return e;
              }),
              odd: ge(function (e, t) {
                for (var n = 1; n < t; n += 2) e.push(n);
                return e;
              }),
              lt: ge(function (e, t, n) {
                for (var i = n < 0 ? n + t : n > t ? t : n; --i >= 0; )
                  e.push(i);
                return e;
              }),
              gt: ge(function (e, t, n) {
                for (var i = n < 0 ? n + t : n; ++i < t; ) e.push(i);
                return e;
              }),
            },
          }).pseudos.nth = i.pseudos.eq),
        { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
          i.pseudos[t] = he(t);
        for (t in { submit: !0, reset: !0 }) i.pseudos[t] = fe(t);
        function ye() {}
        function be(e) {
          for (var t = 0, n = e.length, i = ''; t < n; t++) i += e[t].value;
          return i;
        }
        function we(e, t, n) {
          var i = t.dir,
            s = t.next,
            a = s || i,
            r = n && 'parentNode' === a,
            o = C++;
          return t.first
            ? function (t, n, s) {
                for (; (t = t[i]); )
                  if (1 === t.nodeType || r) return e(t, n, s);
                return !1;
              }
            : function (t, n, l) {
                var d,
                  c,
                  u,
                  p = [T, o];
                if (l) {
                  for (; (t = t[i]); )
                    if ((1 === t.nodeType || r) && e(t, n, l)) return !0;
                } else
                  for (; (t = t[i]); )
                    if (1 === t.nodeType || r)
                      if (
                        ((c =
                          (u = t[w] || (t[w] = {}))[t.uniqueID] ||
                          (u[t.uniqueID] = {})),
                        s && s === t.nodeName.toLowerCase())
                      )
                        t = t[i] || t;
                      else {
                        if ((d = c[a]) && d[0] === T && d[1] === o)
                          return (p[2] = d[2]);
                        if (((c[a] = p), (p[2] = e(t, n, l)))) return !0;
                      }
                return !1;
              };
        }
        function xe(e) {
          return e.length > 1
            ? function (t, n, i) {
                for (var s = e.length; s--; ) if (!e[s](t, n, i)) return !1;
                return !0;
              }
            : e[0];
        }
        function Te(e, t, n, i, s) {
          for (var a, r = [], o = 0, l = e.length, d = null != t; o < l; o++)
            (a = e[o]) && ((n && !n(a, i, s)) || (r.push(a), d && t.push(o)));
          return r;
        }
        function Ce(e, t, n, i, s, a) {
          return (
            i && !i[w] && (i = Ce(i)),
            s && !s[w] && (s = Ce(s, a)),
            de(function (a, r, o, l) {
              var d,
                c,
                u,
                p = [],
                h = [],
                f = r.length,
                m =
                  a ||
                  (function (e, t, n) {
                    for (var i = 0, s = t.length; i < s; i++) oe(e, t[i], n);
                    return n;
                  })(t || '*', o.nodeType ? [o] : o, []),
                g = !e || (!a && t) ? m : Te(m, p, e, o, l),
                v = n ? (s || (a ? e : f || i) ? [] : r) : g;
              if ((n && n(g, v, o, l), i))
                for (d = Te(v, h), i(d, [], o, l), c = d.length; c--; )
                  (u = d[c]) && (v[h[c]] = !(g[h[c]] = u));
              if (a) {
                if (s || e) {
                  if (s) {
                    for (d = [], c = v.length; c--; )
                      (u = v[c]) && d.push((g[c] = u));
                    s(null, (v = []), d, l);
                  }
                  for (c = v.length; c--; )
                    (u = v[c]) &&
                      (d = s ? I(a, u) : p[c]) > -1 &&
                      (a[d] = !(r[d] = u));
                }
              } else (v = Te(v === r ? v.splice(f, v.length) : v)), s ? s(null, r, v, l) : D.apply(r, v);
            })
          );
        }
        function Ee(e) {
          for (
            var t,
              n,
              s,
              a = e.length,
              r = i.relative[e[0].type],
              o = r || i.relative[' '],
              l = r ? 1 : 0,
              c = we(
                function (e) {
                  return e === t;
                },
                o,
                !0
              ),
              u = we(
                function (e) {
                  return I(t, e) > -1;
                },
                o,
                !0
              ),
              p = [
                function (e, n, i) {
                  var s =
                    (!r && (i || n !== d)) ||
                    ((t = n).nodeType ? c(e, n, i) : u(e, n, i));
                  return (t = null), s;
                },
              ];
            l < a;
            l++
          )
            if ((n = i.relative[e[l].type])) p = [we(xe(p), n)];
            else {
              if ((n = i.filter[e[l].type].apply(null, e[l].matches))[w]) {
                for (s = ++l; s < a && !i.relative[e[s].type]; s++);
                return Ce(
                  l > 1 && xe(p),
                  l > 1 &&
                    be(
                      e
                        .slice(0, l - 1)
                        .concat({ value: ' ' === e[l - 2].type ? '*' : '' })
                    ).replace(F, '$1'),
                  n,
                  l < s && Ee(e.slice(l, s)),
                  s < a && Ee((e = e.slice(s))),
                  s < a && be(e)
                );
              }
              p.push(n);
            }
          return xe(p);
        }
        return (
          (ye.prototype = i.filters = i.pseudos),
          (i.setFilters = new ye()),
          (r = oe.tokenize =
            function (e, t) {
              var n,
                s,
                a,
                r,
                o,
                l,
                d,
                c = S[e + ' '];
              if (c) return t ? 0 : c.slice(0);
              for (o = e, l = [], d = i.preFilter; o; ) {
                for (r in ((n && !(s = G.exec(o))) ||
                  (s && (o = o.slice(s[0].length) || o), l.push((a = []))),
                (n = !1),
                (s = W.exec(o)) &&
                  ((n = s.shift()),
                  a.push({ value: n, type: s[0].replace(F, ' ') }),
                  (o = o.slice(n.length))),
                i.filter))
                  !(s = _[r].exec(o)) ||
                    (d[r] && !(s = d[r](s))) ||
                    ((n = s.shift()),
                    a.push({ value: n, type: r, matches: s }),
                    (o = o.slice(n.length)));
                if (!n) break;
              }
              return t ? o.length : o ? oe.error(e) : S(e, l).slice(0);
            }),
          (o = oe.compile =
            function (e, t) {
              var n,
                s = [],
                a = [],
                o = k[e + ' '];
              if (!o) {
                for (t || (t = r(e)), n = t.length; n--; )
                  (o = Ee(t[n]))[w] ? s.push(o) : a.push(o);
                (o = k(
                  e,
                  (function (e, t) {
                    var n = t.length > 0,
                      s = e.length > 0,
                      a = function (a, r, o, l, c) {
                        var u,
                          f,
                          g,
                          v = 0,
                          y = '0',
                          b = a && [],
                          w = [],
                          x = d,
                          C = a || (s && i.find.TAG('*', c)),
                          E = (T += null == x ? 1 : Math.random() || 0.1),
                          S = C.length;
                        for (
                          c && (d = r == h || r || c);
                          y !== S && null != (u = C[y]);
                          y++
                        ) {
                          if (s && u) {
                            for (
                              f = 0,
                                r || u.ownerDocument == h || (p(u), (o = !m));
                              (g = e[f++]);

                            )
                              if (g(u, r || h, o)) {
                                l.push(u);
                                break;
                              }
                            c && (T = E);
                          }
                          n && ((u = !g && u) && v--, a && b.push(u));
                        }
                        if (((v += y), n && y !== v)) {
                          for (f = 0; (g = t[f++]); ) g(b, w, r, o);
                          if (a) {
                            if (v > 0)
                              for (; y--; ) b[y] || w[y] || (w[y] = z.call(l));
                            w = Te(w);
                          }
                          D.apply(l, w),
                            c &&
                              !a &&
                              w.length > 0 &&
                              v + t.length > 1 &&
                              oe.uniqueSort(l);
                        }
                        return c && ((T = E), (d = x)), b;
                      };
                    return n ? de(a) : a;
                  })(a, s)
                )).selector = e;
              }
              return o;
            }),
          (l = oe.select =
            function (e, t, n, s) {
              var a,
                l,
                d,
                c,
                u,
                p = 'function' == typeof e && e,
                h = !s && r((e = p.selector || e));
              if (((n = n || []), 1 === h.length)) {
                if (
                  (l = h[0] = h[0].slice(0)).length > 2 &&
                  'ID' === (d = l[0]).type &&
                  9 === t.nodeType &&
                  m &&
                  i.relative[l[1].type]
                ) {
                  if (
                    !(t = (i.find.ID(d.matches[0].replace(te, ne), t) || [])[0])
                  )
                    return n;
                  p && (t = t.parentNode),
                    (e = e.slice(l.shift().value.length));
                }
                for (
                  a = _.needsContext.test(e) ? 0 : l.length;
                  a-- && ((d = l[a]), !i.relative[(c = d.type)]);

                )
                  if (
                    (u = i.find[c]) &&
                    (s = u(
                      d.matches[0].replace(te, ne),
                      (ee.test(l[0].type) && ve(t.parentNode)) || t
                    ))
                  ) {
                    if ((l.splice(a, 1), !(e = s.length && be(l))))
                      return D.apply(n, s), n;
                    break;
                  }
              }
              return (
                (p || o(e, h))(
                  s,
                  t,
                  !m,
                  n,
                  !t || (ee.test(e) && ve(t.parentNode)) || t
                ),
                n
              );
            }),
          (n.sortStable = w.split('').sort($).join('') === w),
          (n.detectDuplicates = !!u),
          p(),
          (n.sortDetached = ce(function (e) {
            return 1 & e.compareDocumentPosition(h.createElement('fieldset'));
          })),
          ce(function (e) {
            return (
              (e.innerHTML = "<a href='#'></a>"),
              '#' === e.firstChild.getAttribute('href')
            );
          }) ||
            ue('type|href|height|width', function (e, t, n) {
              if (!n)
                return e.getAttribute(t, 'type' === t.toLowerCase() ? 1 : 2);
            }),
          (n.attributes &&
            ce(function (e) {
              return (
                (e.innerHTML = '<input/>'),
                e.firstChild.setAttribute('value', ''),
                '' === e.firstChild.getAttribute('value')
              );
            })) ||
            ue('value', function (e, t, n) {
              if (!n && 'input' === e.nodeName.toLowerCase())
                return e.defaultValue;
            }),
          ce(function (e) {
            return null == e.getAttribute('disabled');
          }) ||
            ue(O, function (e, t, n) {
              var i;
              if (!n)
                return !0 === e[t]
                  ? t.toLowerCase()
                  : (i = e.getAttributeNode(t)) && i.specified
                  ? i.value
                  : null;
            }),
          oe
        );
      })(n);
      (C.find = S),
        (C.expr = S.selectors),
        (C.expr[':'] = C.expr.pseudos),
        (C.uniqueSort = C.unique = S.uniqueSort),
        (C.text = S.getText),
        (C.isXMLDoc = S.isXML),
        (C.contains = S.contains),
        (C.escapeSelector = S.escape);
      var k = function (e, t, n) {
          for (var i = [], s = void 0 !== n; (e = e[t]) && 9 !== e.nodeType; )
            if (1 === e.nodeType) {
              if (s && C(e).is(n)) break;
              i.push(e);
            }
          return i;
        },
        M = function (e, t) {
          for (var n = []; e; e = e.nextSibling)
            1 === e.nodeType && e !== t && n.push(e);
          return n;
        },
        $ = C.expr.match.needsContext;
      function P(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
      }
      var L = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
      function z(e, t, n) {
        return v(t)
          ? C.grep(e, function (e, i) {
              return !!t.call(e, i, e) !== n;
            })
          : t.nodeType
          ? C.grep(e, function (e) {
              return (e === t) !== n;
            })
          : 'string' != typeof t
          ? C.grep(e, function (e) {
              return c.call(t, e) > -1 !== n;
            })
          : C.filter(t, e, n);
      }
      (C.filter = function (e, t, n) {
        var i = t[0];
        return (
          n && (e = ':not(' + e + ')'),
          1 === t.length && 1 === i.nodeType
            ? C.find.matchesSelector(i, e)
              ? [i]
              : []
            : C.find.matches(
                e,
                C.grep(t, function (e) {
                  return 1 === e.nodeType;
                })
              )
        );
      }),
        C.fn.extend({
          find: function (e) {
            var t,
              n,
              i = this.length,
              s = this;
            if ('string' != typeof e)
              return this.pushStack(
                C(e).filter(function () {
                  for (t = 0; t < i; t++) if (C.contains(s[t], this)) return !0;
                })
              );
            for (n = this.pushStack([]), t = 0; t < i; t++) C.find(e, s[t], n);
            return i > 1 ? C.uniqueSort(n) : n;
          },
          filter: function (e) {
            return this.pushStack(z(this, e || [], !1));
          },
          not: function (e) {
            return this.pushStack(z(this, e || [], !0));
          },
          is: function (e) {
            return !!z(
              this,
              'string' == typeof e && $.test(e) ? C(e) : e || [],
              !1
            ).length;
          },
        });
      var A,
        D = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
      ((C.fn.init = function (e, t, n) {
        var i, s;
        if (!e) return this;
        if (((n = n || A), 'string' == typeof e)) {
          if (
            !(i =
              '<' === e[0] && '>' === e[e.length - 1] && e.length >= 3
                ? [null, e, null]
                : D.exec(e)) ||
            (!i[1] && t)
          )
            return !t || t.jquery
              ? (t || n).find(e)
              : this.constructor(t).find(e);
          if (i[1]) {
            if (
              ((t = t instanceof C ? t[0] : t),
              C.merge(
                this,
                C.parseHTML(
                  i[1],
                  t && t.nodeType ? t.ownerDocument || t : b,
                  !0
                )
              ),
              L.test(i[1]) && C.isPlainObject(t))
            )
              for (i in t) v(this[i]) ? this[i](t[i]) : this.attr(i, t[i]);
            return this;
          }
          return (
            (s = b.getElementById(i[2])) && ((this[0] = s), (this.length = 1)),
            this
          );
        }
        return e.nodeType
          ? ((this[0] = e), (this.length = 1), this)
          : v(e)
          ? void 0 !== n.ready
            ? n.ready(e)
            : e(C)
          : C.makeArray(e, this);
      }).prototype = C.fn),
        (A = C(b));
      var N = /^(?:parents|prev(?:Until|All))/,
        I = { children: !0, contents: !0, next: !0, prev: !0 };
      function O(e, t) {
        for (; (e = e[t]) && 1 !== e.nodeType; );
        return e;
      }
      C.fn.extend({
        has: function (e) {
          var t = C(e, this),
            n = t.length;
          return this.filter(function () {
            for (var e = 0; e < n; e++) if (C.contains(this, t[e])) return !0;
          });
        },
        closest: function (e, t) {
          var n,
            i = 0,
            s = this.length,
            a = [],
            r = 'string' != typeof e && C(e);
          if (!$.test(e))
            for (; i < s; i++)
              for (n = this[i]; n && n !== t; n = n.parentNode)
                if (
                  n.nodeType < 11 &&
                  (r
                    ? r.index(n) > -1
                    : 1 === n.nodeType && C.find.matchesSelector(n, e))
                ) {
                  a.push(n);
                  break;
                }
          return this.pushStack(a.length > 1 ? C.uniqueSort(a) : a);
        },
        index: function (e) {
          return e
            ? 'string' == typeof e
              ? c.call(C(e), this[0])
              : c.call(this, e.jquery ? e[0] : e)
            : this[0] && this[0].parentNode
            ? this.first().prevAll().length
            : -1;
        },
        add: function (e, t) {
          return this.pushStack(C.uniqueSort(C.merge(this.get(), C(e, t))));
        },
        addBack: function (e) {
          return this.add(
            null == e ? this.prevObject : this.prevObject.filter(e)
          );
        },
      }),
        C.each(
          {
            parent: function (e) {
              var t = e.parentNode;
              return t && 11 !== t.nodeType ? t : null;
            },
            parents: function (e) {
              return k(e, 'parentNode');
            },
            parentsUntil: function (e, t, n) {
              return k(e, 'parentNode', n);
            },
            next: function (e) {
              return O(e, 'nextSibling');
            },
            prev: function (e) {
              return O(e, 'previousSibling');
            },
            nextAll: function (e) {
              return k(e, 'nextSibling');
            },
            prevAll: function (e) {
              return k(e, 'previousSibling');
            },
            nextUntil: function (e, t, n) {
              return k(e, 'nextSibling', n);
            },
            prevUntil: function (e, t, n) {
              return k(e, 'previousSibling', n);
            },
            siblings: function (e) {
              return M((e.parentNode || {}).firstChild, e);
            },
            children: function (e) {
              return M(e.firstChild);
            },
            contents: function (e) {
              return null != e.contentDocument && r(e.contentDocument)
                ? e.contentDocument
                : (P(e, 'template') && (e = e.content || e),
                  C.merge([], e.childNodes));
            },
          },
          function (e, t) {
            C.fn[e] = function (n, i) {
              var s = C.map(this, t, n);
              return (
                'Until' !== e.slice(-5) && (i = n),
                i && 'string' == typeof i && (s = C.filter(i, s)),
                this.length > 1 &&
                  (I[e] || C.uniqueSort(s), N.test(e) && s.reverse()),
                this.pushStack(s)
              );
            };
          }
        );
      var H = /[^\x20\t\r\n\f]+/g;
      function j(e) {
        return e;
      }
      function q(e) {
        throw e;
      }
      function B(e, t, n, i) {
        var s;
        try {
          e && v((s = e.promise))
            ? s.call(e).done(t).fail(n)
            : e && v((s = e.then))
            ? s.call(e, t, n)
            : t.apply(void 0, [e].slice(i));
        } catch (e) {
          n.apply(void 0, [e]);
        }
      }
      (C.Callbacks = function (e) {
        e =
          'string' == typeof e
            ? (function (e) {
                var t = {};
                return (
                  C.each(e.match(H) || [], function (e, n) {
                    t[n] = !0;
                  }),
                  t
                );
              })(e)
            : C.extend({}, e);
        var t,
          n,
          i,
          s,
          a = [],
          r = [],
          o = -1,
          l = function () {
            for (s = s || e.once, i = t = !0; r.length; o = -1)
              for (n = r.shift(); ++o < a.length; )
                !1 === a[o].apply(n[0], n[1]) &&
                  e.stopOnFalse &&
                  ((o = a.length), (n = !1));
            e.memory || (n = !1), (t = !1), s && (a = n ? [] : '');
          },
          d = {
            add: function () {
              return (
                a &&
                  (n && !t && ((o = a.length - 1), r.push(n)),
                  (function t(n) {
                    C.each(n, function (n, i) {
                      v(i)
                        ? (e.unique && d.has(i)) || a.push(i)
                        : i && i.length && 'string' !== T(i) && t(i);
                    });
                  })(arguments),
                  n && !t && l()),
                this
              );
            },
            remove: function () {
              return (
                C.each(arguments, function (e, t) {
                  for (var n; (n = C.inArray(t, a, n)) > -1; )
                    a.splice(n, 1), n <= o && o--;
                }),
                this
              );
            },
            has: function (e) {
              return e ? C.inArray(e, a) > -1 : a.length > 0;
            },
            empty: function () {
              return a && (a = []), this;
            },
            disable: function () {
              return (s = r = []), (a = n = ''), this;
            },
            disabled: function () {
              return !a;
            },
            lock: function () {
              return (s = r = []), n || t || (a = n = ''), this;
            },
            locked: function () {
              return !!s;
            },
            fireWith: function (e, n) {
              return (
                s ||
                  ((n = [e, (n = n || []).slice ? n.slice() : n]),
                  r.push(n),
                  t || l()),
                this
              );
            },
            fire: function () {
              return d.fireWith(this, arguments), this;
            },
            fired: function () {
              return !!i;
            },
          };
        return d;
      }),
        C.extend({
          Deferred: function (e) {
            var t = [
                [
                  'notify',
                  'progress',
                  C.Callbacks('memory'),
                  C.Callbacks('memory'),
                  2,
                ],
                [
                  'resolve',
                  'done',
                  C.Callbacks('once memory'),
                  C.Callbacks('once memory'),
                  0,
                  'resolved',
                ],
                [
                  'reject',
                  'fail',
                  C.Callbacks('once memory'),
                  C.Callbacks('once memory'),
                  1,
                  'rejected',
                ],
              ],
              i = 'pending',
              s = {
                state: function () {
                  return i;
                },
                always: function () {
                  return a.done(arguments).fail(arguments), this;
                },
                catch: function (e) {
                  return s.then(null, e);
                },
                pipe: function () {
                  var e = arguments;
                  return C.Deferred(function (n) {
                    C.each(t, function (t, i) {
                      var s = v(e[i[4]]) && e[i[4]];
                      a[i[1]](function () {
                        var e = s && s.apply(this, arguments);
                        e && v(e.promise)
                          ? e
                              .promise()
                              .progress(n.notify)
                              .done(n.resolve)
                              .fail(n.reject)
                          : n[i[0] + 'With'](this, s ? [e] : arguments);
                      });
                    }),
                      (e = null);
                  }).promise();
                },
                then: function (e, i, s) {
                  var a = 0;
                  function r(e, t, i, s) {
                    return function () {
                      var o = this,
                        l = arguments,
                        d = function () {
                          var n, d;
                          if (!(e < a)) {
                            if ((n = i.apply(o, l)) === t.promise())
                              throw new TypeError('Thenable self-resolution');
                            (d =
                              n &&
                              ('object' == typeof n ||
                                'function' == typeof n) &&
                              n.then),
                              v(d)
                                ? s
                                  ? d.call(n, r(a, t, j, s), r(a, t, q, s))
                                  : (a++,
                                    d.call(
                                      n,
                                      r(a, t, j, s),
                                      r(a, t, q, s),
                                      r(a, t, j, t.notifyWith)
                                    ))
                                : (i !== j && ((o = void 0), (l = [n])),
                                  (s || t.resolveWith)(o, l));
                          }
                        },
                        c = s
                          ? d
                          : function () {
                              try {
                                d();
                              } catch (n) {
                                C.Deferred.exceptionHook &&
                                  C.Deferred.exceptionHook(n, c.stackTrace),
                                  e + 1 >= a &&
                                    (i !== q && ((o = void 0), (l = [n])),
                                    t.rejectWith(o, l));
                              }
                            };
                      e
                        ? c()
                        : (C.Deferred.getStackHook &&
                            (c.stackTrace = C.Deferred.getStackHook()),
                          n.setTimeout(c));
                    };
                  }
                  return C.Deferred(function (n) {
                    t[0][3].add(r(0, n, v(s) ? s : j, n.notifyWith)),
                      t[1][3].add(r(0, n, v(e) ? e : j)),
                      t[2][3].add(r(0, n, v(i) ? i : q));
                  }).promise();
                },
                promise: function (e) {
                  return null != e ? C.extend(e, s) : s;
                },
              },
              a = {};
            return (
              C.each(t, function (e, n) {
                var r = n[2],
                  o = n[5];
                (s[n[1]] = r.add),
                  o &&
                    r.add(
                      function () {
                        i = o;
                      },
                      t[3 - e][2].disable,
                      t[3 - e][3].disable,
                      t[0][2].lock,
                      t[0][3].lock
                    ),
                  r.add(n[3].fire),
                  (a[n[0]] = function () {
                    return (
                      a[n[0] + 'With'](this === a ? void 0 : this, arguments),
                      this
                    );
                  }),
                  (a[n[0] + 'With'] = r.fireWith);
              }),
              s.promise(a),
              e && e.call(a, a),
              a
            );
          },
          when: function (e) {
            var t = arguments.length,
              n = t,
              i = Array(n),
              s = o.call(arguments),
              a = C.Deferred(),
              r = function (e) {
                return function (n) {
                  (i[e] = this),
                    (s[e] = arguments.length > 1 ? o.call(arguments) : n),
                    --t || a.resolveWith(i, s);
                };
              };
            if (
              t <= 1 &&
              (B(e, a.done(r(n)).resolve, a.reject, !t),
              'pending' === a.state() || v(s[n] && s[n].then))
            )
              return a.then();
            for (; n--; ) B(s[n], r(n), a.reject);
            return a.promise();
          },
        });
      var R = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      (C.Deferred.exceptionHook = function (e, t) {
        n.console &&
          n.console.warn &&
          e &&
          R.test(e.name) &&
          n.console.warn('jQuery.Deferred exception: ' + e.message, e.stack, t);
      }),
        (C.readyException = function (e) {
          n.setTimeout(function () {
            throw e;
          });
        });
      var F = C.Deferred();
      function G() {
        b.removeEventListener('DOMContentLoaded', G),
          n.removeEventListener('load', G),
          C.ready();
      }
      (C.fn.ready = function (e) {
        return (
          F.then(e).catch(function (e) {
            C.readyException(e);
          }),
          this
        );
      }),
        C.extend({
          isReady: !1,
          readyWait: 1,
          ready: function (e) {
            (!0 === e ? --C.readyWait : C.isReady) ||
              ((C.isReady = !0),
              (!0 !== e && --C.readyWait > 0) || F.resolveWith(b, [C]));
          },
        }),
        (C.ready.then = F.then),
        'complete' === b.readyState ||
        ('loading' !== b.readyState && !b.documentElement.doScroll)
          ? n.setTimeout(C.ready)
          : (b.addEventListener('DOMContentLoaded', G),
            n.addEventListener('load', G));
      var W = function (e, t, n, i, s, a, r) {
          var o = 0,
            l = e.length,
            d = null == n;
          if ('object' === T(n))
            for (o in ((s = !0), n)) W(e, t, o, n[o], !0, a, r);
          else if (
            void 0 !== i &&
            ((s = !0),
            v(i) || (r = !0),
            d &&
              (r
                ? (t.call(e, i), (t = null))
                : ((d = t),
                  (t = function (e, t, n) {
                    return d.call(C(e), n);
                  }))),
            t)
          )
            for (; o < l; o++) t(e[o], n, r ? i : i.call(e[o], o, t(e[o], n)));
          return s ? e : d ? t.call(e) : l ? t(e[0], n) : a;
        },
        V = /^-ms-/,
        X = /-([a-z])/g;
      function Y(e, t) {
        return t.toUpperCase();
      }
      function _(e) {
        return e.replace(V, 'ms-').replace(X, Y);
      }
      var U = function (e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
      };
      function K() {
        this.expando = C.expando + K.uid++;
      }
      (K.uid = 1),
        (K.prototype = {
          cache: function (e) {
            var t = e[this.expando];
            return (
              t ||
                ((t = {}),
                U(e) &&
                  (e.nodeType
                    ? (e[this.expando] = t)
                    : Object.defineProperty(e, this.expando, {
                        value: t,
                        configurable: !0,
                      }))),
              t
            );
          },
          set: function (e, t, n) {
            var i,
              s = this.cache(e);
            if ('string' == typeof t) s[_(t)] = n;
            else for (i in t) s[_(i)] = t[i];
            return s;
          },
          get: function (e, t) {
            return void 0 === t
              ? this.cache(e)
              : e[this.expando] && e[this.expando][_(t)];
          },
          access: function (e, t, n) {
            return void 0 === t || (t && 'string' == typeof t && void 0 === n)
              ? this.get(e, t)
              : (this.set(e, t, n), void 0 !== n ? n : t);
          },
          remove: function (e, t) {
            var n,
              i = e[this.expando];
            if (void 0 !== i) {
              if (void 0 !== t) {
                n = (t = Array.isArray(t)
                  ? t.map(_)
                  : (t = _(t)) in i
                  ? [t]
                  : t.match(H) || []).length;
                for (; n--; ) delete i[t[n]];
              }
              (void 0 === t || C.isEmptyObject(i)) &&
                (e.nodeType
                  ? (e[this.expando] = void 0)
                  : delete e[this.expando]);
            }
          },
          hasData: function (e) {
            var t = e[this.expando];
            return void 0 !== t && !C.isEmptyObject(t);
          },
        });
      var Z = new K(),
        Q = new K(),
        J = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        ee = /[A-Z]/g;
      function te(e, t, n) {
        var i;
        if (void 0 === n && 1 === e.nodeType)
          if (
            ((i = 'data-' + t.replace(ee, '-$&').toLowerCase()),
            'string' == typeof (n = e.getAttribute(i)))
          ) {
            try {
              n = (function (e) {
                return (
                  'true' === e ||
                  ('false' !== e &&
                    ('null' === e
                      ? null
                      : e === +e + ''
                      ? +e
                      : J.test(e)
                      ? JSON.parse(e)
                      : e))
                );
              })(n);
            } catch (e) {}
            Q.set(e, t, n);
          } else n = void 0;
        return n;
      }
      C.extend({
        hasData: function (e) {
          return Q.hasData(e) || Z.hasData(e);
        },
        data: function (e, t, n) {
          return Q.access(e, t, n);
        },
        removeData: function (e, t) {
          Q.remove(e, t);
        },
        _data: function (e, t, n) {
          return Z.access(e, t, n);
        },
        _removeData: function (e, t) {
          Z.remove(e, t);
        },
      }),
        C.fn.extend({
          data: function (e, t) {
            var n,
              i,
              s,
              a = this[0],
              r = a && a.attributes;
            if (void 0 === e) {
              if (
                this.length &&
                ((s = Q.get(a)), 1 === a.nodeType && !Z.get(a, 'hasDataAttrs'))
              ) {
                for (n = r.length; n--; )
                  r[n] &&
                    0 === (i = r[n].name).indexOf('data-') &&
                    ((i = _(i.slice(5))), te(a, i, s[i]));
                Z.set(a, 'hasDataAttrs', !0);
              }
              return s;
            }
            return 'object' == typeof e
              ? this.each(function () {
                  Q.set(this, e);
                })
              : W(
                  this,
                  function (t) {
                    var n;
                    if (a && void 0 === t)
                      return void 0 !== (n = Q.get(a, e)) ||
                        void 0 !== (n = te(a, e))
                        ? n
                        : void 0;
                    this.each(function () {
                      Q.set(this, e, t);
                    });
                  },
                  null,
                  t,
                  arguments.length > 1,
                  null,
                  !0
                );
          },
          removeData: function (e) {
            return this.each(function () {
              Q.remove(this, e);
            });
          },
        }),
        C.extend({
          queue: function (e, t, n) {
            var i;
            if (e)
              return (
                (t = (t || 'fx') + 'queue'),
                (i = Z.get(e, t)),
                n &&
                  (!i || Array.isArray(n)
                    ? (i = Z.access(e, t, C.makeArray(n)))
                    : i.push(n)),
                i || []
              );
          },
          dequeue: function (e, t) {
            t = t || 'fx';
            var n = C.queue(e, t),
              i = n.length,
              s = n.shift(),
              a = C._queueHooks(e, t);
            'inprogress' === s && ((s = n.shift()), i--),
              s &&
                ('fx' === t && n.unshift('inprogress'),
                delete a.stop,
                s.call(
                  e,
                  function () {
                    C.dequeue(e, t);
                  },
                  a
                )),
              !i && a && a.empty.fire();
          },
          _queueHooks: function (e, t) {
            var n = t + 'queueHooks';
            return (
              Z.get(e, n) ||
              Z.access(e, n, {
                empty: C.Callbacks('once memory').add(function () {
                  Z.remove(e, [t + 'queue', n]);
                }),
              })
            );
          },
        }),
        C.fn.extend({
          queue: function (e, t) {
            var n = 2;
            return (
              'string' != typeof e && ((t = e), (e = 'fx'), n--),
              arguments.length < n
                ? C.queue(this[0], e)
                : void 0 === t
                ? this
                : this.each(function () {
                    var n = C.queue(this, e, t);
                    C._queueHooks(this, e),
                      'fx' === e && 'inprogress' !== n[0] && C.dequeue(this, e);
                  })
            );
          },
          dequeue: function (e) {
            return this.each(function () {
              C.dequeue(this, e);
            });
          },
          clearQueue: function (e) {
            return this.queue(e || 'fx', []);
          },
          promise: function (e, t) {
            var n,
              i = 1,
              s = C.Deferred(),
              a = this,
              r = this.length,
              o = function () {
                --i || s.resolveWith(a, [a]);
              };
            for (
              'string' != typeof e && ((t = e), (e = void 0)), e = e || 'fx';
              r--;

            )
              (n = Z.get(a[r], e + 'queueHooks')) &&
                n.empty &&
                (i++, n.empty.add(o));
            return o(), s.promise(t);
          },
        });
      var ne = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        ie = new RegExp('^(?:([+-])=|)(' + ne + ')([a-z%]*)$', 'i'),
        se = ['Top', 'Right', 'Bottom', 'Left'],
        ae = b.documentElement,
        re = function (e) {
          return C.contains(e.ownerDocument, e);
        },
        oe = { composed: !0 };
      ae.getRootNode &&
        (re = function (e) {
          return (
            C.contains(e.ownerDocument, e) ||
            e.getRootNode(oe) === e.ownerDocument
          );
        });
      var le = function (e, t) {
        return (
          'none' === (e = t || e).style.display ||
          ('' === e.style.display && re(e) && 'none' === C.css(e, 'display'))
        );
      };
      function de(e, t, n, i) {
        var s,
          a,
          r = 20,
          o = i
            ? function () {
                return i.cur();
              }
            : function () {
                return C.css(e, t, '');
              },
          l = o(),
          d = (n && n[3]) || (C.cssNumber[t] ? '' : 'px'),
          c =
            e.nodeType &&
            (C.cssNumber[t] || ('px' !== d && +l)) &&
            ie.exec(C.css(e, t));
        if (c && c[3] !== d) {
          for (l /= 2, d = d || c[3], c = +l || 1; r--; )
            C.style(e, t, c + d),
              (1 - a) * (1 - (a = o() / l || 0.5)) <= 0 && (r = 0),
              (c /= a);
          (c *= 2), C.style(e, t, c + d), (n = n || []);
        }
        return (
          n &&
            ((c = +c || +l || 0),
            (s = n[1] ? c + (n[1] + 1) * n[2] : +n[2]),
            i && ((i.unit = d), (i.start = c), (i.end = s))),
          s
        );
      }
      var ce = {};
      function ue(e) {
        var t,
          n = e.ownerDocument,
          i = e.nodeName,
          s = ce[i];
        return (
          s ||
          ((t = n.body.appendChild(n.createElement(i))),
          (s = C.css(t, 'display')),
          t.parentNode.removeChild(t),
          'none' === s && (s = 'block'),
          (ce[i] = s),
          s)
        );
      }
      function pe(e, t) {
        for (var n, i, s = [], a = 0, r = e.length; a < r; a++)
          (i = e[a]).style &&
            ((n = i.style.display),
            t
              ? ('none' === n &&
                  ((s[a] = Z.get(i, 'display') || null),
                  s[a] || (i.style.display = '')),
                '' === i.style.display && le(i) && (s[a] = ue(i)))
              : 'none' !== n && ((s[a] = 'none'), Z.set(i, 'display', n)));
        for (a = 0; a < r; a++) null != s[a] && (e[a].style.display = s[a]);
        return e;
      }
      C.fn.extend({
        show: function () {
          return pe(this, !0);
        },
        hide: function () {
          return pe(this);
        },
        toggle: function (e) {
          return 'boolean' == typeof e
            ? e
              ? this.show()
              : this.hide()
            : this.each(function () {
                le(this) ? C(this).show() : C(this).hide();
              });
        },
      });
      var he,
        fe,
        me = /^(?:checkbox|radio)$/i,
        ge = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
        ve = /^$|^module$|\/(?:java|ecma)script/i;
      (he = b.createDocumentFragment().appendChild(b.createElement('div'))),
        (fe = b.createElement('input')).setAttribute('type', 'radio'),
        fe.setAttribute('checked', 'checked'),
        fe.setAttribute('name', 't'),
        he.appendChild(fe),
        (g.checkClone = he.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (he.innerHTML = '<textarea>x</textarea>'),
        (g.noCloneChecked = !!he.cloneNode(!0).lastChild.defaultValue),
        (he.innerHTML = '<option></option>'),
        (g.option = !!he.lastChild);
      var ye = {
        thead: [1, '<table>', '</table>'],
        col: [2, '<table><colgroup>', '</colgroup></table>'],
        tr: [2, '<table><tbody>', '</tbody></table>'],
        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],
        _default: [0, '', ''],
      };
      function be(e, t) {
        var n;
        return (
          (n =
            void 0 !== e.getElementsByTagName
              ? e.getElementsByTagName(t || '*')
              : void 0 !== e.querySelectorAll
              ? e.querySelectorAll(t || '*')
              : []),
          void 0 === t || (t && P(e, t)) ? C.merge([e], n) : n
        );
      }
      function we(e, t) {
        for (var n = 0, i = e.length; n < i; n++)
          Z.set(e[n], 'globalEval', !t || Z.get(t[n], 'globalEval'));
      }
      (ye.tbody = ye.tfoot = ye.colgroup = ye.caption = ye.thead),
        (ye.th = ye.td),
        g.option ||
          (ye.optgroup = ye.option =
            [1, "<select multiple='multiple'>", '</select>']);
      var xe = /<|&#?\w+;/;
      function Te(e, t, n, i, s) {
        for (
          var a,
            r,
            o,
            l,
            d,
            c,
            u = t.createDocumentFragment(),
            p = [],
            h = 0,
            f = e.length;
          h < f;
          h++
        )
          if ((a = e[h]) || 0 === a)
            if ('object' === T(a)) C.merge(p, a.nodeType ? [a] : a);
            else if (xe.test(a)) {
              for (
                r = r || u.appendChild(t.createElement('div')),
                  o = (ge.exec(a) || ['', ''])[1].toLowerCase(),
                  l = ye[o] || ye._default,
                  r.innerHTML = l[1] + C.htmlPrefilter(a) + l[2],
                  c = l[0];
                c--;

              )
                r = r.lastChild;
              C.merge(p, r.childNodes), ((r = u.firstChild).textContent = '');
            } else p.push(t.createTextNode(a));
        for (u.textContent = '', h = 0; (a = p[h++]); )
          if (i && C.inArray(a, i) > -1) s && s.push(a);
          else if (
            ((d = re(a)), (r = be(u.appendChild(a), 'script')), d && we(r), n)
          )
            for (c = 0; (a = r[c++]); ) ve.test(a.type || '') && n.push(a);
        return u;
      }
      var Ce = /^key/,
        Ee = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        Se = /^([^.]*)(?:\.(.+)|)/;
      function ke() {
        return !0;
      }
      function Me() {
        return !1;
      }
      function $e(e, t) {
        return (
          (e ===
            (function () {
              try {
                return b.activeElement;
              } catch (e) {}
            })()) ==
          ('focus' === t)
        );
      }
      function Pe(e, t, n, i, s, a) {
        var r, o;
        if ('object' == typeof t) {
          for (o in ('string' != typeof n && ((i = i || n), (n = void 0)), t))
            Pe(e, o, n, i, t[o], a);
          return e;
        }
        if (
          (null == i && null == s
            ? ((s = n), (i = n = void 0))
            : null == s &&
              ('string' == typeof n
                ? ((s = i), (i = void 0))
                : ((s = i), (i = n), (n = void 0))),
          !1 === s)
        )
          s = Me;
        else if (!s) return e;
        return (
          1 === a &&
            ((r = s),
            ((s = function (e) {
              return C().off(e), r.apply(this, arguments);
            }).guid = r.guid || (r.guid = C.guid++))),
          e.each(function () {
            C.event.add(this, t, s, i, n);
          })
        );
      }
      function Le(e, t, n) {
        n
          ? (Z.set(e, t, !1),
            C.event.add(e, t, {
              namespace: !1,
              handler: function (e) {
                var i,
                  s,
                  a = Z.get(this, t);
                if (1 & e.isTrigger && this[t]) {
                  if (a.length)
                    (C.event.special[t] || {}).delegateType &&
                      e.stopPropagation();
                  else if (
                    ((a = o.call(arguments)),
                    Z.set(this, t, a),
                    (i = n(this, t)),
                    this[t](),
                    a !== (s = Z.get(this, t)) || i
                      ? Z.set(this, t, !1)
                      : (s = {}),
                    a !== s)
                  )
                    return (
                      e.stopImmediatePropagation(), e.preventDefault(), s.value
                    );
                } else
                  a.length &&
                    (Z.set(this, t, {
                      value: C.event.trigger(
                        C.extend(a[0], C.Event.prototype),
                        a.slice(1),
                        this
                      ),
                    }),
                    e.stopImmediatePropagation());
              },
            }))
          : void 0 === Z.get(e, t) && C.event.add(e, t, ke);
      }
      (C.event = {
        global: {},
        add: function (e, t, n, i, s) {
          var a,
            r,
            o,
            l,
            d,
            c,
            u,
            p,
            h,
            f,
            m,
            g = Z.get(e);
          if (U(e))
            for (
              n.handler && ((n = (a = n).handler), (s = a.selector)),
                s && C.find.matchesSelector(ae, s),
                n.guid || (n.guid = C.guid++),
                (l = g.events) || (l = g.events = Object.create(null)),
                (r = g.handle) ||
                  (r = g.handle =
                    function (t) {
                      return void 0 !== C && C.event.triggered !== t.type
                        ? C.event.dispatch.apply(e, arguments)
                        : void 0;
                    }),
                d = (t = (t || '').match(H) || ['']).length;
              d--;

            )
              (h = m = (o = Se.exec(t[d]) || [])[1]),
                (f = (o[2] || '').split('.').sort()),
                h &&
                  ((u = C.event.special[h] || {}),
                  (h = (s ? u.delegateType : u.bindType) || h),
                  (u = C.event.special[h] || {}),
                  (c = C.extend(
                    {
                      type: h,
                      origType: m,
                      data: i,
                      handler: n,
                      guid: n.guid,
                      selector: s,
                      needsContext: s && C.expr.match.needsContext.test(s),
                      namespace: f.join('.'),
                    },
                    a
                  )),
                  (p = l[h]) ||
                    (((p = l[h] = []).delegateCount = 0),
                    (u.setup && !1 !== u.setup.call(e, i, f, r)) ||
                      (e.addEventListener && e.addEventListener(h, r))),
                  u.add &&
                    (u.add.call(e, c),
                    c.handler.guid || (c.handler.guid = n.guid)),
                  s ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                  (C.event.global[h] = !0));
        },
        remove: function (e, t, n, i, s) {
          var a,
            r,
            o,
            l,
            d,
            c,
            u,
            p,
            h,
            f,
            m,
            g = Z.hasData(e) && Z.get(e);
          if (g && (l = g.events)) {
            for (d = (t = (t || '').match(H) || ['']).length; d--; )
              if (
                ((h = m = (o = Se.exec(t[d]) || [])[1]),
                (f = (o[2] || '').split('.').sort()),
                h)
              ) {
                for (
                  u = C.event.special[h] || {},
                    p = l[(h = (i ? u.delegateType : u.bindType) || h)] || [],
                    o =
                      o[2] &&
                      new RegExp(
                        '(^|\\.)' + f.join('\\.(?:.*\\.|)') + '(\\.|$)'
                      ),
                    r = a = p.length;
                  a--;

                )
                  (c = p[a]),
                    (!s && m !== c.origType) ||
                      (n && n.guid !== c.guid) ||
                      (o && !o.test(c.namespace)) ||
                      (i && i !== c.selector && ('**' !== i || !c.selector)) ||
                      (p.splice(a, 1),
                      c.selector && p.delegateCount--,
                      u.remove && u.remove.call(e, c));
                r &&
                  !p.length &&
                  ((u.teardown && !1 !== u.teardown.call(e, f, g.handle)) ||
                    C.removeEvent(e, h, g.handle),
                  delete l[h]);
              } else for (h in l) C.event.remove(e, h + t[d], n, i, !0);
            C.isEmptyObject(l) && Z.remove(e, 'handle events');
          }
        },
        dispatch: function (e) {
          var t,
            n,
            i,
            s,
            a,
            r,
            o = new Array(arguments.length),
            l = C.event.fix(e),
            d = (Z.get(this, 'events') || Object.create(null))[l.type] || [],
            c = C.event.special[l.type] || {};
          for (o[0] = l, t = 1; t < arguments.length; t++) o[t] = arguments[t];
          if (
            ((l.delegateTarget = this),
            !c.preDispatch || !1 !== c.preDispatch.call(this, l))
          ) {
            for (
              r = C.event.handlers.call(this, l, d), t = 0;
              (s = r[t++]) && !l.isPropagationStopped();

            )
              for (
                l.currentTarget = s.elem, n = 0;
                (a = s.handlers[n++]) && !l.isImmediatePropagationStopped();

              )
                (l.rnamespace &&
                  !1 !== a.namespace &&
                  !l.rnamespace.test(a.namespace)) ||
                  ((l.handleObj = a),
                  (l.data = a.data),
                  void 0 !==
                    (i = (
                      (C.event.special[a.origType] || {}).handle || a.handler
                    ).apply(s.elem, o)) &&
                    !1 === (l.result = i) &&
                    (l.preventDefault(), l.stopPropagation()));
            return c.postDispatch && c.postDispatch.call(this, l), l.result;
          }
        },
        handlers: function (e, t) {
          var n,
            i,
            s,
            a,
            r,
            o = [],
            l = t.delegateCount,
            d = e.target;
          if (l && d.nodeType && !('click' === e.type && e.button >= 1))
            for (; d !== this; d = d.parentNode || this)
              if (
                1 === d.nodeType &&
                ('click' !== e.type || !0 !== d.disabled)
              ) {
                for (a = [], r = {}, n = 0; n < l; n++)
                  void 0 === r[(s = (i = t[n]).selector + ' ')] &&
                    (r[s] = i.needsContext
                      ? C(s, this).index(d) > -1
                      : C.find(s, this, null, [d]).length),
                    r[s] && a.push(i);
                a.length && o.push({ elem: d, handlers: a });
              }
          return (
            (d = this),
            l < t.length && o.push({ elem: d, handlers: t.slice(l) }),
            o
          );
        },
        addProp: function (e, t) {
          Object.defineProperty(C.Event.prototype, e, {
            enumerable: !0,
            configurable: !0,
            get: v(t)
              ? function () {
                  if (this.originalEvent) return t(this.originalEvent);
                }
              : function () {
                  if (this.originalEvent) return this.originalEvent[e];
                },
            set: function (t) {
              Object.defineProperty(this, e, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: t,
              });
            },
          });
        },
        fix: function (e) {
          return e[C.expando] ? e : new C.Event(e);
        },
        special: {
          load: { noBubble: !0 },
          click: {
            setup: function (e) {
              var t = this || e;
              return (
                me.test(t.type) &&
                  t.click &&
                  P(t, 'input') &&
                  Le(t, 'click', ke),
                !1
              );
            },
            trigger: function (e) {
              var t = this || e;
              return (
                me.test(t.type) && t.click && P(t, 'input') && Le(t, 'click'),
                !0
              );
            },
            _default: function (e) {
              var t = e.target;
              return (
                (me.test(t.type) &&
                  t.click &&
                  P(t, 'input') &&
                  Z.get(t, 'click')) ||
                P(t, 'a')
              );
            },
          },
          beforeunload: {
            postDispatch: function (e) {
              void 0 !== e.result &&
                e.originalEvent &&
                (e.originalEvent.returnValue = e.result);
            },
          },
        },
      }),
        (C.removeEvent = function (e, t, n) {
          e.removeEventListener && e.removeEventListener(t, n);
        }),
        (C.Event = function (e, t) {
          if (!(this instanceof C.Event)) return new C.Event(e, t);
          e && e.type
            ? ((this.originalEvent = e),
              (this.type = e.type),
              (this.isDefaultPrevented =
                e.defaultPrevented ||
                (void 0 === e.defaultPrevented && !1 === e.returnValue)
                  ? ke
                  : Me),
              (this.target =
                e.target && 3 === e.target.nodeType
                  ? e.target.parentNode
                  : e.target),
              (this.currentTarget = e.currentTarget),
              (this.relatedTarget = e.relatedTarget))
            : (this.type = e),
            t && C.extend(this, t),
            (this.timeStamp = (e && e.timeStamp) || Date.now()),
            (this[C.expando] = !0);
        }),
        (C.Event.prototype = {
          constructor: C.Event,
          isDefaultPrevented: Me,
          isPropagationStopped: Me,
          isImmediatePropagationStopped: Me,
          isSimulated: !1,
          preventDefault: function () {
            var e = this.originalEvent;
            (this.isDefaultPrevented = ke),
              e && !this.isSimulated && e.preventDefault();
          },
          stopPropagation: function () {
            var e = this.originalEvent;
            (this.isPropagationStopped = ke),
              e && !this.isSimulated && e.stopPropagation();
          },
          stopImmediatePropagation: function () {
            var e = this.originalEvent;
            (this.isImmediatePropagationStopped = ke),
              e && !this.isSimulated && e.stopImmediatePropagation(),
              this.stopPropagation();
          },
        }),
        C.each(
          {
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            code: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: function (e) {
              var t = e.button;
              return null == e.which && Ce.test(e.type)
                ? null != e.charCode
                  ? e.charCode
                  : e.keyCode
                : !e.which && void 0 !== t && Ee.test(e.type)
                ? 1 & t
                  ? 1
                  : 2 & t
                  ? 3
                  : 4 & t
                  ? 2
                  : 0
                : e.which;
            },
          },
          C.event.addProp
        ),
        C.each({ focus: 'focusin', blur: 'focusout' }, function (e, t) {
          C.event.special[e] = {
            setup: function () {
              return Le(this, e, $e), !1;
            },
            trigger: function () {
              return Le(this, e), !0;
            },
            delegateType: t,
          };
        }),
        C.each(
          {
            mouseenter: 'mouseover',
            mouseleave: 'mouseout',
            pointerenter: 'pointerover',
            pointerleave: 'pointerout',
          },
          function (e, t) {
            C.event.special[e] = {
              delegateType: t,
              bindType: t,
              handle: function (e) {
                var n,
                  i = this,
                  s = e.relatedTarget,
                  a = e.handleObj;
                return (
                  (s && (s === i || C.contains(i, s))) ||
                    ((e.type = a.origType),
                    (n = a.handler.apply(this, arguments)),
                    (e.type = t)),
                  n
                );
              },
            };
          }
        ),
        C.fn.extend({
          on: function (e, t, n, i) {
            return Pe(this, e, t, n, i);
          },
          one: function (e, t, n, i) {
            return Pe(this, e, t, n, i, 1);
          },
          off: function (e, t, n) {
            var i, s;
            if (e && e.preventDefault && e.handleObj)
              return (
                (i = e.handleObj),
                C(e.delegateTarget).off(
                  i.namespace ? i.origType + '.' + i.namespace : i.origType,
                  i.selector,
                  i.handler
                ),
                this
              );
            if ('object' == typeof e) {
              for (s in e) this.off(s, t, e[s]);
              return this;
            }
            return (
              (!1 !== t && 'function' != typeof t) || ((n = t), (t = void 0)),
              !1 === n && (n = Me),
              this.each(function () {
                C.event.remove(this, e, n, t);
              })
            );
          },
        });
      var ze = /<script|<style|<link/i,
        Ae = /checked\s*(?:[^=]|=\s*.checked.)/i,
        De = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
      function Ne(e, t) {
        return (
          (P(e, 'table') &&
            P(11 !== t.nodeType ? t : t.firstChild, 'tr') &&
            C(e).children('tbody')[0]) ||
          e
        );
      }
      function Ie(e) {
        return (e.type = (null !== e.getAttribute('type')) + '/' + e.type), e;
      }
      function Oe(e) {
        return (
          'true/' === (e.type || '').slice(0, 5)
            ? (e.type = e.type.slice(5))
            : e.removeAttribute('type'),
          e
        );
      }
      function He(e, t) {
        var n, i, s, a, r, o;
        if (1 === t.nodeType) {
          if (Z.hasData(e) && (o = Z.get(e).events))
            for (s in (Z.remove(t, 'handle events'), o))
              for (n = 0, i = o[s].length; n < i; n++)
                C.event.add(t, s, o[s][n]);
          Q.hasData(e) &&
            ((a = Q.access(e)), (r = C.extend({}, a)), Q.set(t, r));
        }
      }
      function je(e, t) {
        var n = t.nodeName.toLowerCase();
        'input' === n && me.test(e.type)
          ? (t.checked = e.checked)
          : ('input' !== n && 'textarea' !== n) ||
            (t.defaultValue = e.defaultValue);
      }
      function qe(e, t, n, i) {
        t = l(t);
        var s,
          a,
          r,
          o,
          d,
          c,
          u = 0,
          p = e.length,
          h = p - 1,
          f = t[0],
          m = v(f);
        if (m || (p > 1 && 'string' == typeof f && !g.checkClone && Ae.test(f)))
          return e.each(function (s) {
            var a = e.eq(s);
            m && (t[0] = f.call(this, s, a.html())), qe(a, t, n, i);
          });
        if (
          p &&
          ((a = (s = Te(t, e[0].ownerDocument, !1, e, i)).firstChild),
          1 === s.childNodes.length && (s = a),
          a || i)
        ) {
          for (o = (r = C.map(be(s, 'script'), Ie)).length; u < p; u++)
            (d = s),
              u !== h &&
                ((d = C.clone(d, !0, !0)), o && C.merge(r, be(d, 'script'))),
              n.call(e[u], d, u);
          if (o)
            for (
              c = r[r.length - 1].ownerDocument, C.map(r, Oe), u = 0;
              u < o;
              u++
            )
              (d = r[u]),
                ve.test(d.type || '') &&
                  !Z.access(d, 'globalEval') &&
                  C.contains(c, d) &&
                  (d.src && 'module' !== (d.type || '').toLowerCase()
                    ? C._evalUrl &&
                      !d.noModule &&
                      C._evalUrl(
                        d.src,
                        { nonce: d.nonce || d.getAttribute('nonce') },
                        c
                      )
                    : x(d.textContent.replace(De, ''), d, c));
        }
        return e;
      }
      function Be(e, t, n) {
        for (var i, s = t ? C.filter(t, e) : e, a = 0; null != (i = s[a]); a++)
          n || 1 !== i.nodeType || C.cleanData(be(i)),
            i.parentNode &&
              (n && re(i) && we(be(i, 'script')), i.parentNode.removeChild(i));
        return e;
      }
      C.extend({
        htmlPrefilter: function (e) {
          return e;
        },
        clone: function (e, t, n) {
          var i,
            s,
            a,
            r,
            o = e.cloneNode(!0),
            l = re(e);
          if (
            !(
              g.noCloneChecked ||
              (1 !== e.nodeType && 11 !== e.nodeType) ||
              C.isXMLDoc(e)
            )
          )
            for (r = be(o), i = 0, s = (a = be(e)).length; i < s; i++)
              je(a[i], r[i]);
          if (t)
            if (n)
              for (
                a = a || be(e), r = r || be(o), i = 0, s = a.length;
                i < s;
                i++
              )
                He(a[i], r[i]);
            else He(e, o);
          return (
            (r = be(o, 'script')).length > 0 && we(r, !l && be(e, 'script')), o
          );
        },
        cleanData: function (e) {
          for (
            var t, n, i, s = C.event.special, a = 0;
            void 0 !== (n = e[a]);
            a++
          )
            if (U(n)) {
              if ((t = n[Z.expando])) {
                if (t.events)
                  for (i in t.events)
                    s[i] ? C.event.remove(n, i) : C.removeEvent(n, i, t.handle);
                n[Z.expando] = void 0;
              }
              n[Q.expando] && (n[Q.expando] = void 0);
            }
        },
      }),
        C.fn.extend({
          detach: function (e) {
            return Be(this, e, !0);
          },
          remove: function (e) {
            return Be(this, e);
          },
          text: function (e) {
            return W(
              this,
              function (e) {
                return void 0 === e
                  ? C.text(this)
                  : this.empty().each(function () {
                      (1 !== this.nodeType &&
                        11 !== this.nodeType &&
                        9 !== this.nodeType) ||
                        (this.textContent = e);
                    });
              },
              null,
              e,
              arguments.length
            );
          },
          append: function () {
            return qe(this, arguments, function (e) {
              (1 !== this.nodeType &&
                11 !== this.nodeType &&
                9 !== this.nodeType) ||
                Ne(this, e).appendChild(e);
            });
          },
          prepend: function () {
            return qe(this, arguments, function (e) {
              if (
                1 === this.nodeType ||
                11 === this.nodeType ||
                9 === this.nodeType
              ) {
                var t = Ne(this, e);
                t.insertBefore(e, t.firstChild);
              }
            });
          },
          before: function () {
            return qe(this, arguments, function (e) {
              this.parentNode && this.parentNode.insertBefore(e, this);
            });
          },
          after: function () {
            return qe(this, arguments, function (e) {
              this.parentNode &&
                this.parentNode.insertBefore(e, this.nextSibling);
            });
          },
          empty: function () {
            for (var e, t = 0; null != (e = this[t]); t++)
              1 === e.nodeType &&
                (C.cleanData(be(e, !1)), (e.textContent = ''));
            return this;
          },
          clone: function (e, t) {
            return (
              (e = null != e && e),
              (t = null == t ? e : t),
              this.map(function () {
                return C.clone(this, e, t);
              })
            );
          },
          html: function (e) {
            return W(
              this,
              function (e) {
                var t = this[0] || {},
                  n = 0,
                  i = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                if (
                  'string' == typeof e &&
                  !ze.test(e) &&
                  !ye[(ge.exec(e) || ['', ''])[1].toLowerCase()]
                ) {
                  e = C.htmlPrefilter(e);
                  try {
                    for (; n < i; n++)
                      1 === (t = this[n] || {}).nodeType &&
                        (C.cleanData(be(t, !1)), (t.innerHTML = e));
                    t = 0;
                  } catch (e) {}
                }
                t && this.empty().append(e);
              },
              null,
              e,
              arguments.length
            );
          },
          replaceWith: function () {
            var e = [];
            return qe(
              this,
              arguments,
              function (t) {
                var n = this.parentNode;
                C.inArray(this, e) < 0 &&
                  (C.cleanData(be(this)), n && n.replaceChild(t, this));
              },
              e
            );
          },
        }),
        C.each(
          {
            appendTo: 'append',
            prependTo: 'prepend',
            insertBefore: 'before',
            insertAfter: 'after',
            replaceAll: 'replaceWith',
          },
          function (e, t) {
            C.fn[e] = function (e) {
              for (
                var n, i = [], s = C(e), a = s.length - 1, r = 0;
                r <= a;
                r++
              )
                (n = r === a ? this : this.clone(!0)),
                  C(s[r])[t](n),
                  d.apply(i, n.get());
              return this.pushStack(i);
            };
          }
        );
      var Re = new RegExp('^(' + ne + ')(?!px)[a-z%]+$', 'i'),
        Fe = function (e) {
          var t = e.ownerDocument.defaultView;
          return (t && t.opener) || (t = n), t.getComputedStyle(e);
        },
        Ge = function (e, t, n) {
          var i,
            s,
            a = {};
          for (s in t) (a[s] = e.style[s]), (e.style[s] = t[s]);
          for (s in ((i = n.call(e)), t)) e.style[s] = a[s];
          return i;
        },
        We = new RegExp(se.join('|'), 'i');
      function Ve(e, t, n) {
        var i,
          s,
          a,
          r,
          o = e.style;
        return (
          (n = n || Fe(e)) &&
            ('' !== (r = n.getPropertyValue(t) || n[t]) ||
              re(e) ||
              (r = C.style(e, t)),
            !g.pixelBoxStyles() &&
              Re.test(r) &&
              We.test(t) &&
              ((i = o.width),
              (s = o.minWidth),
              (a = o.maxWidth),
              (o.minWidth = o.maxWidth = o.width = r),
              (r = n.width),
              (o.width = i),
              (o.minWidth = s),
              (o.maxWidth = a))),
          void 0 !== r ? r + '' : r
        );
      }
      function Xe(e, t) {
        return {
          get: function () {
            if (!e()) return (this.get = t).apply(this, arguments);
            delete this.get;
          },
        };
      }
      !(function () {
        function e() {
          if (c) {
            (d.style.cssText =
              'position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0'),
              (c.style.cssText =
                'position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%'),
              ae.appendChild(d).appendChild(c);
            var e = n.getComputedStyle(c);
            (i = '1%' !== e.top),
              (l = 12 === t(e.marginLeft)),
              (c.style.right = '60%'),
              (r = 36 === t(e.right)),
              (s = 36 === t(e.width)),
              (c.style.position = 'absolute'),
              (a = 12 === t(c.offsetWidth / 3)),
              ae.removeChild(d),
              (c = null);
          }
        }
        function t(e) {
          return Math.round(parseFloat(e));
        }
        var i,
          s,
          a,
          r,
          o,
          l,
          d = b.createElement('div'),
          c = b.createElement('div');
        c.style &&
          ((c.style.backgroundClip = 'content-box'),
          (c.cloneNode(!0).style.backgroundClip = ''),
          (g.clearCloneStyle = 'content-box' === c.style.backgroundClip),
          C.extend(g, {
            boxSizingReliable: function () {
              return e(), s;
            },
            pixelBoxStyles: function () {
              return e(), r;
            },
            pixelPosition: function () {
              return e(), i;
            },
            reliableMarginLeft: function () {
              return e(), l;
            },
            scrollboxSize: function () {
              return e(), a;
            },
            reliableTrDimensions: function () {
              var e, t, i, s;
              return (
                null == o &&
                  ((e = b.createElement('table')),
                  (t = b.createElement('tr')),
                  (i = b.createElement('div')),
                  (e.style.cssText = 'position:absolute;left:-11111px'),
                  (t.style.height = '1px'),
                  (i.style.height = '9px'),
                  ae.appendChild(e).appendChild(t).appendChild(i),
                  (s = n.getComputedStyle(t)),
                  (o = parseInt(s.height) > 3),
                  ae.removeChild(e)),
                o
              );
            },
          }));
      })();
      var Ye = ['Webkit', 'Moz', 'ms'],
        _e = b.createElement('div').style,
        Ue = {};
      function Ke(e) {
        var t = C.cssProps[e] || Ue[e];
        return (
          t ||
          (e in _e
            ? e
            : (Ue[e] =
                (function (e) {
                  for (
                    var t = e[0].toUpperCase() + e.slice(1), n = Ye.length;
                    n--;

                  )
                    if ((e = Ye[n] + t) in _e) return e;
                })(e) || e))
        );
      }
      var Ze = /^(none|table(?!-c[ea]).+)/,
        Qe = /^--/,
        Je = { position: 'absolute', visibility: 'hidden', display: 'block' },
        et = { letterSpacing: '0', fontWeight: '400' };
      function tt(e, t, n) {
        var i = ie.exec(t);
        return i ? Math.max(0, i[2] - (n || 0)) + (i[3] || 'px') : t;
      }
      function nt(e, t, n, i, s, a) {
        var r = 'width' === t ? 1 : 0,
          o = 0,
          l = 0;
        if (n === (i ? 'border' : 'content')) return 0;
        for (; r < 4; r += 2)
          'margin' === n && (l += C.css(e, n + se[r], !0, s)),
            i
              ? ('content' === n && (l -= C.css(e, 'padding' + se[r], !0, s)),
                'margin' !== n &&
                  (l -= C.css(e, 'border' + se[r] + 'Width', !0, s)))
              : ((l += C.css(e, 'padding' + se[r], !0, s)),
                'padding' !== n
                  ? (l += C.css(e, 'border' + se[r] + 'Width', !0, s))
                  : (o += C.css(e, 'border' + se[r] + 'Width', !0, s)));
        return (
          !i &&
            a >= 0 &&
            (l +=
              Math.max(
                0,
                Math.ceil(
                  e['offset' + t[0].toUpperCase() + t.slice(1)] -
                    a -
                    l -
                    o -
                    0.5
                )
              ) || 0),
          l
        );
      }
      function it(e, t, n) {
        var i = Fe(e),
          s =
            (!g.boxSizingReliable() || n) &&
            'border-box' === C.css(e, 'boxSizing', !1, i),
          a = s,
          r = Ve(e, t, i),
          o = 'offset' + t[0].toUpperCase() + t.slice(1);
        if (Re.test(r)) {
          if (!n) return r;
          r = 'auto';
        }
        return (
          ((!g.boxSizingReliable() && s) ||
            (!g.reliableTrDimensions() && P(e, 'tr')) ||
            'auto' === r ||
            (!parseFloat(r) && 'inline' === C.css(e, 'display', !1, i))) &&
            e.getClientRects().length &&
            ((s = 'border-box' === C.css(e, 'boxSizing', !1, i)),
            (a = o in e) && (r = e[o])),
          (r = parseFloat(r) || 0) +
            nt(e, t, n || (s ? 'border' : 'content'), a, i, r) +
            'px'
        );
      }
      function st(e, t, n, i, s) {
        return new st.prototype.init(e, t, n, i, s);
      }
      C.extend({
        cssHooks: {
          opacity: {
            get: function (e, t) {
              if (t) {
                var n = Ve(e, 'opacity');
                return '' === n ? '1' : n;
              }
            },
          },
        },
        cssNumber: {
          animationIterationCount: !0,
          columnCount: !0,
          fillOpacity: !0,
          flexGrow: !0,
          flexShrink: !0,
          fontWeight: !0,
          gridArea: !0,
          gridColumn: !0,
          gridColumnEnd: !0,
          gridColumnStart: !0,
          gridRow: !0,
          gridRowEnd: !0,
          gridRowStart: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0,
        },
        cssProps: {},
        style: function (e, t, n, i) {
          if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
            var s,
              a,
              r,
              o = _(t),
              l = Qe.test(t),
              d = e.style;
            if (
              (l || (t = Ke(o)),
              (r = C.cssHooks[t] || C.cssHooks[o]),
              void 0 === n)
            )
              return r && 'get' in r && void 0 !== (s = r.get(e, !1, i))
                ? s
                : d[t];
            'string' === (a = typeof n) &&
              (s = ie.exec(n)) &&
              s[1] &&
              ((n = de(e, t, s)), (a = 'number')),
              null != n &&
                n == n &&
                ('number' !== a ||
                  l ||
                  (n += (s && s[3]) || (C.cssNumber[o] ? '' : 'px')),
                g.clearCloneStyle ||
                  '' !== n ||
                  0 !== t.indexOf('background') ||
                  (d[t] = 'inherit'),
                (r && 'set' in r && void 0 === (n = r.set(e, n, i))) ||
                  (l ? d.setProperty(t, n) : (d[t] = n)));
          }
        },
        css: function (e, t, n, i) {
          var s,
            a,
            r,
            o = _(t);
          return (
            Qe.test(t) || (t = Ke(o)),
            (r = C.cssHooks[t] || C.cssHooks[o]) &&
              'get' in r &&
              (s = r.get(e, !0, n)),
            void 0 === s && (s = Ve(e, t, i)),
            'normal' === s && t in et && (s = et[t]),
            '' === n || n
              ? ((a = parseFloat(s)), !0 === n || isFinite(a) ? a || 0 : s)
              : s
          );
        },
      }),
        C.each(['height', 'width'], function (e, t) {
          C.cssHooks[t] = {
            get: function (e, n, i) {
              if (n)
                return !Ze.test(C.css(e, 'display')) ||
                  (e.getClientRects().length && e.getBoundingClientRect().width)
                  ? it(e, t, i)
                  : Ge(e, Je, function () {
                      return it(e, t, i);
                    });
            },
            set: function (e, n, i) {
              var s,
                a = Fe(e),
                r = !g.scrollboxSize() && 'absolute' === a.position,
                o = (r || i) && 'border-box' === C.css(e, 'boxSizing', !1, a),
                l = i ? nt(e, t, i, o, a) : 0;
              return (
                o &&
                  r &&
                  (l -= Math.ceil(
                    e['offset' + t[0].toUpperCase() + t.slice(1)] -
                      parseFloat(a[t]) -
                      nt(e, t, 'border', !1, a) -
                      0.5
                  )),
                l &&
                  (s = ie.exec(n)) &&
                  'px' !== (s[3] || 'px') &&
                  ((e.style[t] = n), (n = C.css(e, t))),
                tt(0, n, l)
              );
            },
          };
        }),
        (C.cssHooks.marginLeft = Xe(g.reliableMarginLeft, function (e, t) {
          if (t)
            return (
              (parseFloat(Ve(e, 'marginLeft')) ||
                e.getBoundingClientRect().left -
                  Ge(e, { marginLeft: 0 }, function () {
                    return e.getBoundingClientRect().left;
                  })) + 'px'
            );
        })),
        C.each({ margin: '', padding: '', border: 'Width' }, function (e, t) {
          (C.cssHooks[e + t] = {
            expand: function (n) {
              for (
                var i = 0,
                  s = {},
                  a = 'string' == typeof n ? n.split(' ') : [n];
                i < 4;
                i++
              )
                s[e + se[i] + t] = a[i] || a[i - 2] || a[0];
              return s;
            },
          }),
            'margin' !== e && (C.cssHooks[e + t].set = tt);
        }),
        C.fn.extend({
          css: function (e, t) {
            return W(
              this,
              function (e, t, n) {
                var i,
                  s,
                  a = {},
                  r = 0;
                if (Array.isArray(t)) {
                  for (i = Fe(e), s = t.length; r < s; r++)
                    a[t[r]] = C.css(e, t[r], !1, i);
                  return a;
                }
                return void 0 !== n ? C.style(e, t, n) : C.css(e, t);
              },
              e,
              t,
              arguments.length > 1
            );
          },
        }),
        (C.Tween = st),
        (st.prototype = {
          constructor: st,
          init: function (e, t, n, i, s, a) {
            (this.elem = e),
              (this.prop = n),
              (this.easing = s || C.easing._default),
              (this.options = t),
              (this.start = this.now = this.cur()),
              (this.end = i),
              (this.unit = a || (C.cssNumber[n] ? '' : 'px'));
          },
          cur: function () {
            var e = st.propHooks[this.prop];
            return e && e.get ? e.get(this) : st.propHooks._default.get(this);
          },
          run: function (e) {
            var t,
              n = st.propHooks[this.prop];
            return (
              this.options.duration
                ? (this.pos = t =
                    C.easing[this.easing](
                      e,
                      this.options.duration * e,
                      0,
                      1,
                      this.options.duration
                    ))
                : (this.pos = t = e),
              (this.now = (this.end - this.start) * t + this.start),
              this.options.step &&
                this.options.step.call(this.elem, this.now, this),
              n && n.set ? n.set(this) : st.propHooks._default.set(this),
              this
            );
          },
        }),
        (st.prototype.init.prototype = st.prototype),
        (st.propHooks = {
          _default: {
            get: function (e) {
              var t;
              return 1 !== e.elem.nodeType ||
                (null != e.elem[e.prop] && null == e.elem.style[e.prop])
                ? e.elem[e.prop]
                : (t = C.css(e.elem, e.prop, '')) && 'auto' !== t
                ? t
                : 0;
            },
            set: function (e) {
              C.fx.step[e.prop]
                ? C.fx.step[e.prop](e)
                : 1 !== e.elem.nodeType ||
                  (!C.cssHooks[e.prop] && null == e.elem.style[Ke(e.prop)])
                ? (e.elem[e.prop] = e.now)
                : C.style(e.elem, e.prop, e.now + e.unit);
            },
          },
        }),
        (st.propHooks.scrollTop = st.propHooks.scrollLeft =
          {
            set: function (e) {
              e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
            },
          }),
        (C.easing = {
          linear: function (e) {
            return e;
          },
          swing: function (e) {
            return 0.5 - Math.cos(e * Math.PI) / 2;
          },
          _default: 'swing',
        }),
        (C.fx = st.prototype.init),
        (C.fx.step = {});
      var at,
        rt,
        ot = /^(?:toggle|show|hide)$/,
        lt = /queueHooks$/;
      function dt() {
        rt &&
          (!1 === b.hidden && n.requestAnimationFrame
            ? n.requestAnimationFrame(dt)
            : n.setTimeout(dt, C.fx.interval),
          C.fx.tick());
      }
      function ct() {
        return (
          n.setTimeout(function () {
            at = void 0;
          }),
          (at = Date.now())
        );
      }
      function ut(e, t) {
        var n,
          i = 0,
          s = { height: e };
        for (t = t ? 1 : 0; i < 4; i += 2 - t)
          s['margin' + (n = se[i])] = s['padding' + n] = e;
        return t && (s.opacity = s.width = e), s;
      }
      function pt(e, t, n) {
        for (
          var i,
            s = (ht.tweeners[t] || []).concat(ht.tweeners['*']),
            a = 0,
            r = s.length;
          a < r;
          a++
        )
          if ((i = s[a].call(n, t, e))) return i;
      }
      function ht(e, t, n) {
        var i,
          s,
          a = 0,
          r = ht.prefilters.length,
          o = C.Deferred().always(function () {
            delete l.elem;
          }),
          l = function () {
            if (s) return !1;
            for (
              var t = at || ct(),
                n = Math.max(0, d.startTime + d.duration - t),
                i = 1 - (n / d.duration || 0),
                a = 0,
                r = d.tweens.length;
              a < r;
              a++
            )
              d.tweens[a].run(i);
            return (
              o.notifyWith(e, [d, i, n]),
              i < 1 && r
                ? n
                : (r || o.notifyWith(e, [d, 1, 0]), o.resolveWith(e, [d]), !1)
            );
          },
          d = o.promise({
            elem: e,
            props: C.extend({}, t),
            opts: C.extend(
              !0,
              { specialEasing: {}, easing: C.easing._default },
              n
            ),
            originalProperties: t,
            originalOptions: n,
            startTime: at || ct(),
            duration: n.duration,
            tweens: [],
            createTween: function (t, n) {
              var i = C.Tween(
                e,
                d.opts,
                t,
                n,
                d.opts.specialEasing[t] || d.opts.easing
              );
              return d.tweens.push(i), i;
            },
            stop: function (t) {
              var n = 0,
                i = t ? d.tweens.length : 0;
              if (s) return this;
              for (s = !0; n < i; n++) d.tweens[n].run(1);
              return (
                t
                  ? (o.notifyWith(e, [d, 1, 0]), o.resolveWith(e, [d, t]))
                  : o.rejectWith(e, [d, t]),
                this
              );
            },
          }),
          c = d.props;
        for (
          !(function (e, t) {
            var n, i, s, a, r;
            for (n in e)
              if (
                ((s = t[(i = _(n))]),
                (a = e[n]),
                Array.isArray(a) && ((s = a[1]), (a = e[n] = a[0])),
                n !== i && ((e[i] = a), delete e[n]),
                (r = C.cssHooks[i]) && ('expand' in r))
              )
                for (n in ((a = r.expand(a)), delete e[i], a))
                  (n in e) || ((e[n] = a[n]), (t[n] = s));
              else t[i] = s;
          })(c, d.opts.specialEasing);
          a < r;
          a++
        )
          if ((i = ht.prefilters[a].call(d, e, c, d.opts)))
            return (
              v(i.stop) &&
                (C._queueHooks(d.elem, d.opts.queue).stop = i.stop.bind(i)),
              i
            );
        return (
          C.map(c, pt, d),
          v(d.opts.start) && d.opts.start.call(e, d),
          d
            .progress(d.opts.progress)
            .done(d.opts.done, d.opts.complete)
            .fail(d.opts.fail)
            .always(d.opts.always),
          C.fx.timer(C.extend(l, { elem: e, anim: d, queue: d.opts.queue })),
          d
        );
      }
      (C.Animation = C.extend(ht, {
        tweeners: {
          '*': [
            function (e, t) {
              var n = this.createTween(e, t);
              return de(n.elem, e, ie.exec(t), n), n;
            },
          ],
        },
        tweener: function (e, t) {
          v(e) ? ((t = e), (e = ['*'])) : (e = e.match(H));
          for (var n, i = 0, s = e.length; i < s; i++)
            (n = e[i]),
              (ht.tweeners[n] = ht.tweeners[n] || []),
              ht.tweeners[n].unshift(t);
        },
        prefilters: [
          function (e, t, n) {
            var i,
              s,
              a,
              r,
              o,
              l,
              d,
              c,
              u = 'width' in t || 'height' in t,
              p = this,
              h = {},
              f = e.style,
              m = e.nodeType && le(e),
              g = Z.get(e, 'fxshow');
            for (i in (n.queue ||
              (null == (r = C._queueHooks(e, 'fx')).unqueued &&
                ((r.unqueued = 0),
                (o = r.empty.fire),
                (r.empty.fire = function () {
                  r.unqueued || o();
                })),
              r.unqueued++,
              p.always(function () {
                p.always(function () {
                  r.unqueued--, C.queue(e, 'fx').length || r.empty.fire();
                });
              })),
            t))
              if (((s = t[i]), ot.test(s))) {
                if (
                  (delete t[i],
                  (a = a || 'toggle' === s),
                  s === (m ? 'hide' : 'show'))
                ) {
                  if ('show' !== s || !g || void 0 === g[i]) continue;
                  m = !0;
                }
                h[i] = (g && g[i]) || C.style(e, i);
              }
            if ((l = !C.isEmptyObject(t)) || !C.isEmptyObject(h))
              for (i in (u &&
                1 === e.nodeType &&
                ((n.overflow = [f.overflow, f.overflowX, f.overflowY]),
                null == (d = g && g.display) && (d = Z.get(e, 'display')),
                'none' === (c = C.css(e, 'display')) &&
                  (d
                    ? (c = d)
                    : (pe([e], !0),
                      (d = e.style.display || d),
                      (c = C.css(e, 'display')),
                      pe([e]))),
                ('inline' === c || ('inline-block' === c && null != d)) &&
                  'none' === C.css(e, 'float') &&
                  (l ||
                    (p.done(function () {
                      f.display = d;
                    }),
                    null == d &&
                      ((c = f.display), (d = 'none' === c ? '' : c))),
                  (f.display = 'inline-block'))),
              n.overflow &&
                ((f.overflow = 'hidden'),
                p.always(function () {
                  (f.overflow = n.overflow[0]),
                    (f.overflowX = n.overflow[1]),
                    (f.overflowY = n.overflow[2]);
                })),
              (l = !1),
              h))
                l ||
                  (g
                    ? 'hidden' in g && (m = g.hidden)
                    : (g = Z.access(e, 'fxshow', { display: d })),
                  a && (g.hidden = !m),
                  m && pe([e], !0),
                  p.done(function () {
                    for (i in (m || pe([e]), Z.remove(e, 'fxshow'), h))
                      C.style(e, i, h[i]);
                  })),
                  (l = pt(m ? g[i] : 0, i, p)),
                  i in g ||
                    ((g[i] = l.start), m && ((l.end = l.start), (l.start = 0)));
          },
        ],
        prefilter: function (e, t) {
          t ? ht.prefilters.unshift(e) : ht.prefilters.push(e);
        },
      })),
        (C.speed = function (e, t, n) {
          var i =
            e && 'object' == typeof e
              ? C.extend({}, e)
              : {
                  complete: n || (!n && t) || (v(e) && e),
                  duration: e,
                  easing: (n && t) || (t && !v(t) && t),
                };
          return (
            C.fx.off
              ? (i.duration = 0)
              : 'number' != typeof i.duration &&
                (i.duration in C.fx.speeds
                  ? (i.duration = C.fx.speeds[i.duration])
                  : (i.duration = C.fx.speeds._default)),
            (null != i.queue && !0 !== i.queue) || (i.queue = 'fx'),
            (i.old = i.complete),
            (i.complete = function () {
              v(i.old) && i.old.call(this), i.queue && C.dequeue(this, i.queue);
            }),
            i
          );
        }),
        C.fn.extend({
          fadeTo: function (e, t, n, i) {
            return this.filter(le)
              .css('opacity', 0)
              .show()
              .end()
              .animate({ opacity: t }, e, n, i);
          },
          animate: function (e, t, n, i) {
            var s = C.isEmptyObject(e),
              a = C.speed(t, n, i),
              r = function () {
                var t = ht(this, C.extend({}, e), a);
                (s || Z.get(this, 'finish')) && t.stop(!0);
              };
            return (
              (r.finish = r),
              s || !1 === a.queue ? this.each(r) : this.queue(a.queue, r)
            );
          },
          stop: function (e, t, n) {
            var i = function (e) {
              var t = e.stop;
              delete e.stop, t(n);
            };
            return (
              'string' != typeof e && ((n = t), (t = e), (e = void 0)),
              t && this.queue(e || 'fx', []),
              this.each(function () {
                var t = !0,
                  s = null != e && e + 'queueHooks',
                  a = C.timers,
                  r = Z.get(this);
                if (s) r[s] && r[s].stop && i(r[s]);
                else for (s in r) r[s] && r[s].stop && lt.test(s) && i(r[s]);
                for (s = a.length; s--; )
                  a[s].elem !== this ||
                    (null != e && a[s].queue !== e) ||
                    (a[s].anim.stop(n), (t = !1), a.splice(s, 1));
                (!t && n) || C.dequeue(this, e);
              })
            );
          },
          finish: function (e) {
            return (
              !1 !== e && (e = e || 'fx'),
              this.each(function () {
                var t,
                  n = Z.get(this),
                  i = n[e + 'queue'],
                  s = n[e + 'queueHooks'],
                  a = C.timers,
                  r = i ? i.length : 0;
                for (
                  n.finish = !0,
                    C.queue(this, e, []),
                    s && s.stop && s.stop.call(this, !0),
                    t = a.length;
                  t--;

                )
                  a[t].elem === this &&
                    a[t].queue === e &&
                    (a[t].anim.stop(!0), a.splice(t, 1));
                for (t = 0; t < r; t++)
                  i[t] && i[t].finish && i[t].finish.call(this);
                delete n.finish;
              })
            );
          },
        }),
        C.each(['toggle', 'show', 'hide'], function (e, t) {
          var n = C.fn[t];
          C.fn[t] = function (e, i, s) {
            return null == e || 'boolean' == typeof e
              ? n.apply(this, arguments)
              : this.animate(ut(t, !0), e, i, s);
          };
        }),
        C.each(
          {
            slideDown: ut('show'),
            slideUp: ut('hide'),
            slideToggle: ut('toggle'),
            fadeIn: { opacity: 'show' },
            fadeOut: { opacity: 'hide' },
            fadeToggle: { opacity: 'toggle' },
          },
          function (e, t) {
            C.fn[e] = function (e, n, i) {
              return this.animate(t, e, n, i);
            };
          }
        ),
        (C.timers = []),
        (C.fx.tick = function () {
          var e,
            t = 0,
            n = C.timers;
          for (at = Date.now(); t < n.length; t++)
            (e = n[t])() || n[t] !== e || n.splice(t--, 1);
          n.length || C.fx.stop(), (at = void 0);
        }),
        (C.fx.timer = function (e) {
          C.timers.push(e), C.fx.start();
        }),
        (C.fx.interval = 13),
        (C.fx.start = function () {
          rt || ((rt = !0), dt());
        }),
        (C.fx.stop = function () {
          rt = null;
        }),
        (C.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
        (C.fn.delay = function (e, t) {
          return (
            (e = (C.fx && C.fx.speeds[e]) || e),
            (t = t || 'fx'),
            this.queue(t, function (t, i) {
              var s = n.setTimeout(t, e);
              i.stop = function () {
                n.clearTimeout(s);
              };
            })
          );
        }),
        (function () {
          var e = b.createElement('input'),
            t = b
              .createElement('select')
              .appendChild(b.createElement('option'));
          (e.type = 'checkbox'),
            (g.checkOn = '' !== e.value),
            (g.optSelected = t.selected),
            ((e = b.createElement('input')).value = 't'),
            (e.type = 'radio'),
            (g.radioValue = 't' === e.value);
        })();
      var ft,
        mt = C.expr.attrHandle;
      C.fn.extend({
        attr: function (e, t) {
          return W(this, C.attr, e, t, arguments.length > 1);
        },
        removeAttr: function (e) {
          return this.each(function () {
            C.removeAttr(this, e);
          });
        },
      }),
        C.extend({
          attr: function (e, t, n) {
            var i,
              s,
              a = e.nodeType;
            if (3 !== a && 8 !== a && 2 !== a)
              return void 0 === e.getAttribute
                ? C.prop(e, t, n)
                : ((1 === a && C.isXMLDoc(e)) ||
                    (s =
                      C.attrHooks[t.toLowerCase()] ||
                      (C.expr.match.bool.test(t) ? ft : void 0)),
                  void 0 !== n
                    ? null === n
                      ? void C.removeAttr(e, t)
                      : s && 'set' in s && void 0 !== (i = s.set(e, n, t))
                      ? i
                      : (e.setAttribute(t, n + ''), n)
                    : s && 'get' in s && null !== (i = s.get(e, t))
                    ? i
                    : null == (i = C.find.attr(e, t))
                    ? void 0
                    : i);
          },
          attrHooks: {
            type: {
              set: function (e, t) {
                if (!g.radioValue && 'radio' === t && P(e, 'input')) {
                  var n = e.value;
                  return e.setAttribute('type', t), n && (e.value = n), t;
                }
              },
            },
          },
          removeAttr: function (e, t) {
            var n,
              i = 0,
              s = t && t.match(H);
            if (s && 1 === e.nodeType)
              for (; (n = s[i++]); ) e.removeAttribute(n);
          },
        }),
        (ft = {
          set: function (e, t, n) {
            return !1 === t ? C.removeAttr(e, n) : e.setAttribute(n, n), n;
          },
        }),
        C.each(C.expr.match.bool.source.match(/\w+/g), function (e, t) {
          var n = mt[t] || C.find.attr;
          mt[t] = function (e, t, i) {
            var s,
              a,
              r = t.toLowerCase();
            return (
              i ||
                ((a = mt[r]),
                (mt[r] = s),
                (s = null != n(e, t, i) ? r : null),
                (mt[r] = a)),
              s
            );
          };
        });
      var gt = /^(?:input|select|textarea|button)$/i,
        vt = /^(?:a|area)$/i;
      function yt(e) {
        return (e.match(H) || []).join(' ');
      }
      function bt(e) {
        return (e.getAttribute && e.getAttribute('class')) || '';
      }
      function wt(e) {
        return Array.isArray(e)
          ? e
          : ('string' == typeof e && e.match(H)) || [];
      }
      C.fn.extend({
        prop: function (e, t) {
          return W(this, C.prop, e, t, arguments.length > 1);
        },
        removeProp: function (e) {
          return this.each(function () {
            delete this[C.propFix[e] || e];
          });
        },
      }),
        C.extend({
          prop: function (e, t, n) {
            var i,
              s,
              a = e.nodeType;
            if (3 !== a && 8 !== a && 2 !== a)
              return (
                (1 === a && C.isXMLDoc(e)) ||
                  ((t = C.propFix[t] || t), (s = C.propHooks[t])),
                void 0 !== n
                  ? s && 'set' in s && void 0 !== (i = s.set(e, n, t))
                    ? i
                    : (e[t] = n)
                  : s && 'get' in s && null !== (i = s.get(e, t))
                  ? i
                  : e[t]
              );
          },
          propHooks: {
            tabIndex: {
              get: function (e) {
                var t = C.find.attr(e, 'tabindex');
                return t
                  ? parseInt(t, 10)
                  : gt.test(e.nodeName) || (vt.test(e.nodeName) && e.href)
                  ? 0
                  : -1;
              },
            },
          },
          propFix: { for: 'htmlFor', class: 'className' },
        }),
        g.optSelected ||
          (C.propHooks.selected = {
            get: function (e) {
              var t = e.parentNode;
              return t && t.parentNode && t.parentNode.selectedIndex, null;
            },
            set: function (e) {
              var t = e.parentNode;
              t &&
                (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
            },
          }),
        C.each(
          [
            'tabIndex',
            'readOnly',
            'maxLength',
            'cellSpacing',
            'cellPadding',
            'rowSpan',
            'colSpan',
            'useMap',
            'frameBorder',
            'contentEditable',
          ],
          function () {
            C.propFix[this.toLowerCase()] = this;
          }
        ),
        C.fn.extend({
          addClass: function (e) {
            var t,
              n,
              i,
              s,
              a,
              r,
              o,
              l = 0;
            if (v(e))
              return this.each(function (t) {
                C(this).addClass(e.call(this, t, bt(this)));
              });
            if ((t = wt(e)).length)
              for (; (n = this[l++]); )
                if (
                  ((s = bt(n)), (i = 1 === n.nodeType && ' ' + yt(s) + ' '))
                ) {
                  for (r = 0; (a = t[r++]); )
                    i.indexOf(' ' + a + ' ') < 0 && (i += a + ' ');
                  s !== (o = yt(i)) && n.setAttribute('class', o);
                }
            return this;
          },
          removeClass: function (e) {
            var t,
              n,
              i,
              s,
              a,
              r,
              o,
              l = 0;
            if (v(e))
              return this.each(function (t) {
                C(this).removeClass(e.call(this, t, bt(this)));
              });
            if (!arguments.length) return this.attr('class', '');
            if ((t = wt(e)).length)
              for (; (n = this[l++]); )
                if (
                  ((s = bt(n)), (i = 1 === n.nodeType && ' ' + yt(s) + ' '))
                ) {
                  for (r = 0; (a = t[r++]); )
                    for (; i.indexOf(' ' + a + ' ') > -1; )
                      i = i.replace(' ' + a + ' ', ' ');
                  s !== (o = yt(i)) && n.setAttribute('class', o);
                }
            return this;
          },
          toggleClass: function (e, t) {
            var n = typeof e,
              i = 'string' === n || Array.isArray(e);
            return 'boolean' == typeof t && i
              ? t
                ? this.addClass(e)
                : this.removeClass(e)
              : v(e)
              ? this.each(function (n) {
                  C(this).toggleClass(e.call(this, n, bt(this), t), t);
                })
              : this.each(function () {
                  var t, s, a, r;
                  if (i)
                    for (s = 0, a = C(this), r = wt(e); (t = r[s++]); )
                      a.hasClass(t) ? a.removeClass(t) : a.addClass(t);
                  else
                    (void 0 !== e && 'boolean' !== n) ||
                      ((t = bt(this)) && Z.set(this, '__className__', t),
                      this.setAttribute &&
                        this.setAttribute(
                          'class',
                          t || !1 === e
                            ? ''
                            : Z.get(this, '__className__') || ''
                        ));
                });
          },
          hasClass: function (e) {
            var t,
              n,
              i = 0;
            for (t = ' ' + e + ' '; (n = this[i++]); )
              if (1 === n.nodeType && (' ' + yt(bt(n)) + ' ').indexOf(t) > -1)
                return !0;
            return !1;
          },
        });
      var xt = /\r/g;
      C.fn.extend({
        val: function (e) {
          var t,
            n,
            i,
            s = this[0];
          return arguments.length
            ? ((i = v(e)),
              this.each(function (n) {
                var s;
                1 === this.nodeType &&
                  (null == (s = i ? e.call(this, n, C(this).val()) : e)
                    ? (s = '')
                    : 'number' == typeof s
                    ? (s += '')
                    : Array.isArray(s) &&
                      (s = C.map(s, function (e) {
                        return null == e ? '' : e + '';
                      })),
                  ((t =
                    C.valHooks[this.type] ||
                    C.valHooks[this.nodeName.toLowerCase()]) &&
                    'set' in t &&
                    void 0 !== t.set(this, s, 'value')) ||
                    (this.value = s));
              }))
            : s
            ? (t =
                C.valHooks[s.type] || C.valHooks[s.nodeName.toLowerCase()]) &&
              'get' in t &&
              void 0 !== (n = t.get(s, 'value'))
              ? n
              : 'string' == typeof (n = s.value)
              ? n.replace(xt, '')
              : null == n
              ? ''
              : n
            : void 0;
        },
      }),
        C.extend({
          valHooks: {
            option: {
              get: function (e) {
                var t = C.find.attr(e, 'value');
                return null != t ? t : yt(C.text(e));
              },
            },
            select: {
              get: function (e) {
                var t,
                  n,
                  i,
                  s = e.options,
                  a = e.selectedIndex,
                  r = 'select-one' === e.type,
                  o = r ? null : [],
                  l = r ? a + 1 : s.length;
                for (i = a < 0 ? l : r ? a : 0; i < l; i++)
                  if (
                    ((n = s[i]).selected || i === a) &&
                    !n.disabled &&
                    (!n.parentNode.disabled || !P(n.parentNode, 'optgroup'))
                  ) {
                    if (((t = C(n).val()), r)) return t;
                    o.push(t);
                  }
                return o;
              },
              set: function (e, t) {
                for (
                  var n, i, s = e.options, a = C.makeArray(t), r = s.length;
                  r--;

                )
                  ((i = s[r]).selected =
                    C.inArray(C.valHooks.option.get(i), a) > -1) && (n = !0);
                return n || (e.selectedIndex = -1), a;
              },
            },
          },
        }),
        C.each(['radio', 'checkbox'], function () {
          (C.valHooks[this] = {
            set: function (e, t) {
              if (Array.isArray(t))
                return (e.checked = C.inArray(C(e).val(), t) > -1);
            },
          }),
            g.checkOn ||
              (C.valHooks[this].get = function (e) {
                return null === e.getAttribute('value') ? 'on' : e.value;
              });
        }),
        (g.focusin = 'onfocusin' in n);
      var Tt = /^(?:focusinfocus|focusoutblur)$/,
        Ct = function (e) {
          e.stopPropagation();
        };
      C.extend(C.event, {
        trigger: function (e, t, i, s) {
          var a,
            r,
            o,
            l,
            d,
            c,
            u,
            p,
            f = [i || b],
            m = h.call(e, 'type') ? e.type : e,
            g = h.call(e, 'namespace') ? e.namespace.split('.') : [];
          if (
            ((r = p = o = i = i || b),
            3 !== i.nodeType &&
              8 !== i.nodeType &&
              !Tt.test(m + C.event.triggered) &&
              (m.indexOf('.') > -1 &&
                ((g = m.split('.')), (m = g.shift()), g.sort()),
              (d = m.indexOf(':') < 0 && 'on' + m),
              ((e = e[C.expando]
                ? e
                : new C.Event(m, 'object' == typeof e && e)).isTrigger = s
                ? 2
                : 3),
              (e.namespace = g.join('.')),
              (e.rnamespace = e.namespace
                ? new RegExp('(^|\\.)' + g.join('\\.(?:.*\\.|)') + '(\\.|$)')
                : null),
              (e.result = void 0),
              e.target || (e.target = i),
              (t = null == t ? [e] : C.makeArray(t, [e])),
              (u = C.event.special[m] || {}),
              s || !u.trigger || !1 !== u.trigger.apply(i, t)))
          ) {
            if (!s && !u.noBubble && !y(i)) {
              for (
                l = u.delegateType || m, Tt.test(l + m) || (r = r.parentNode);
                r;
                r = r.parentNode
              )
                f.push(r), (o = r);
              o === (i.ownerDocument || b) &&
                f.push(o.defaultView || o.parentWindow || n);
            }
            for (a = 0; (r = f[a++]) && !e.isPropagationStopped(); )
              (p = r),
                (e.type = a > 1 ? l : u.bindType || m),
                (c =
                  (Z.get(r, 'events') || Object.create(null))[e.type] &&
                  Z.get(r, 'handle')) && c.apply(r, t),
                (c = d && r[d]) &&
                  c.apply &&
                  U(r) &&
                  ((e.result = c.apply(r, t)),
                  !1 === e.result && e.preventDefault());
            return (
              (e.type = m),
              s ||
                e.isDefaultPrevented() ||
                (u._default && !1 !== u._default.apply(f.pop(), t)) ||
                !U(i) ||
                (d &&
                  v(i[m]) &&
                  !y(i) &&
                  ((o = i[d]) && (i[d] = null),
                  (C.event.triggered = m),
                  e.isPropagationStopped() && p.addEventListener(m, Ct),
                  i[m](),
                  e.isPropagationStopped() && p.removeEventListener(m, Ct),
                  (C.event.triggered = void 0),
                  o && (i[d] = o))),
              e.result
            );
          }
        },
        simulate: function (e, t, n) {
          var i = C.extend(new C.Event(), n, { type: e, isSimulated: !0 });
          C.event.trigger(i, null, t);
        },
      }),
        C.fn.extend({
          trigger: function (e, t) {
            return this.each(function () {
              C.event.trigger(e, t, this);
            });
          },
          triggerHandler: function (e, t) {
            var n = this[0];
            if (n) return C.event.trigger(e, t, n, !0);
          },
        }),
        g.focusin ||
          C.each({ focus: 'focusin', blur: 'focusout' }, function (e, t) {
            var n = function (e) {
              C.event.simulate(t, e.target, C.event.fix(e));
            };
            C.event.special[t] = {
              setup: function () {
                var i = this.ownerDocument || this.document || this,
                  s = Z.access(i, t);
                s || i.addEventListener(e, n, !0), Z.access(i, t, (s || 0) + 1);
              },
              teardown: function () {
                var i = this.ownerDocument || this.document || this,
                  s = Z.access(i, t) - 1;
                s
                  ? Z.access(i, t, s)
                  : (i.removeEventListener(e, n, !0), Z.remove(i, t));
              },
            };
          });
      var Et = n.location,
        St = { guid: Date.now() },
        kt = /\?/;
      C.parseXML = function (e) {
        var t;
        if (!e || 'string' != typeof e) return null;
        try {
          t = new n.DOMParser().parseFromString(e, 'text/xml');
        } catch (e) {
          t = void 0;
        }
        return (
          (t && !t.getElementsByTagName('parsererror').length) ||
            C.error('Invalid XML: ' + e),
          t
        );
      };
      var Mt = /\[\]$/,
        $t = /\r?\n/g,
        Pt = /^(?:submit|button|image|reset|file)$/i,
        Lt = /^(?:input|select|textarea|keygen)/i;
      function zt(e, t, n, i) {
        var s;
        if (Array.isArray(t))
          C.each(t, function (t, s) {
            n || Mt.test(e)
              ? i(e, s)
              : zt(
                  e + '[' + ('object' == typeof s && null != s ? t : '') + ']',
                  s,
                  n,
                  i
                );
          });
        else if (n || 'object' !== T(t)) i(e, t);
        else for (s in t) zt(e + '[' + s + ']', t[s], n, i);
      }
      (C.param = function (e, t) {
        var n,
          i = [],
          s = function (e, t) {
            var n = v(t) ? t() : t;
            i[i.length] =
              encodeURIComponent(e) +
              '=' +
              encodeURIComponent(null == n ? '' : n);
          };
        if (null == e) return '';
        if (Array.isArray(e) || (e.jquery && !C.isPlainObject(e)))
          C.each(e, function () {
            s(this.name, this.value);
          });
        else for (n in e) zt(n, e[n], t, s);
        return i.join('&');
      }),
        C.fn.extend({
          serialize: function () {
            return C.param(this.serializeArray());
          },
          serializeArray: function () {
            return this.map(function () {
              var e = C.prop(this, 'elements');
              return e ? C.makeArray(e) : this;
            })
              .filter(function () {
                var e = this.type;
                return (
                  this.name &&
                  !C(this).is(':disabled') &&
                  Lt.test(this.nodeName) &&
                  !Pt.test(e) &&
                  (this.checked || !me.test(e))
                );
              })
              .map(function (e, t) {
                var n = C(this).val();
                return null == n
                  ? null
                  : Array.isArray(n)
                  ? C.map(n, function (e) {
                      return { name: t.name, value: e.replace($t, '\r\n') };
                    })
                  : { name: t.name, value: n.replace($t, '\r\n') };
              })
              .get();
          },
        });
      var At = /%20/g,
        Dt = /#.*$/,
        Nt = /([?&])_=[^&]*/,
        It = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Ot = /^(?:GET|HEAD)$/,
        Ht = /^\/\//,
        jt = {},
        qt = {},
        Bt = '*/'.concat('*'),
        Rt = b.createElement('a');
      function Ft(e) {
        return function (t, n) {
          'string' != typeof t && ((n = t), (t = '*'));
          var i,
            s = 0,
            a = t.toLowerCase().match(H) || [];
          if (v(n))
            for (; (i = a[s++]); )
              '+' === i[0]
                ? ((i = i.slice(1) || '*'), (e[i] = e[i] || []).unshift(n))
                : (e[i] = e[i] || []).push(n);
        };
      }
      function Gt(e, t, n, i) {
        var s = {},
          a = e === qt;
        function r(o) {
          var l;
          return (
            (s[o] = !0),
            C.each(e[o] || [], function (e, o) {
              var d = o(t, n, i);
              return 'string' != typeof d || a || s[d]
                ? a
                  ? !(l = d)
                  : void 0
                : (t.dataTypes.unshift(d), r(d), !1);
            }),
            l
          );
        }
        return r(t.dataTypes[0]) || (!s['*'] && r('*'));
      }
      function Wt(e, t) {
        var n,
          i,
          s = C.ajaxSettings.flatOptions || {};
        for (n in t) void 0 !== t[n] && ((s[n] ? e : i || (i = {}))[n] = t[n]);
        return i && C.extend(!0, e, i), e;
      }
      (Rt.href = Et.href),
        C.extend({
          active: 0,
          lastModified: {},
          etag: {},
          ajaxSettings: {
            url: Et.href,
            type: 'GET',
            isLocal:
              /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
                Et.protocol
              ),
            global: !0,
            processData: !0,
            async: !0,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            accepts: {
              '*': Bt,
              text: 'text/plain',
              html: 'text/html',
              xml: 'application/xml, text/xml',
              json: 'application/json, text/javascript',
            },
            contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
            responseFields: {
              xml: 'responseXML',
              text: 'responseText',
              json: 'responseJSON',
            },
            converters: {
              '* text': String,
              'text html': !0,
              'text json': JSON.parse,
              'text xml': C.parseXML,
            },
            flatOptions: { url: !0, context: !0 },
          },
          ajaxSetup: function (e, t) {
            return t ? Wt(Wt(e, C.ajaxSettings), t) : Wt(C.ajaxSettings, e);
          },
          ajaxPrefilter: Ft(jt),
          ajaxTransport: Ft(qt),
          ajax: function (e, t) {
            'object' == typeof e && ((t = e), (e = void 0)), (t = t || {});
            var i,
              s,
              a,
              r,
              o,
              l,
              d,
              c,
              u,
              p,
              h = C.ajaxSetup({}, t),
              f = h.context || h,
              m = h.context && (f.nodeType || f.jquery) ? C(f) : C.event,
              g = C.Deferred(),
              v = C.Callbacks('once memory'),
              y = h.statusCode || {},
              w = {},
              x = {},
              T = 'canceled',
              E = {
                readyState: 0,
                getResponseHeader: function (e) {
                  var t;
                  if (d) {
                    if (!r)
                      for (r = {}; (t = It.exec(a)); )
                        r[t[1].toLowerCase() + ' '] = (
                          r[t[1].toLowerCase() + ' '] || []
                        ).concat(t[2]);
                    t = r[e.toLowerCase() + ' '];
                  }
                  return null == t ? null : t.join(', ');
                },
                getAllResponseHeaders: function () {
                  return d ? a : null;
                },
                setRequestHeader: function (e, t) {
                  return (
                    null == d &&
                      ((e = x[e.toLowerCase()] = x[e.toLowerCase()] || e),
                      (w[e] = t)),
                    this
                  );
                },
                overrideMimeType: function (e) {
                  return null == d && (h.mimeType = e), this;
                },
                statusCode: function (e) {
                  var t;
                  if (e)
                    if (d) E.always(e[E.status]);
                    else for (t in e) y[t] = [y[t], e[t]];
                  return this;
                },
                abort: function (e) {
                  var t = e || T;
                  return i && i.abort(t), S(0, t), this;
                },
              };
            if (
              (g.promise(E),
              (h.url = ((e || h.url || Et.href) + '').replace(
                Ht,
                Et.protocol + '//'
              )),
              (h.type = t.method || t.type || h.method || h.type),
              (h.dataTypes = (h.dataType || '*').toLowerCase().match(H) || [
                '',
              ]),
              null == h.crossDomain)
            ) {
              l = b.createElement('a');
              try {
                (l.href = h.url),
                  (l.href = l.href),
                  (h.crossDomain =
                    Rt.protocol + '//' + Rt.host != l.protocol + '//' + l.host);
              } catch (e) {
                h.crossDomain = !0;
              }
            }
            if (
              (h.data &&
                h.processData &&
                'string' != typeof h.data &&
                (h.data = C.param(h.data, h.traditional)),
              Gt(jt, h, t, E),
              d)
            )
              return E;
            for (u in ((c = C.event && h.global) &&
              0 == C.active++ &&
              C.event.trigger('ajaxStart'),
            (h.type = h.type.toUpperCase()),
            (h.hasContent = !Ot.test(h.type)),
            (s = h.url.replace(Dt, '')),
            h.hasContent
              ? h.data &&
                h.processData &&
                0 ===
                  (h.contentType || '').indexOf(
                    'application/x-www-form-urlencoded'
                  ) &&
                (h.data = h.data.replace(At, '+'))
              : ((p = h.url.slice(s.length)),
                h.data &&
                  (h.processData || 'string' == typeof h.data) &&
                  ((s += (kt.test(s) ? '&' : '?') + h.data), delete h.data),
                !1 === h.cache &&
                  ((s = s.replace(Nt, '$1')),
                  (p = (kt.test(s) ? '&' : '?') + '_=' + St.guid++ + p)),
                (h.url = s + p)),
            h.ifModified &&
              (C.lastModified[s] &&
                E.setRequestHeader('If-Modified-Since', C.lastModified[s]),
              C.etag[s] && E.setRequestHeader('If-None-Match', C.etag[s])),
            ((h.data && h.hasContent && !1 !== h.contentType) ||
              t.contentType) &&
              E.setRequestHeader('Content-Type', h.contentType),
            E.setRequestHeader(
              'Accept',
              h.dataTypes[0] && h.accepts[h.dataTypes[0]]
                ? h.accepts[h.dataTypes[0]] +
                    ('*' !== h.dataTypes[0] ? ', ' + Bt + '; q=0.01' : '')
                : h.accepts['*']
            ),
            h.headers))
              E.setRequestHeader(u, h.headers[u]);
            if (h.beforeSend && (!1 === h.beforeSend.call(f, E, h) || d))
              return E.abort();
            if (
              ((T = 'abort'),
              v.add(h.complete),
              E.done(h.success),
              E.fail(h.error),
              (i = Gt(qt, h, t, E)))
            ) {
              if (((E.readyState = 1), c && m.trigger('ajaxSend', [E, h]), d))
                return E;
              h.async &&
                h.timeout > 0 &&
                (o = n.setTimeout(function () {
                  E.abort('timeout');
                }, h.timeout));
              try {
                (d = !1), i.send(w, S);
              } catch (e) {
                if (d) throw e;
                S(-1, e);
              }
            } else S(-1, 'No Transport');
            function S(e, t, r, l) {
              var u,
                p,
                b,
                w,
                x,
                T = t;
              d ||
                ((d = !0),
                o && n.clearTimeout(o),
                (i = void 0),
                (a = l || ''),
                (E.readyState = e > 0 ? 4 : 0),
                (u = (e >= 200 && e < 300) || 304 === e),
                r &&
                  (w = (function (e, t, n) {
                    for (
                      var i, s, a, r, o = e.contents, l = e.dataTypes;
                      '*' === l[0];

                    )
                      l.shift(),
                        void 0 === i &&
                          (i =
                            e.mimeType || t.getResponseHeader('Content-Type'));
                    if (i)
                      for (s in o)
                        if (o[s] && o[s].test(i)) {
                          l.unshift(s);
                          break;
                        }
                    if (l[0] in n) a = l[0];
                    else {
                      for (s in n) {
                        if (!l[0] || e.converters[s + ' ' + l[0]]) {
                          a = s;
                          break;
                        }
                        r || (r = s);
                      }
                      a = a || r;
                    }
                    if (a) return a !== l[0] && l.unshift(a), n[a];
                  })(h, E, r)),
                !u &&
                  C.inArray('script', h.dataTypes) > -1 &&
                  (h.converters['text script'] = function () {}),
                (w = (function (e, t, n, i) {
                  var s,
                    a,
                    r,
                    o,
                    l,
                    d = {},
                    c = e.dataTypes.slice();
                  if (c[1])
                    for (r in e.converters)
                      d[r.toLowerCase()] = e.converters[r];
                  for (a = c.shift(); a; )
                    if (
                      (e.responseFields[a] && (n[e.responseFields[a]] = t),
                      !l &&
                        i &&
                        e.dataFilter &&
                        (t = e.dataFilter(t, e.dataType)),
                      (l = a),
                      (a = c.shift()))
                    )
                      if ('*' === a) a = l;
                      else if ('*' !== l && l !== a) {
                        if (!(r = d[l + ' ' + a] || d['* ' + a]))
                          for (s in d)
                            if (
                              (o = s.split(' '))[1] === a &&
                              (r = d[l + ' ' + o[0]] || d['* ' + o[0]])
                            ) {
                              !0 === r
                                ? (r = d[s])
                                : !0 !== d[s] && ((a = o[0]), c.unshift(o[1]));
                              break;
                            }
                        if (!0 !== r)
                          if (r && e.throws) t = r(t);
                          else
                            try {
                              t = r(t);
                            } catch (e) {
                              return {
                                state: 'parsererror',
                                error: r
                                  ? e
                                  : 'No conversion from ' + l + ' to ' + a,
                              };
                            }
                      }
                  return { state: 'success', data: t };
                })(h, w, E, u)),
                u
                  ? (h.ifModified &&
                      ((x = E.getResponseHeader('Last-Modified')) &&
                        (C.lastModified[s] = x),
                      (x = E.getResponseHeader('etag')) && (C.etag[s] = x)),
                    204 === e || 'HEAD' === h.type
                      ? (T = 'nocontent')
                      : 304 === e
                      ? (T = 'notmodified')
                      : ((T = w.state), (p = w.data), (u = !(b = w.error))))
                  : ((b = T), (!e && T) || ((T = 'error'), e < 0 && (e = 0))),
                (E.status = e),
                (E.statusText = (t || T) + ''),
                u ? g.resolveWith(f, [p, T, E]) : g.rejectWith(f, [E, T, b]),
                E.statusCode(y),
                (y = void 0),
                c &&
                  m.trigger(u ? 'ajaxSuccess' : 'ajaxError', [E, h, u ? p : b]),
                v.fireWith(f, [E, T]),
                c &&
                  (m.trigger('ajaxComplete', [E, h]),
                  --C.active || C.event.trigger('ajaxStop')));
            }
            return E;
          },
          getJSON: function (e, t, n) {
            return C.get(e, t, n, 'json');
          },
          getScript: function (e, t) {
            return C.get(e, void 0, t, 'script');
          },
        }),
        C.each(['get', 'post'], function (e, t) {
          C[t] = function (e, n, i, s) {
            return (
              v(n) && ((s = s || i), (i = n), (n = void 0)),
              C.ajax(
                C.extend(
                  { url: e, type: t, dataType: s, data: n, success: i },
                  C.isPlainObject(e) && e
                )
              )
            );
          };
        }),
        C.ajaxPrefilter(function (e) {
          var t;
          for (t in e.headers)
            'content-type' === t.toLowerCase() &&
              (e.contentType = e.headers[t] || '');
        }),
        (C._evalUrl = function (e, t, n) {
          return C.ajax({
            url: e,
            type: 'GET',
            dataType: 'script',
            cache: !0,
            async: !1,
            global: !1,
            converters: { 'text script': function () {} },
            dataFilter: function (e) {
              C.globalEval(e, t, n);
            },
          });
        }),
        C.fn.extend({
          wrapAll: function (e) {
            var t;
            return (
              this[0] &&
                (v(e) && (e = e.call(this[0])),
                (t = C(e, this[0].ownerDocument).eq(0).clone(!0)),
                this[0].parentNode && t.insertBefore(this[0]),
                t
                  .map(function () {
                    for (var e = this; e.firstElementChild; )
                      e = e.firstElementChild;
                    return e;
                  })
                  .append(this)),
              this
            );
          },
          wrapInner: function (e) {
            return v(e)
              ? this.each(function (t) {
                  C(this).wrapInner(e.call(this, t));
                })
              : this.each(function () {
                  var t = C(this),
                    n = t.contents();
                  n.length ? n.wrapAll(e) : t.append(e);
                });
          },
          wrap: function (e) {
            var t = v(e);
            return this.each(function (n) {
              C(this).wrapAll(t ? e.call(this, n) : e);
            });
          },
          unwrap: function (e) {
            return (
              this.parent(e)
                .not('body')
                .each(function () {
                  C(this).replaceWith(this.childNodes);
                }),
              this
            );
          },
        }),
        (C.expr.pseudos.hidden = function (e) {
          return !C.expr.pseudos.visible(e);
        }),
        (C.expr.pseudos.visible = function (e) {
          return !!(
            e.offsetWidth ||
            e.offsetHeight ||
            e.getClientRects().length
          );
        }),
        (C.ajaxSettings.xhr = function () {
          try {
            return new n.XMLHttpRequest();
          } catch (e) {}
        });
      var Vt = { 0: 200, 1223: 204 },
        Xt = C.ajaxSettings.xhr();
      (g.cors = !!Xt && 'withCredentials' in Xt),
        (g.ajax = Xt = !!Xt),
        C.ajaxTransport(function (e) {
          var t, i;
          if (g.cors || (Xt && !e.crossDomain))
            return {
              send: function (s, a) {
                var r,
                  o = e.xhr();
                if (
                  (o.open(e.type, e.url, e.async, e.username, e.password),
                  e.xhrFields)
                )
                  for (r in e.xhrFields) o[r] = e.xhrFields[r];
                for (r in (e.mimeType &&
                  o.overrideMimeType &&
                  o.overrideMimeType(e.mimeType),
                e.crossDomain ||
                  s['X-Requested-With'] ||
                  (s['X-Requested-With'] = 'XMLHttpRequest'),
                s))
                  o.setRequestHeader(r, s[r]);
                (t = function (e) {
                  return function () {
                    t &&
                      ((t =
                        i =
                        o.onload =
                        o.onerror =
                        o.onabort =
                        o.ontimeout =
                        o.onreadystatechange =
                          null),
                      'abort' === e
                        ? o.abort()
                        : 'error' === e
                        ? 'number' != typeof o.status
                          ? a(0, 'error')
                          : a(o.status, o.statusText)
                        : a(
                            Vt[o.status] || o.status,
                            o.statusText,
                            'text' !== (o.responseType || 'text') ||
                              'string' != typeof o.responseText
                              ? { binary: o.response }
                              : { text: o.responseText },
                            o.getAllResponseHeaders()
                          ));
                  };
                }),
                  (o.onload = t()),
                  (i = o.onerror = o.ontimeout = t('error')),
                  void 0 !== o.onabort
                    ? (o.onabort = i)
                    : (o.onreadystatechange = function () {
                        4 === o.readyState &&
                          n.setTimeout(function () {
                            t && i();
                          });
                      }),
                  (t = t('abort'));
                try {
                  o.send((e.hasContent && e.data) || null);
                } catch (e) {
                  if (t) throw e;
                }
              },
              abort: function () {
                t && t();
              },
            };
        }),
        C.ajaxPrefilter(function (e) {
          e.crossDomain && (e.contents.script = !1);
        }),
        C.ajaxSetup({
          accepts: {
            script:
              'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript',
          },
          contents: { script: /\b(?:java|ecma)script\b/ },
          converters: {
            'text script': function (e) {
              return C.globalEval(e), e;
            },
          },
        }),
        C.ajaxPrefilter('script', function (e) {
          void 0 === e.cache && (e.cache = !1),
            e.crossDomain && (e.type = 'GET');
        }),
        C.ajaxTransport('script', function (e) {
          var t, n;
          if (e.crossDomain || e.scriptAttrs)
            return {
              send: function (i, s) {
                (t = C('<script>')
                  .attr(e.scriptAttrs || {})
                  .prop({ charset: e.scriptCharset, src: e.url })
                  .on(
                    'load error',
                    (n = function (e) {
                      t.remove(),
                        (n = null),
                        e && s('error' === e.type ? 404 : 200, e.type);
                    })
                  )),
                  b.head.appendChild(t[0]);
              },
              abort: function () {
                n && n();
              },
            };
        });
      var Yt,
        _t = [],
        Ut = /(=)\?(?=&|$)|\?\?/;
      C.ajaxSetup({
        jsonp: 'callback',
        jsonpCallback: function () {
          var e = _t.pop() || C.expando + '_' + St.guid++;
          return (this[e] = !0), e;
        },
      }),
        C.ajaxPrefilter('json jsonp', function (e, t, i) {
          var s,
            a,
            r,
            o =
              !1 !== e.jsonp &&
              (Ut.test(e.url)
                ? 'url'
                : 'string' == typeof e.data &&
                  0 ===
                    (e.contentType || '').indexOf(
                      'application/x-www-form-urlencoded'
                    ) &&
                  Ut.test(e.data) &&
                  'data');
          if (o || 'jsonp' === e.dataTypes[0])
            return (
              (s = e.jsonpCallback =
                v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback),
              o
                ? (e[o] = e[o].replace(Ut, '$1' + s))
                : !1 !== e.jsonp &&
                  (e.url += (kt.test(e.url) ? '&' : '?') + e.jsonp + '=' + s),
              (e.converters['script json'] = function () {
                return r || C.error(s + ' was not called'), r[0];
              }),
              (e.dataTypes[0] = 'json'),
              (a = n[s]),
              (n[s] = function () {
                r = arguments;
              }),
              i.always(function () {
                void 0 === a ? C(n).removeProp(s) : (n[s] = a),
                  e[s] && ((e.jsonpCallback = t.jsonpCallback), _t.push(s)),
                  r && v(a) && a(r[0]),
                  (r = a = void 0);
              }),
              'script'
            );
        }),
        (g.createHTMLDocument =
          (((Yt = b.implementation.createHTMLDocument('').body).innerHTML =
            '<form></form><form></form>'),
          2 === Yt.childNodes.length)),
        (C.parseHTML = function (e, t, n) {
          return 'string' != typeof e
            ? []
            : ('boolean' == typeof t && ((n = t), (t = !1)),
              t ||
                (g.createHTMLDocument
                  ? (((i = (t =
                      b.implementation.createHTMLDocument('')).createElement(
                      'base'
                    )).href = b.location.href),
                    t.head.appendChild(i))
                  : (t = b)),
              (a = !n && []),
              (s = L.exec(e))
                ? [t.createElement(s[1])]
                : ((s = Te([e], t, a)),
                  a && a.length && C(a).remove(),
                  C.merge([], s.childNodes)));
        }),
        (C.fn.load = function (e, t, n) {
          var i,
            s,
            a,
            r = this,
            o = e.indexOf(' ');
          return (
            o > -1 && ((i = yt(e.slice(o))), (e = e.slice(0, o))),
            v(t)
              ? ((n = t), (t = void 0))
              : t && 'object' == typeof t && (s = 'POST'),
            r.length > 0 &&
              C.ajax({ url: e, type: s || 'GET', dataType: 'html', data: t })
                .done(function (e) {
                  (a = arguments),
                    r.html(i ? C('<div>').append(C.parseHTML(e)).find(i) : e);
                })
                .always(
                  n &&
                    function (e, t) {
                      r.each(function () {
                        n.apply(this, a || [e.responseText, t, e]);
                      });
                    }
                ),
            this
          );
        }),
        (C.expr.pseudos.animated = function (e) {
          return C.grep(C.timers, function (t) {
            return e === t.elem;
          }).length;
        }),
        (C.offset = {
          setOffset: function (e, t, n) {
            var i,
              s,
              a,
              r,
              o,
              l,
              d = C.css(e, 'position'),
              c = C(e),
              u = {};
            'static' === d && (e.style.position = 'relative'),
              (o = c.offset()),
              (a = C.css(e, 'top')),
              (l = C.css(e, 'left')),
              ('absolute' === d || 'fixed' === d) &&
              (a + l).indexOf('auto') > -1
                ? ((r = (i = c.position()).top), (s = i.left))
                : ((r = parseFloat(a) || 0), (s = parseFloat(l) || 0)),
              v(t) && (t = t.call(e, n, C.extend({}, o))),
              null != t.top && (u.top = t.top - o.top + r),
              null != t.left && (u.left = t.left - o.left + s),
              'using' in t
                ? t.using.call(e, u)
                : ('number' == typeof u.top && (u.top += 'px'),
                  'number' == typeof u.left && (u.left += 'px'),
                  c.css(u));
          },
        }),
        C.fn.extend({
          offset: function (e) {
            if (arguments.length)
              return void 0 === e
                ? this
                : this.each(function (t) {
                    C.offset.setOffset(this, e, t);
                  });
            var t,
              n,
              i = this[0];
            return i
              ? i.getClientRects().length
                ? ((t = i.getBoundingClientRect()),
                  (n = i.ownerDocument.defaultView),
                  { top: t.top + n.pageYOffset, left: t.left + n.pageXOffset })
                : { top: 0, left: 0 }
              : void 0;
          },
          position: function () {
            if (this[0]) {
              var e,
                t,
                n,
                i = this[0],
                s = { top: 0, left: 0 };
              if ('fixed' === C.css(i, 'position'))
                t = i.getBoundingClientRect();
              else {
                for (
                  t = this.offset(),
                    n = i.ownerDocument,
                    e = i.offsetParent || n.documentElement;
                  e &&
                  (e === n.body || e === n.documentElement) &&
                  'static' === C.css(e, 'position');

                )
                  e = e.parentNode;
                e &&
                  e !== i &&
                  1 === e.nodeType &&
                  (((s = C(e).offset()).top += C.css(e, 'borderTopWidth', !0)),
                  (s.left += C.css(e, 'borderLeftWidth', !0)));
              }
              return {
                top: t.top - s.top - C.css(i, 'marginTop', !0),
                left: t.left - s.left - C.css(i, 'marginLeft', !0),
              };
            }
          },
          offsetParent: function () {
            return this.map(function () {
              for (
                var e = this.offsetParent;
                e && 'static' === C.css(e, 'position');

              )
                e = e.offsetParent;
              return e || ae;
            });
          },
        }),
        C.each(
          { scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset' },
          function (e, t) {
            var n = 'pageYOffset' === t;
            C.fn[e] = function (i) {
              return W(
                this,
                function (e, i, s) {
                  var a;
                  if (
                    (y(e) ? (a = e) : 9 === e.nodeType && (a = e.defaultView),
                    void 0 === s)
                  )
                    return a ? a[t] : e[i];
                  a
                    ? a.scrollTo(n ? a.pageXOffset : s, n ? s : a.pageYOffset)
                    : (e[i] = s);
                },
                e,
                i,
                arguments.length
              );
            };
          }
        ),
        C.each(['top', 'left'], function (e, t) {
          C.cssHooks[t] = Xe(g.pixelPosition, function (e, n) {
            if (n)
              return (n = Ve(e, t)), Re.test(n) ? C(e).position()[t] + 'px' : n;
          });
        }),
        C.each({ Height: 'height', Width: 'width' }, function (e, t) {
          C.each(
            { padding: 'inner' + e, content: t, '': 'outer' + e },
            function (n, i) {
              C.fn[i] = function (s, a) {
                var r = arguments.length && (n || 'boolean' != typeof s),
                  o = n || (!0 === s || !0 === a ? 'margin' : 'border');
                return W(
                  this,
                  function (t, n, s) {
                    var a;
                    return y(t)
                      ? 0 === i.indexOf('outer')
                        ? t['inner' + e]
                        : t.document.documentElement['client' + e]
                      : 9 === t.nodeType
                      ? ((a = t.documentElement),
                        Math.max(
                          t.body['scroll' + e],
                          a['scroll' + e],
                          t.body['offset' + e],
                          a['offset' + e],
                          a['client' + e]
                        ))
                      : void 0 === s
                      ? C.css(t, n, o)
                      : C.style(t, n, s, o);
                  },
                  t,
                  r ? s : void 0,
                  r
                );
              };
            }
          );
        }),
        C.each(
          [
            'ajaxStart',
            'ajaxStop',
            'ajaxComplete',
            'ajaxError',
            'ajaxSuccess',
            'ajaxSend',
          ],
          function (e, t) {
            C.fn[t] = function (e) {
              return this.on(t, e);
            };
          }
        ),
        C.fn.extend({
          bind: function (e, t, n) {
            return this.on(e, null, t, n);
          },
          unbind: function (e, t) {
            return this.off(e, null, t);
          },
          delegate: function (e, t, n, i) {
            return this.on(t, e, n, i);
          },
          undelegate: function (e, t, n) {
            return 1 === arguments.length
              ? this.off(e, '**')
              : this.off(t, e || '**', n);
          },
          hover: function (e, t) {
            return this.mouseenter(e).mouseleave(t || e);
          },
        }),
        C.each(
          'blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu'.split(
            ' '
          ),
          function (e, t) {
            C.fn[t] = function (e, n) {
              return arguments.length > 0
                ? this.on(t, null, e, n)
                : this.trigger(t);
            };
          }
        );
      var Kt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
      (C.proxy = function (e, t) {
        var n, i, s;
        if (('string' == typeof t && ((n = e[t]), (t = e), (e = n)), v(e)))
          return (
            (i = o.call(arguments, 2)),
            ((s = function () {
              return e.apply(t || this, i.concat(o.call(arguments)));
            }).guid = e.guid =
              e.guid || C.guid++),
            s
          );
      }),
        (C.holdReady = function (e) {
          e ? C.readyWait++ : C.ready(!0);
        }),
        (C.isArray = Array.isArray),
        (C.parseJSON = JSON.parse),
        (C.nodeName = P),
        (C.isFunction = v),
        (C.isWindow = y),
        (C.camelCase = _),
        (C.type = T),
        (C.now = Date.now),
        (C.isNumeric = function (e) {
          var t = C.type(e);
          return (
            ('number' === t || 'string' === t) && !isNaN(e - parseFloat(e))
          );
        }),
        (C.trim = function (e) {
          return null == e ? '' : (e + '').replace(Kt, '');
        }),
        void 0 ===
          (i = function () {
            return C;
          }.apply(t, [])) || (e.exports = i);
      var Zt = n.jQuery,
        Qt = n.$;
      return (
        (C.noConflict = function (e) {
          return (
            n.$ === C && (n.$ = Qt), e && n.jQuery === C && (n.jQuery = Zt), C
          );
        }),
        void 0 === s && (n.jQuery = n.$ = C),
        C
      );
    });
  },
  function (e, t, n) {
    var i, s, a;
    (s = [n(0)]),
      void 0 ===
        (a =
          'function' ==
          typeof (i = function (e) {
            e.extend(e.fn, {
              validate: function (t) {
                if (this.length) {
                  var n = e.data(this[0], 'validator');
                  return (
                    n ||
                    (this.attr('novalidate', 'novalidate'),
                    (n = new e.validator(t, this[0])),
                    e.data(this[0], 'validator', n),
                    n.settings.onsubmit &&
                      (this.on('click.validate', ':submit', function (t) {
                        (n.submitButton = t.currentTarget),
                          e(this).hasClass('cancel') && (n.cancelSubmit = !0),
                          void 0 !== e(this).attr('formnovalidate') &&
                            (n.cancelSubmit = !0);
                      }),
                      this.on('submit.validate', function (t) {
                        function i() {
                          var i, s;
                          return (
                            n.submitButton &&
                              (n.settings.submitHandler || n.formSubmitted) &&
                              (i = e("<input type='hidden'/>")
                                .attr('name', n.submitButton.name)
                                .val(e(n.submitButton).val())
                                .appendTo(n.currentForm)),
                            !(n.settings.submitHandler && !n.settings.debug) ||
                              ((s = n.settings.submitHandler.call(
                                n,
                                n.currentForm,
                                t
                              )),
                              i && i.remove(),
                              void 0 !== s && s)
                          );
                        }
                        return (
                          n.settings.debug && t.preventDefault(),
                          n.cancelSubmit
                            ? ((n.cancelSubmit = !1), i())
                            : n.form()
                            ? n.pendingRequest
                              ? ((n.formSubmitted = !0), !1)
                              : i()
                            : (n.focusInvalid(), !1)
                        );
                      })),
                    n)
                  );
                }
                t &&
                  t.debug &&
                  window.console &&
                  console.warn(
                    "Nothing selected, can't validate, returning nothing."
                  );
              },
              valid: function () {
                var t, n, i;
                return (
                  e(this[0]).is('form')
                    ? (t = this.validate().form())
                    : ((i = []),
                      (t = !0),
                      (n = e(this[0].form).validate()),
                      this.each(function () {
                        (t = n.element(this) && t) ||
                          (i = i.concat(n.errorList));
                      }),
                      (n.errorList = i)),
                  t
                );
              },
              rules: function (t, n) {
                var i,
                  s,
                  a,
                  r,
                  o,
                  l,
                  d = this[0],
                  c =
                    void 0 !== this.attr('contenteditable') &&
                    'false' !== this.attr('contenteditable');
                if (
                  null != d &&
                  (!d.form &&
                    c &&
                    ((d.form = this.closest('form')[0]),
                    (d.name = this.attr('name'))),
                  null != d.form)
                ) {
                  if (t)
                    switch (
                      ((s = (i = e.data(d.form, 'validator').settings).rules),
                      (a = e.validator.staticRules(d)),
                      t)
                    ) {
                      case 'add':
                        e.extend(a, e.validator.normalizeRule(n)),
                          delete a.messages,
                          (s[d.name] = a),
                          n.messages &&
                            (i.messages[d.name] = e.extend(
                              i.messages[d.name],
                              n.messages
                            ));
                        break;
                      case 'remove':
                        return n
                          ? ((l = {}),
                            e.each(n.split(/\s/), function (e, t) {
                              (l[t] = a[t]), delete a[t];
                            }),
                            l)
                          : (delete s[d.name], a);
                    }
                  return (
                    (r = e.validator.normalizeRules(
                      e.extend(
                        {},
                        e.validator.classRules(d),
                        e.validator.attributeRules(d),
                        e.validator.dataRules(d),
                        e.validator.staticRules(d)
                      ),
                      d
                    )).required &&
                      ((o = r.required),
                      delete r.required,
                      (r = e.extend({ required: o }, r))),
                    r.remote &&
                      ((o = r.remote),
                      delete r.remote,
                      (r = e.extend(r, { remote: o }))),
                    r
                  );
                }
              },
            });
            var t,
              n = function (e) {
                return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
              };
            e.extend(e.expr.pseudos || e.expr[':'], {
              blank: function (t) {
                return !n('' + e(t).val());
              },
              filled: function (t) {
                var i = e(t).val();
                return null !== i && !!n('' + i);
              },
              unchecked: function (t) {
                return !e(t).prop('checked');
              },
            }),
              (e.validator = function (t, n) {
                (this.settings = e.extend(!0, {}, e.validator.defaults, t)),
                  (this.currentForm = n),
                  this.init();
              }),
              (e.validator.format = function (t, n) {
                return 1 === arguments.length
                  ? function () {
                      var n = e.makeArray(arguments);
                      return n.unshift(t), e.validator.format.apply(this, n);
                    }
                  : (void 0 === n ||
                      (arguments.length > 2 &&
                        n.constructor !== Array &&
                        (n = e.makeArray(arguments).slice(1)),
                      n.constructor !== Array && (n = [n]),
                      e.each(n, function (e, n) {
                        t = t.replace(
                          new RegExp('\\{' + e + '\\}', 'g'),
                          function () {
                            return n;
                          }
                        );
                      })),
                    t);
              }),
              e.extend(e.validator, {
                defaults: {
                  messages: {},
                  groups: {},
                  rules: {},
                  errorClass: 'error',
                  pendingClass: 'pending',
                  validClass: 'valid',
                  errorElement: 'label',
                  focusCleanup: !1,
                  focusInvalid: !0,
                  errorContainer: e([]),
                  errorLabelContainer: e([]),
                  onsubmit: !0,
                  ignore: ':hidden',
                  ignoreTitle: !1,
                  onfocusin: function (e) {
                    (this.lastActive = e),
                      this.settings.focusCleanup &&
                        (this.settings.unhighlight &&
                          this.settings.unhighlight.call(
                            this,
                            e,
                            this.settings.errorClass,
                            this.settings.validClass
                          ),
                        this.hideThese(this.errorsFor(e)));
                  },
                  onfocusout: function (e) {
                    this.checkable(e) ||
                      (!(e.name in this.submitted) && this.optional(e)) ||
                      this.element(e);
                  },
                  onkeyup: function (t, n) {
                    (9 === n.which && '' === this.elementValue(t)) ||
                      -1 !==
                        e.inArray(
                          n.keyCode,
                          [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225]
                        ) ||
                      ((t.name in this.submitted || t.name in this.invalid) &&
                        this.element(t));
                  },
                  onclick: function (e) {
                    e.name in this.submitted
                      ? this.element(e)
                      : e.parentNode.name in this.submitted &&
                        this.element(e.parentNode);
                  },
                  highlight: function (t, n, i) {
                    'radio' === t.type
                      ? this.findByName(t.name).addClass(n).removeClass(i)
                      : e(t).addClass(n).removeClass(i);
                  },
                  unhighlight: function (t, n, i) {
                    'radio' === t.type
                      ? this.findByName(t.name).removeClass(n).addClass(i)
                      : e(t).removeClass(n).addClass(i);
                  },
                },
                setDefaults: function (t) {
                  e.extend(e.validator.defaults, t);
                },
                messages: {
                  required: 'This field is required.',
                  remote: 'Please fix this field.',
                  email: 'Please enter a valid email address.',
                  url: 'Please enter a valid URL.',
                  date: 'Please enter a valid date.',
                  dateISO: 'Please enter a valid date (ISO).',
                  number: 'Please enter a valid number.',
                  digits: 'Please enter only digits.',
                  equalTo: 'Please enter the same value again.',
                  maxlength: e.validator.format(
                    'Please enter no more than {0} characters.'
                  ),
                  minlength: e.validator.format(
                    'Please enter at least {0} characters.'
                  ),
                  rangelength: e.validator.format(
                    'Please enter a value between {0} and {1} characters long.'
                  ),
                  range: e.validator.format(
                    'Please enter a value between {0} and {1}.'
                  ),
                  max: e.validator.format(
                    'Please enter a value less than or equal to {0}.'
                  ),
                  min: e.validator.format(
                    'Please enter a value greater than or equal to {0}.'
                  ),
                  step: e.validator.format('Please enter a multiple of {0}.'),
                },
                autoCreateRanges: !1,
                prototype: {
                  init: function () {
                    (this.labelContainer = e(
                      this.settings.errorLabelContainer
                    )),
                      (this.errorContext =
                        (this.labelContainer.length && this.labelContainer) ||
                        e(this.currentForm)),
                      (this.containers = e(this.settings.errorContainer).add(
                        this.settings.errorLabelContainer
                      )),
                      (this.submitted = {}),
                      (this.valueCache = {}),
                      (this.pendingRequest = 0),
                      (this.pending = {}),
                      (this.invalid = {}),
                      this.reset();
                    var t,
                      n = this.currentForm,
                      i = (this.groups = {});
                    function s(t) {
                      var i =
                        void 0 !== e(this).attr('contenteditable') &&
                        'false' !== e(this).attr('contenteditable');
                      if (
                        (!this.form &&
                          i &&
                          ((this.form = e(this).closest('form')[0]),
                          (this.name = e(this).attr('name'))),
                        n === this.form)
                      ) {
                        var s = e.data(this.form, 'validator'),
                          a = 'on' + t.type.replace(/^validate/, ''),
                          r = s.settings;
                        r[a] && !e(this).is(r.ignore) && r[a].call(s, this, t);
                      }
                    }
                    e.each(this.settings.groups, function (t, n) {
                      'string' == typeof n && (n = n.split(/\s/)),
                        e.each(n, function (e, n) {
                          i[n] = t;
                        });
                    }),
                      (t = this.settings.rules),
                      e.each(t, function (n, i) {
                        t[n] = e.validator.normalizeRule(i);
                      }),
                      e(this.currentForm)
                        .on(
                          'focusin.validate focusout.validate keyup.validate',
                          ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",
                          s
                        )
                        .on(
                          'click.validate',
                          "select, option, [type='radio'], [type='checkbox']",
                          s
                        ),
                      this.settings.invalidHandler &&
                        e(this.currentForm).on(
                          'invalid-form.validate',
                          this.settings.invalidHandler
                        );
                  },
                  form: function () {
                    return (
                      this.checkForm(),
                      e.extend(this.submitted, this.errorMap),
                      (this.invalid = e.extend({}, this.errorMap)),
                      this.valid() ||
                        e(this.currentForm).triggerHandler('invalid-form', [
                          this,
                        ]),
                      this.showErrors(),
                      this.valid()
                    );
                  },
                  checkForm: function () {
                    this.prepareForm();
                    for (
                      var e = 0, t = (this.currentElements = this.elements());
                      t[e];
                      e++
                    )
                      this.check(t[e]);
                    return this.valid();
                  },
                  element: function (t) {
                    var n,
                      i,
                      s = this.clean(t),
                      a = this.validationTargetFor(s),
                      r = this,
                      o = !0;
                    return (
                      void 0 === a
                        ? delete this.invalid[s.name]
                        : (this.prepareElement(a),
                          (this.currentElements = e(a)),
                          (i = this.groups[a.name]) &&
                            e.each(this.groups, function (e, t) {
                              t === i &&
                                e !== a.name &&
                                (s = r.validationTargetFor(
                                  r.clean(r.findByName(e))
                                )) &&
                                s.name in r.invalid &&
                                (r.currentElements.push(s),
                                (o = r.check(s) && o));
                            }),
                          (n = !1 !== this.check(a)),
                          (o = o && n),
                          (this.invalid[a.name] = !n),
                          this.numberOfInvalids() ||
                            (this.toHide = this.toHide.add(this.containers)),
                          this.showErrors(),
                          e(t).attr('aria-invalid', !n)),
                      o
                    );
                  },
                  showErrors: function (t) {
                    if (t) {
                      var n = this;
                      e.extend(this.errorMap, t),
                        (this.errorList = e.map(this.errorMap, function (e, t) {
                          return { message: e, element: n.findByName(t)[0] };
                        })),
                        (this.successList = e.grep(
                          this.successList,
                          function (e) {
                            return !(e.name in t);
                          }
                        ));
                    }
                    this.settings.showErrors
                      ? this.settings.showErrors.call(
                          this,
                          this.errorMap,
                          this.errorList
                        )
                      : this.defaultShowErrors();
                  },
                  resetForm: function () {
                    e.fn.resetForm && e(this.currentForm).resetForm(),
                      (this.invalid = {}),
                      (this.submitted = {}),
                      this.prepareForm(),
                      this.hideErrors();
                    var t = this.elements()
                      .removeData('previousValue')
                      .removeAttr('aria-invalid');
                    this.resetElements(t);
                  },
                  resetElements: function (e) {
                    var t;
                    if (this.settings.unhighlight)
                      for (t = 0; e[t]; t++)
                        this.settings.unhighlight.call(
                          this,
                          e[t],
                          this.settings.errorClass,
                          ''
                        ),
                          this.findByName(e[t].name).removeClass(
                            this.settings.validClass
                          );
                    else
                      e.removeClass(this.settings.errorClass).removeClass(
                        this.settings.validClass
                      );
                  },
                  numberOfInvalids: function () {
                    return this.objectLength(this.invalid);
                  },
                  objectLength: function (e) {
                    var t,
                      n = 0;
                    for (t in e)
                      void 0 !== e[t] && null !== e[t] && !1 !== e[t] && n++;
                    return n;
                  },
                  hideErrors: function () {
                    this.hideThese(this.toHide);
                  },
                  hideThese: function (e) {
                    e.not(this.containers).text(''), this.addWrapper(e).hide();
                  },
                  valid: function () {
                    return 0 === this.size();
                  },
                  size: function () {
                    return this.errorList.length;
                  },
                  focusInvalid: function () {
                    if (this.settings.focusInvalid)
                      try {
                        e(
                          this.findLastActive() ||
                            (this.errorList.length &&
                              this.errorList[0].element) ||
                            []
                        )
                          .filter(':visible')
                          .trigger('focus')
                          .trigger('focusin');
                      } catch (e) {}
                  },
                  findLastActive: function () {
                    var t = this.lastActive;
                    return (
                      t &&
                      1 ===
                        e.grep(this.errorList, function (e) {
                          return e.element.name === t.name;
                        }).length &&
                      t
                    );
                  },
                  elements: function () {
                    var t = this,
                      n = {};
                    return e(this.currentForm)
                      .find('input, select, textarea, [contenteditable]')
                      .not(':submit, :reset, :image, :disabled')
                      .not(this.settings.ignore)
                      .filter(function () {
                        var i = this.name || e(this).attr('name'),
                          s =
                            void 0 !== e(this).attr('contenteditable') &&
                            'false' !== e(this).attr('contenteditable');
                        return (
                          !i &&
                            t.settings.debug &&
                            window.console &&
                            console.error('%o has no name assigned', this),
                          s &&
                            ((this.form = e(this).closest('form')[0]),
                            (this.name = i)),
                          !(
                            this.form !== t.currentForm ||
                            i in n ||
                            !t.objectLength(e(this).rules()) ||
                            ((n[i] = !0), 0)
                          )
                        );
                      });
                  },
                  clean: function (t) {
                    return e(t)[0];
                  },
                  errors: function () {
                    var t = this.settings.errorClass.split(' ').join('.');
                    return e(
                      this.settings.errorElement + '.' + t,
                      this.errorContext
                    );
                  },
                  resetInternals: function () {
                    (this.successList = []),
                      (this.errorList = []),
                      (this.errorMap = {}),
                      (this.toShow = e([])),
                      (this.toHide = e([]));
                  },
                  reset: function () {
                    this.resetInternals(), (this.currentElements = e([]));
                  },
                  prepareForm: function () {
                    this.reset(),
                      (this.toHide = this.errors().add(this.containers));
                  },
                  prepareElement: function (e) {
                    this.reset(), (this.toHide = this.errorsFor(e));
                  },
                  elementValue: function (t) {
                    var n,
                      i,
                      s = e(t),
                      a = t.type,
                      r =
                        void 0 !== s.attr('contenteditable') &&
                        'false' !== s.attr('contenteditable');
                    return 'radio' === a || 'checkbox' === a
                      ? this.findByName(t.name).filter(':checked').val()
                      : 'number' === a && void 0 !== t.validity
                      ? t.validity.badInput
                        ? 'NaN'
                        : s.val()
                      : ((n = r ? s.text() : s.val()),
                        'file' === a
                          ? 'C:\\fakepath\\' === n.substr(0, 12)
                            ? n.substr(12)
                            : (i = n.lastIndexOf('/')) >= 0 ||
                              (i = n.lastIndexOf('\\')) >= 0
                            ? n.substr(i + 1)
                            : n
                          : 'string' == typeof n
                          ? n.replace(/\r/g, '')
                          : n);
                  },
                  check: function (t) {
                    t = this.validationTargetFor(this.clean(t));
                    var n,
                      i,
                      s,
                      a,
                      r = e(t).rules(),
                      o = e.map(r, function (e, t) {
                        return t;
                      }).length,
                      l = !1,
                      d = this.elementValue(t);
                    for (i in ('function' == typeof r.normalizer
                      ? (a = r.normalizer)
                      : 'function' == typeof this.settings.normalizer &&
                        (a = this.settings.normalizer),
                    a && ((d = a.call(t, d)), delete r.normalizer),
                    r)) {
                      s = { method: i, parameters: r[i] };
                      try {
                        if (
                          'dependency-mismatch' ===
                            (n = e.validator.methods[i].call(
                              this,
                              d,
                              t,
                              s.parameters
                            )) &&
                          1 === o
                        ) {
                          l = !0;
                          continue;
                        }
                        if (((l = !1), 'pending' === n))
                          return void (this.toHide = this.toHide.not(
                            this.errorsFor(t)
                          ));
                        if (!n) return this.formatAndAdd(t, s), !1;
                      } catch (e) {
                        throw (
                          (this.settings.debug &&
                            window.console &&
                            console.log(
                              'Exception occurred when checking element ' +
                                t.id +
                                ", check the '" +
                                s.method +
                                "' method.",
                              e
                            ),
                          e instanceof TypeError &&
                            (e.message +=
                              '.  Exception occurred when checking element ' +
                              t.id +
                              ", check the '" +
                              s.method +
                              "' method."),
                          e)
                        );
                      }
                    }
                    if (!l)
                      return (
                        this.objectLength(r) && this.successList.push(t), !0
                      );
                  },
                  customDataMessage: function (t, n) {
                    return (
                      e(t).data(
                        'msg' +
                          n.charAt(0).toUpperCase() +
                          n.substring(1).toLowerCase()
                      ) || e(t).data('msg')
                    );
                  },
                  customMessage: function (e, t) {
                    var n = this.settings.messages[e];
                    return n && (n.constructor === String ? n : n[t]);
                  },
                  findDefined: function () {
                    for (var e = 0; e < arguments.length; e++)
                      if (void 0 !== arguments[e]) return arguments[e];
                  },
                  defaultMessage: function (t, n) {
                    'string' == typeof n && (n = { method: n });
                    var i = this.findDefined(
                        this.customMessage(t.name, n.method),
                        this.customDataMessage(t, n.method),
                        (!this.settings.ignoreTitle && t.title) || void 0,
                        e.validator.messages[n.method],
                        '<strong>Warning: No message defined for ' +
                          t.name +
                          '</strong>'
                      ),
                      s = /\$?\{(\d+)\}/g;
                    return (
                      'function' == typeof i
                        ? (i = i.call(this, n.parameters, t))
                        : s.test(i) &&
                          (i = e.validator.format(
                            i.replace(s, '{$1}'),
                            n.parameters
                          )),
                      i
                    );
                  },
                  formatAndAdd: function (e, t) {
                    var n = this.defaultMessage(e, t);
                    this.errorList.push({
                      message: n,
                      element: e,
                      method: t.method,
                    }),
                      (this.errorMap[e.name] = n),
                      (this.submitted[e.name] = n);
                  },
                  addWrapper: function (e) {
                    return (
                      this.settings.wrapper &&
                        (e = e.add(e.parent(this.settings.wrapper))),
                      e
                    );
                  },
                  defaultShowErrors: function () {
                    var e, t, n;
                    for (e = 0; this.errorList[e]; e++)
                      (n = this.errorList[e]),
                        this.settings.highlight &&
                          this.settings.highlight.call(
                            this,
                            n.element,
                            this.settings.errorClass,
                            this.settings.validClass
                          ),
                        this.showLabel(n.element, n.message);
                    if (
                      (this.errorList.length &&
                        (this.toShow = this.toShow.add(this.containers)),
                      this.settings.success)
                    )
                      for (e = 0; this.successList[e]; e++)
                        this.showLabel(this.successList[e]);
                    if (this.settings.unhighlight)
                      for (e = 0, t = this.validElements(); t[e]; e++)
                        this.settings.unhighlight.call(
                          this,
                          t[e],
                          this.settings.errorClass,
                          this.settings.validClass
                        );
                    (this.toHide = this.toHide.not(this.toShow)),
                      this.hideErrors(),
                      this.addWrapper(this.toShow).show();
                  },
                  validElements: function () {
                    return this.currentElements.not(this.invalidElements());
                  },
                  invalidElements: function () {
                    return e(this.errorList).map(function () {
                      return this.element;
                    });
                  },
                  showLabel: function (t, n) {
                    var i,
                      s,
                      a,
                      r,
                      o = this.errorsFor(t),
                      l = this.idOrName(t),
                      d = e(t).attr('aria-describedby');
                    o.length
                      ? (o
                          .removeClass(this.settings.validClass)
                          .addClass(this.settings.errorClass),
                        o.html(n))
                      : ((i = o =
                          e('<' + this.settings.errorElement + '>')
                            .attr('id', l + '-error')
                            .addClass(this.settings.errorClass)
                            .html(n || '')),
                        this.settings.wrapper &&
                          (i = o
                            .hide()
                            .show()
                            .wrap('<' + this.settings.wrapper + '/>')
                            .parent()),
                        this.labelContainer.length
                          ? this.labelContainer.append(i)
                          : this.settings.errorPlacement
                          ? this.settings.errorPlacement.call(this, i, e(t))
                          : i.insertAfter(t),
                        o.is('label')
                          ? o.attr('for', l)
                          : 0 ===
                              o.parents(
                                "label[for='" + this.escapeCssMeta(l) + "']"
                              ).length &&
                            ((a = o.attr('id')),
                            d
                              ? d.match(
                                  new RegExp(
                                    '\\b' + this.escapeCssMeta(a) + '\\b'
                                  )
                                ) || (d += ' ' + a)
                              : (d = a),
                            e(t).attr('aria-describedby', d),
                            (s = this.groups[t.name]) &&
                              ((r = this),
                              e.each(r.groups, function (t, n) {
                                n === s &&
                                  e(
                                    "[name='" + r.escapeCssMeta(t) + "']",
                                    r.currentForm
                                  ).attr('aria-describedby', o.attr('id'));
                              })))),
                      !n &&
                        this.settings.success &&
                        (o.text(''),
                        'string' == typeof this.settings.success
                          ? o.addClass(this.settings.success)
                          : this.settings.success(o, t)),
                      (this.toShow = this.toShow.add(o));
                  },
                  errorsFor: function (t) {
                    var n = this.escapeCssMeta(this.idOrName(t)),
                      i = e(t).attr('aria-describedby'),
                      s = "label[for='" + n + "'], label[for='" + n + "'] *";
                    return (
                      i &&
                        (s =
                          s +
                          ', #' +
                          this.escapeCssMeta(i).replace(/\s+/g, ', #')),
                      this.errors().filter(s)
                    );
                  },
                  escapeCssMeta: function (e) {
                    return e.replace(
                      /([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g,
                      '\\$1'
                    );
                  },
                  idOrName: function (e) {
                    return (
                      this.groups[e.name] ||
                      (this.checkable(e) ? e.name : e.id || e.name)
                    );
                  },
                  validationTargetFor: function (t) {
                    return (
                      this.checkable(t) && (t = this.findByName(t.name)),
                      e(t).not(this.settings.ignore)[0]
                    );
                  },
                  checkable: function (e) {
                    return /radio|checkbox/i.test(e.type);
                  },
                  findByName: function (t) {
                    return e(this.currentForm).find(
                      "[name='" + this.escapeCssMeta(t) + "']"
                    );
                  },
                  getLength: function (t, n) {
                    switch (n.nodeName.toLowerCase()) {
                      case 'select':
                        return e('option:selected', n).length;
                      case 'input':
                        if (this.checkable(n))
                          return this.findByName(n.name).filter(':checked')
                            .length;
                    }
                    return t.length;
                  },
                  depend: function (e, t) {
                    return (
                      !this.dependTypes[typeof e] ||
                      this.dependTypes[typeof e](e, t)
                    );
                  },
                  dependTypes: {
                    boolean: function (e) {
                      return e;
                    },
                    string: function (t, n) {
                      return !!e(t, n.form).length;
                    },
                    function: function (e, t) {
                      return e(t);
                    },
                  },
                  optional: function (t) {
                    var n = this.elementValue(t);
                    return (
                      !e.validator.methods.required.call(this, n, t) &&
                      'dependency-mismatch'
                    );
                  },
                  startRequest: function (t) {
                    this.pending[t.name] ||
                      (this.pendingRequest++,
                      e(t).addClass(this.settings.pendingClass),
                      (this.pending[t.name] = !0));
                  },
                  stopRequest: function (t, n) {
                    this.pendingRequest--,
                      this.pendingRequest < 0 && (this.pendingRequest = 0),
                      delete this.pending[t.name],
                      e(t).removeClass(this.settings.pendingClass),
                      n &&
                      0 === this.pendingRequest &&
                      this.formSubmitted &&
                      this.form()
                        ? (e(this.currentForm).submit(),
                          this.submitButton &&
                            e(
                              "input:hidden[name='" +
                                this.submitButton.name +
                                "']",
                              this.currentForm
                            ).remove(),
                          (this.formSubmitted = !1))
                        : !n &&
                          0 === this.pendingRequest &&
                          this.formSubmitted &&
                          (e(this.currentForm).triggerHandler('invalid-form', [
                            this,
                          ]),
                          (this.formSubmitted = !1));
                  },
                  previousValue: function (t, n) {
                    return (
                      (n = ('string' == typeof n && n) || 'remote'),
                      e.data(t, 'previousValue') ||
                        e.data(t, 'previousValue', {
                          old: null,
                          valid: !0,
                          message: this.defaultMessage(t, { method: n }),
                        })
                    );
                  },
                  destroy: function () {
                    this.resetForm(),
                      e(this.currentForm)
                        .off('.validate')
                        .removeData('validator')
                        .find('.validate-equalTo-blur')
                        .off('.validate-equalTo')
                        .removeClass('validate-equalTo-blur')
                        .find('.validate-lessThan-blur')
                        .off('.validate-lessThan')
                        .removeClass('validate-lessThan-blur')
                        .find('.validate-lessThanEqual-blur')
                        .off('.validate-lessThanEqual')
                        .removeClass('validate-lessThanEqual-blur')
                        .find('.validate-greaterThanEqual-blur')
                        .off('.validate-greaterThanEqual')
                        .removeClass('validate-greaterThanEqual-blur')
                        .find('.validate-greaterThan-blur')
                        .off('.validate-greaterThan')
                        .removeClass('validate-greaterThan-blur');
                  },
                },
                classRuleSettings: {
                  required: { required: !0 },
                  email: { email: !0 },
                  url: { url: !0 },
                  date: { date: !0 },
                  dateISO: { dateISO: !0 },
                  number: { number: !0 },
                  digits: { digits: !0 },
                  creditcard: { creditcard: !0 },
                },
                addClassRules: function (t, n) {
                  t.constructor === String
                    ? (this.classRuleSettings[t] = n)
                    : e.extend(this.classRuleSettings, t);
                },
                classRules: function (t) {
                  var n = {},
                    i = e(t).attr('class');
                  return (
                    i &&
                      e.each(i.split(' '), function () {
                        this in e.validator.classRuleSettings &&
                          e.extend(n, e.validator.classRuleSettings[this]);
                      }),
                    n
                  );
                },
                normalizeAttributeRule: function (e, t, n, i) {
                  /min|max|step/.test(n) &&
                    (null === t || /number|range|text/.test(t)) &&
                    ((i = Number(i)), isNaN(i) && (i = void 0)),
                    i || 0 === i
                      ? (e[n] = i)
                      : t === n && 'range' !== t && (e[n] = !0);
                },
                attributeRules: function (t) {
                  var n,
                    i,
                    s = {},
                    a = e(t),
                    r = t.getAttribute('type');
                  for (n in e.validator.methods)
                    'required' === n
                      ? ('' === (i = t.getAttribute(n)) && (i = !0), (i = !!i))
                      : (i = a.attr(n)),
                      this.normalizeAttributeRule(s, r, n, i);
                  return (
                    s.maxlength &&
                      /-1|2147483647|524288/.test(s.maxlength) &&
                      delete s.maxlength,
                    s
                  );
                },
                dataRules: function (t) {
                  var n,
                    i,
                    s = {},
                    a = e(t),
                    r = t.getAttribute('type');
                  for (n in e.validator.methods)
                    '' ===
                      (i = a.data(
                        'rule' +
                          n.charAt(0).toUpperCase() +
                          n.substring(1).toLowerCase()
                      )) && (i = !0),
                      this.normalizeAttributeRule(s, r, n, i);
                  return s;
                },
                staticRules: function (t) {
                  var n = {},
                    i = e.data(t.form, 'validator');
                  return (
                    i.settings.rules &&
                      (n =
                        e.validator.normalizeRule(i.settings.rules[t.name]) ||
                        {}),
                    n
                  );
                },
                normalizeRules: function (t, n) {
                  return (
                    e.each(t, function (i, s) {
                      if (!1 !== s) {
                        if (s.param || s.depends) {
                          var a = !0;
                          switch (typeof s.depends) {
                            case 'string':
                              a = !!e(s.depends, n.form).length;
                              break;
                            case 'function':
                              a = s.depends.call(n, n);
                          }
                          a
                            ? (t[i] = void 0 === s.param || s.param)
                            : (e.data(n.form, 'validator').resetElements(e(n)),
                              delete t[i]);
                        }
                      } else delete t[i];
                    }),
                    e.each(t, function (i, s) {
                      t[i] = e.isFunction(s) && 'normalizer' !== i ? s(n) : s;
                    }),
                    e.each(['minlength', 'maxlength'], function () {
                      t[this] && (t[this] = Number(t[this]));
                    }),
                    e.each(['rangelength', 'range'], function () {
                      var n;
                      t[this] &&
                        (e.isArray(t[this])
                          ? (t[this] = [Number(t[this][0]), Number(t[this][1])])
                          : 'string' == typeof t[this] &&
                            ((n = t[this]
                              .replace(/[\[\]]/g, '')
                              .split(/[\s,]+/)),
                            (t[this] = [Number(n[0]), Number(n[1])])));
                    }),
                    e.validator.autoCreateRanges &&
                      (null != t.min &&
                        null != t.max &&
                        ((t.range = [t.min, t.max]),
                        delete t.min,
                        delete t.max),
                      null != t.minlength &&
                        null != t.maxlength &&
                        ((t.rangelength = [t.minlength, t.maxlength]),
                        delete t.minlength,
                        delete t.maxlength)),
                    t
                  );
                },
                normalizeRule: function (t) {
                  if ('string' == typeof t) {
                    var n = {};
                    e.each(t.split(/\s/), function () {
                      n[this] = !0;
                    }),
                      (t = n);
                  }
                  return t;
                },
                addMethod: function (t, n, i) {
                  (e.validator.methods[t] = n),
                    (e.validator.messages[t] =
                      void 0 !== i ? i : e.validator.messages[t]),
                    n.length < 3 &&
                      e.validator.addClassRules(
                        t,
                        e.validator.normalizeRule(t)
                      );
                },
                methods: {
                  required: function (t, n, i) {
                    if (!this.depend(i, n)) return 'dependency-mismatch';
                    if ('select' === n.nodeName.toLowerCase()) {
                      var s = e(n).val();
                      return s && s.length > 0;
                    }
                    return this.checkable(n)
                      ? this.getLength(t, n) > 0
                      : null != t && t.length > 0;
                  },
                  email: function (e, t) {
                    return (
                      this.optional(t) ||
                      /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(
                        e
                      )
                    );
                  },
                  url: function (e, t) {
                    return (
                      this.optional(t) ||
                      /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(
                        e
                      )
                    );
                  },
                  date:
                    ((t = !1),
                    function (e, n) {
                      return (
                        t ||
                          ((t = !0),
                          this.settings.debug &&
                            window.console &&
                            console.warn(
                              "The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`."
                            )),
                        this.optional(n) ||
                          !/Invalid|NaN/.test(new Date(e).toString())
                      );
                    }),
                  dateISO: function (e, t) {
                    return (
                      this.optional(t) ||
                      /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(
                        e
                      )
                    );
                  },
                  number: function (e, t) {
                    return (
                      this.optional(t) ||
                      /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(e)
                    );
                  },
                  digits: function (e, t) {
                    return this.optional(t) || /^\d+$/.test(e);
                  },
                  minlength: function (t, n, i) {
                    var s = e.isArray(t) ? t.length : this.getLength(t, n);
                    return this.optional(n) || s >= i;
                  },
                  maxlength: function (t, n, i) {
                    var s = e.isArray(t) ? t.length : this.getLength(t, n);
                    return this.optional(n) || s <= i;
                  },
                  rangelength: function (t, n, i) {
                    var s = e.isArray(t) ? t.length : this.getLength(t, n);
                    return this.optional(n) || (s >= i[0] && s <= i[1]);
                  },
                  min: function (e, t, n) {
                    return this.optional(t) || e >= n;
                  },
                  max: function (e, t, n) {
                    return this.optional(t) || e <= n;
                  },
                  range: function (e, t, n) {
                    return this.optional(t) || (e >= n[0] && e <= n[1]);
                  },
                  step: function (t, n, i) {
                    var s,
                      a = e(n).attr('type'),
                      r =
                        'Step attribute on input type ' +
                        a +
                        ' is not supported.',
                      o = new RegExp('\\b' + a + '\\b'),
                      l = function (e) {
                        var t = ('' + e).match(/(?:\.(\d+))?$/);
                        return t && t[1] ? t[1].length : 0;
                      },
                      d = function (e) {
                        return Math.round(e * Math.pow(10, s));
                      },
                      c = !0;
                    if (a && !o.test(['text', 'number', 'range'].join()))
                      throw new Error(r);
                    return (
                      (s = l(i)),
                      (l(t) > s || d(t) % d(i) != 0) && (c = !1),
                      this.optional(n) || c
                    );
                  },
                  equalTo: function (t, n, i) {
                    var s = e(i);
                    return (
                      this.settings.onfocusout &&
                        s.not('.validate-equalTo-blur').length &&
                        s
                          .addClass('validate-equalTo-blur')
                          .on('blur.validate-equalTo', function () {
                            e(n).valid();
                          }),
                      t === s.val()
                    );
                  },
                  remote: function (t, n, i, s) {
                    if (this.optional(n)) return 'dependency-mismatch';
                    s = ('string' == typeof s && s) || 'remote';
                    var a,
                      r,
                      o,
                      l = this.previousValue(n, s);
                    return (
                      this.settings.messages[n.name] ||
                        (this.settings.messages[n.name] = {}),
                      (l.originalMessage =
                        l.originalMessage || this.settings.messages[n.name][s]),
                      (this.settings.messages[n.name][s] = l.message),
                      (i = ('string' == typeof i && { url: i }) || i),
                      (o = e.param(e.extend({ data: t }, i.data))),
                      l.old === o
                        ? l.valid
                        : ((l.old = o),
                          (a = this),
                          this.startRequest(n),
                          ((r = {})[n.name] = t),
                          e.ajax(
                            e.extend(
                              !0,
                              {
                                mode: 'abort',
                                port: 'validate' + n.name,
                                dataType: 'json',
                                data: r,
                                context: a.currentForm,
                                success: function (e) {
                                  var i,
                                    r,
                                    o,
                                    d = !0 === e || 'true' === e;
                                  (a.settings.messages[n.name][s] =
                                    l.originalMessage),
                                    d
                                      ? ((o = a.formSubmitted),
                                        a.resetInternals(),
                                        (a.toHide = a.errorsFor(n)),
                                        (a.formSubmitted = o),
                                        a.successList.push(n),
                                        (a.invalid[n.name] = !1),
                                        a.showErrors())
                                      : ((i = {}),
                                        (r =
                                          e ||
                                          a.defaultMessage(n, {
                                            method: s,
                                            parameters: t,
                                          })),
                                        (i[n.name] = l.message = r),
                                        (a.invalid[n.name] = !0),
                                        a.showErrors(i)),
                                    (l.valid = d),
                                    a.stopRequest(n, d);
                                },
                              },
                              i
                            )
                          ),
                          'pending')
                    );
                  },
                },
              });
            var i,
              s = {};
            return (
              e.ajaxPrefilter
                ? e.ajaxPrefilter(function (e, t, n) {
                    var i = e.port;
                    'abort' === e.mode && (s[i] && s[i].abort(), (s[i] = n));
                  })
                : ((i = e.ajax),
                  (e.ajax = function (t) {
                    var n = ('mode' in t ? t : e.ajaxSettings).mode,
                      a = ('port' in t ? t : e.ajaxSettings).port;
                    return 'abort' === n
                      ? (s[a] && s[a].abort(),
                        (s[a] = i.apply(this, arguments)),
                        s[a])
                      : i.apply(this, arguments);
                  })),
              e
            );
          })
            ? i.apply(t, s)
            : i) || (e.exports = a);
  },
  function (e, t, n) {},
  function (e, t, n) {
    'use strict';
    n.r(t);
    var i = n(0),
      s = n.n(i);
    function a(e) {
      return (
        null !== e &&
        'object' == typeof e &&
        'constructor' in e &&
        e.constructor === Object
      );
    }
    function r(e, t) {
      void 0 === e && (e = {}),
        void 0 === t && (t = {}),
        Object.keys(t).forEach(function (n) {
          void 0 === e[n]
            ? (e[n] = t[n])
            : a(t[n]) &&
              a(e[n]) &&
              Object.keys(t[n]).length > 0 &&
              r(e[n], t[n]);
        });
    }
    var o = 'undefined' != typeof document ? document : {},
      l = {
        body: {},
        addEventListener: function () {},
        removeEventListener: function () {},
        activeElement: { blur: function () {}, nodeName: '' },
        querySelector: function () {
          return null;
        },
        querySelectorAll: function () {
          return [];
        },
        getElementById: function () {
          return null;
        },
        createEvent: function () {
          return { initEvent: function () {} };
        },
        createElement: function () {
          return {
            children: [],
            childNodes: [],
            style: {},
            setAttribute: function () {},
            getElementsByTagName: function () {
              return [];
            },
          };
        },
        createElementNS: function () {
          return {};
        },
        importNode: function () {
          return null;
        },
        location: {
          hash: '',
          host: '',
          hostname: '',
          href: '',
          origin: '',
          pathname: '',
          protocol: '',
          search: '',
        },
      };
    r(o, l);
    var d = 'undefined' != typeof window ? window : {};
    r(d, {
      document: l,
      navigator: { userAgent: '' },
      location: {
        hash: '',
        host: '',
        hostname: '',
        href: '',
        origin: '',
        pathname: '',
        protocol: '',
        search: '',
      },
      history: {
        replaceState: function () {},
        pushState: function () {},
        go: function () {},
        back: function () {},
      },
      CustomEvent: function () {
        return this;
      },
      addEventListener: function () {},
      removeEventListener: function () {},
      getComputedStyle: function () {
        return {
          getPropertyValue: function () {
            return '';
          },
        };
      },
      Image: function () {},
      Date: function () {},
      screen: {},
      setTimeout: function () {},
      clearTimeout: function () {},
      matchMedia: function () {
        return {};
      },
    });
    class c {
      constructor(e) {
        const t = this;
        for (let n = 0; n < e.length; n += 1) t[n] = e[n];
        return (t.length = e.length), this;
      }
    }
    function u(e, t) {
      const n = [];
      let i = 0;
      if (e && !t && e instanceof c) return e;
      if (e)
        if ('string' == typeof e) {
          let s, a;
          const r = e.trim();
          if (r.indexOf('<') >= 0 && r.indexOf('>') >= 0) {
            let e = 'div';
            for (
              0 === r.indexOf('<li') && (e = 'ul'),
                0 === r.indexOf('<tr') && (e = 'tbody'),
                (0 !== r.indexOf('<td') && 0 !== r.indexOf('<th')) ||
                  (e = 'tr'),
                0 === r.indexOf('<tbody') && (e = 'table'),
                0 === r.indexOf('<option') && (e = 'select'),
                a = o.createElement(e),
                a.innerHTML = r,
                i = 0;
              i < a.childNodes.length;
              i += 1
            )
              n.push(a.childNodes[i]);
          } else
            for (
              s =
                t || '#' !== e[0] || e.match(/[ .<>:~]/)
                  ? (t || o).querySelectorAll(e.trim())
                  : [o.getElementById(e.trim().split('#')[1])],
                i = 0;
              i < s.length;
              i += 1
            )
              s[i] && n.push(s[i]);
        } else if (e.nodeType || e === d || e === o) n.push(e);
        else if (e.length > 0 && e[0].nodeType)
          for (i = 0; i < e.length; i += 1) n.push(e[i]);
      return new c(n);
    }
    function p(e) {
      const t = [];
      for (let n = 0; n < e.length; n += 1)
        -1 === t.indexOf(e[n]) && t.push(e[n]);
      return t;
    }
    (u.fn = c.prototype), (u.Class = c), (u.Dom7 = c);
    'resize scroll'.split(' ');
    const h = {
      addClass: function (e) {
        if (void 0 === e) return this;
        const t = e.split(' ');
        for (let e = 0; e < t.length; e += 1)
          for (let n = 0; n < this.length; n += 1)
            void 0 !== this[n] &&
              void 0 !== this[n].classList &&
              this[n].classList.add(t[e]);
        return this;
      },
      removeClass: function (e) {
        const t = e.split(' ');
        for (let e = 0; e < t.length; e += 1)
          for (let n = 0; n < this.length; n += 1)
            void 0 !== this[n] &&
              void 0 !== this[n].classList &&
              this[n].classList.remove(t[e]);
        return this;
      },
      hasClass: function (e) {
        return !!this[0] && this[0].classList.contains(e);
      },
      toggleClass: function (e) {
        const t = e.split(' ');
        for (let e = 0; e < t.length; e += 1)
          for (let n = 0; n < this.length; n += 1)
            void 0 !== this[n] &&
              void 0 !== this[n].classList &&
              this[n].classList.toggle(t[e]);
        return this;
      },
      attr: function (e, t) {
        if (1 === arguments.length && 'string' == typeof e)
          return this[0] ? this[0].getAttribute(e) : void 0;
        for (let n = 0; n < this.length; n += 1)
          if (2 === arguments.length) this[n].setAttribute(e, t);
          else
            for (const t in e)
              (this[n][t] = e[t]), this[n].setAttribute(t, e[t]);
        return this;
      },
      removeAttr: function (e) {
        for (let t = 0; t < this.length; t += 1) this[t].removeAttribute(e);
        return this;
      },
      data: function (e, t) {
        let n;
        if (void 0 !== t) {
          for (let i = 0; i < this.length; i += 1)
            (n = this[i]),
              n.dom7ElementDataStorage || (n.dom7ElementDataStorage = {}),
              (n.dom7ElementDataStorage[e] = t);
          return this;
        }
        if (((n = this[0]), n)) {
          if (n.dom7ElementDataStorage && e in n.dom7ElementDataStorage)
            return n.dom7ElementDataStorage[e];
          const t = n.getAttribute('data-' + e);
          return t || void 0;
        }
      },
      transform: function (e) {
        for (let t = 0; t < this.length; t += 1) {
          const n = this[t].style;
          (n.webkitTransform = e), (n.transform = e);
        }
        return this;
      },
      transition: function (e) {
        'string' != typeof e && (e += 'ms');
        for (let t = 0; t < this.length; t += 1) {
          const n = this[t].style;
          (n.webkitTransitionDuration = e), (n.transitionDuration = e);
        }
        return this;
      },
      on: function (...e) {
        let [t, n, i, s] = e;
        function a(e) {
          const t = e.target;
          if (!t) return;
          const s = e.target.dom7EventData || [];
          if ((s.indexOf(e) < 0 && s.unshift(e), u(t).is(n))) i.apply(t, s);
          else {
            const e = u(t).parents();
            for (let t = 0; t < e.length; t += 1)
              u(e[t]).is(n) && i.apply(e[t], s);
          }
        }
        function r(e) {
          const t = (e && e.target && e.target.dom7EventData) || [];
          t.indexOf(e) < 0 && t.unshift(e), i.apply(this, t);
        }
        'function' == typeof e[1] && (([t, i, s] = e), (n = void 0)),
          s || (s = !1);
        const o = t.split(' ');
        let l;
        for (let e = 0; e < this.length; e += 1) {
          const t = this[e];
          if (n)
            for (l = 0; l < o.length; l += 1) {
              const e = o[l];
              t.dom7LiveListeners || (t.dom7LiveListeners = {}),
                t.dom7LiveListeners[e] || (t.dom7LiveListeners[e] = []),
                t.dom7LiveListeners[e].push({ listener: i, proxyListener: a }),
                t.addEventListener(e, a, s);
            }
          else
            for (l = 0; l < o.length; l += 1) {
              const e = o[l];
              t.dom7Listeners || (t.dom7Listeners = {}),
                t.dom7Listeners[e] || (t.dom7Listeners[e] = []),
                t.dom7Listeners[e].push({ listener: i, proxyListener: r }),
                t.addEventListener(e, r, s);
            }
        }
        return this;
      },
      off: function (...e) {
        let [t, n, i, s] = e;
        'function' == typeof e[1] && (([t, i, s] = e), (n = void 0)),
          s || (s = !1);
        const a = t.split(' ');
        for (let e = 0; e < a.length; e += 1) {
          const t = a[e];
          for (let e = 0; e < this.length; e += 1) {
            const a = this[e];
            let r;
            if (
              (!n && a.dom7Listeners
                ? (r = a.dom7Listeners[t])
                : n && a.dom7LiveListeners && (r = a.dom7LiveListeners[t]),
              r && r.length)
            )
              for (let e = r.length - 1; e >= 0; e -= 1) {
                const n = r[e];
                (i && n.listener === i) ||
                (i &&
                  n.listener &&
                  n.listener.dom7proxy &&
                  n.listener.dom7proxy === i)
                  ? (a.removeEventListener(t, n.proxyListener, s),
                    r.splice(e, 1))
                  : i ||
                    (a.removeEventListener(t, n.proxyListener, s),
                    r.splice(e, 1));
              }
          }
        }
        return this;
      },
      trigger: function (...e) {
        const t = e[0].split(' '),
          n = e[1];
        for (let i = 0; i < t.length; i += 1) {
          const s = t[i];
          for (let t = 0; t < this.length; t += 1) {
            const i = this[t];
            let a;
            try {
              a = new d.CustomEvent(s, {
                detail: n,
                bubbles: !0,
                cancelable: !0,
              });
            } catch (e) {
              (a = o.createEvent('Event')),
                a.initEvent(s, !0, !0),
                (a.detail = n);
            }
            (i.dom7EventData = e.filter((e, t) => t > 0)),
              i.dispatchEvent(a),
              (i.dom7EventData = []),
              delete i.dom7EventData;
          }
        }
        return this;
      },
      transitionEnd: function (e) {
        const t = ['webkitTransitionEnd', 'transitionend'],
          n = this;
        let i;
        function s(a) {
          if (a.target === this)
            for (e.call(this, a), i = 0; i < t.length; i += 1) n.off(t[i], s);
        }
        if (e) for (i = 0; i < t.length; i += 1) n.on(t[i], s);
        return this;
      },
      outerWidth: function (e) {
        if (this.length > 0) {
          if (e) {
            const e = this.styles();
            return (
              this[0].offsetWidth +
              parseFloat(e.getPropertyValue('margin-right')) +
              parseFloat(e.getPropertyValue('margin-left'))
            );
          }
          return this[0].offsetWidth;
        }
        return null;
      },
      outerHeight: function (e) {
        if (this.length > 0) {
          if (e) {
            const e = this.styles();
            return (
              this[0].offsetHeight +
              parseFloat(e.getPropertyValue('margin-top')) +
              parseFloat(e.getPropertyValue('margin-bottom'))
            );
          }
          return this[0].offsetHeight;
        }
        return null;
      },
      offset: function () {
        if (this.length > 0) {
          const e = this[0],
            t = e.getBoundingClientRect(),
            n = o.body,
            i = e.clientTop || n.clientTop || 0,
            s = e.clientLeft || n.clientLeft || 0,
            a = e === d ? d.scrollY : e.scrollTop,
            r = e === d ? d.scrollX : e.scrollLeft;
          return { top: t.top + a - i, left: t.left + r - s };
        }
        return null;
      },
      css: function (e, t) {
        let n;
        if (1 === arguments.length) {
          if ('string' != typeof e) {
            for (n = 0; n < this.length; n += 1)
              for (let t in e) this[n].style[t] = e[t];
            return this;
          }
          if (this[0])
            return d.getComputedStyle(this[0], null).getPropertyValue(e);
        }
        if (2 === arguments.length && 'string' == typeof e) {
          for (n = 0; n < this.length; n += 1) this[n].style[e] = t;
          return this;
        }
        return this;
      },
      each: function (e) {
        if (!e) return this;
        for (let t = 0; t < this.length; t += 1)
          if (!1 === e.call(this[t], t, this[t])) return this;
        return this;
      },
      html: function (e) {
        if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;
        for (let t = 0; t < this.length; t += 1) this[t].innerHTML = e;
        return this;
      },
      text: function (e) {
        if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;
        for (let t = 0; t < this.length; t += 1) this[t].textContent = e;
        return this;
      },
      is: function (e) {
        const t = this[0];
        let n, i;
        if (!t || void 0 === e) return !1;
        if ('string' == typeof e) {
          if (t.matches) return t.matches(e);
          if (t.webkitMatchesSelector) return t.webkitMatchesSelector(e);
          if (t.msMatchesSelector) return t.msMatchesSelector(e);
          for (n = u(e), i = 0; i < n.length; i += 1) if (n[i] === t) return !0;
          return !1;
        }
        if (e === o) return t === o;
        if (e === d) return t === d;
        if (e.nodeType || e instanceof c) {
          for (n = e.nodeType ? [e] : e, i = 0; i < n.length; i += 1)
            if (n[i] === t) return !0;
          return !1;
        }
        return !1;
      },
      index: function () {
        let e,
          t = this[0];
        if (t) {
          for (e = 0; null !== (t = t.previousSibling); )
            1 === t.nodeType && (e += 1);
          return e;
        }
      },
      eq: function (e) {
        if (void 0 === e) return this;
        const t = this.length;
        let n;
        return e > t - 1
          ? new c([])
          : e < 0
          ? ((n = t + e), new c(n < 0 ? [] : [this[n]]))
          : new c([this[e]]);
      },
      append: function (...e) {
        let t;
        for (let n = 0; n < e.length; n += 1) {
          t = e[n];
          for (let e = 0; e < this.length; e += 1)
            if ('string' == typeof t) {
              const n = o.createElement('div');
              for (n.innerHTML = t; n.firstChild; )
                this[e].appendChild(n.firstChild);
            } else if (t instanceof c)
              for (let n = 0; n < t.length; n += 1) this[e].appendChild(t[n]);
            else this[e].appendChild(t);
        }
        return this;
      },
      prepend: function (e) {
        let t, n;
        for (t = 0; t < this.length; t += 1)
          if ('string' == typeof e) {
            const i = o.createElement('div');
            for (i.innerHTML = e, n = i.childNodes.length - 1; n >= 0; n -= 1)
              this[t].insertBefore(i.childNodes[n], this[t].childNodes[0]);
          } else if (e instanceof c)
            for (n = 0; n < e.length; n += 1)
              this[t].insertBefore(e[n], this[t].childNodes[0]);
          else this[t].insertBefore(e, this[t].childNodes[0]);
        return this;
      },
      next: function (e) {
        return this.length > 0
          ? e
            ? this[0].nextElementSibling && u(this[0].nextElementSibling).is(e)
              ? new c([this[0].nextElementSibling])
              : new c([])
            : this[0].nextElementSibling
            ? new c([this[0].nextElementSibling])
            : new c([])
          : new c([]);
      },
      nextAll: function (e) {
        const t = [];
        let n = this[0];
        if (!n) return new c([]);
        for (; n.nextElementSibling; ) {
          const i = n.nextElementSibling;
          e ? u(i).is(e) && t.push(i) : t.push(i), (n = i);
        }
        return new c(t);
      },
      prev: function (e) {
        if (this.length > 0) {
          const t = this[0];
          return e
            ? t.previousElementSibling && u(t.previousElementSibling).is(e)
              ? new c([t.previousElementSibling])
              : new c([])
            : t.previousElementSibling
            ? new c([t.previousElementSibling])
            : new c([]);
        }
        return new c([]);
      },
      prevAll: function (e) {
        const t = [];
        let n = this[0];
        if (!n) return new c([]);
        for (; n.previousElementSibling; ) {
          const i = n.previousElementSibling;
          e ? u(i).is(e) && t.push(i) : t.push(i), (n = i);
        }
        return new c(t);
      },
      parent: function (e) {
        const t = [];
        for (let n = 0; n < this.length; n += 1)
          null !== this[n].parentNode &&
            (e
              ? u(this[n].parentNode).is(e) && t.push(this[n].parentNode)
              : t.push(this[n].parentNode));
        return u(p(t));
      },
      parents: function (e) {
        const t = [];
        for (let n = 0; n < this.length; n += 1) {
          let i = this[n].parentNode;
          for (; i; )
            e ? u(i).is(e) && t.push(i) : t.push(i), (i = i.parentNode);
        }
        return u(p(t));
      },
      closest: function (e) {
        let t = this;
        return void 0 === e
          ? new c([])
          : (t.is(e) || (t = t.parents(e).eq(0)), t);
      },
      find: function (e) {
        const t = [];
        for (let n = 0; n < this.length; n += 1) {
          const i = this[n].querySelectorAll(e);
          for (let e = 0; e < i.length; e += 1) t.push(i[e]);
        }
        return new c(t);
      },
      children: function (e) {
        const t = [];
        for (let n = 0; n < this.length; n += 1) {
          const i = this[n].childNodes;
          for (let n = 0; n < i.length; n += 1)
            e
              ? 1 === i[n].nodeType && u(i[n]).is(e) && t.push(i[n])
              : 1 === i[n].nodeType && t.push(i[n]);
        }
        return new c(p(t));
      },
      filter: function (e) {
        const t = [],
          n = this;
        for (let i = 0; i < n.length; i += 1)
          e.call(n[i], i, n[i]) && t.push(n[i]);
        return new c(t);
      },
      remove: function () {
        for (let e = 0; e < this.length; e += 1)
          this[e].parentNode && this[e].parentNode.removeChild(this[e]);
        return this;
      },
      add: function (...e) {
        const t = this;
        let n, i;
        for (n = 0; n < e.length; n += 1) {
          const s = u(e[n]);
          for (i = 0; i < s.length; i += 1)
            (t[t.length] = s[i]), (t.length += 1);
        }
        return t;
      },
      styles: function () {
        return this[0] ? d.getComputedStyle(this[0], null) : {};
      },
    };
    Object.keys(h).forEach((e) => {
      u.fn[e] = u.fn[e] || h[e];
    });
    const f = {
        deleteProps(e) {
          const t = e;
          Object.keys(t).forEach((e) => {
            try {
              t[e] = null;
            } catch (e) {}
            try {
              delete t[e];
            } catch (e) {}
          });
        },
        nextTick: (e, t = 0) => setTimeout(e, t),
        now: () => Date.now(),
        getTranslate(e, t = 'x') {
          let n, i, s;
          const a = d.getComputedStyle(e, null);
          return (
            d.WebKitCSSMatrix
              ? ((i = a.transform || a.webkitTransform),
                i.split(',').length > 6 &&
                  (i = i
                    .split(', ')
                    .map((e) => e.replace(',', '.'))
                    .join(', ')),
                (s = new d.WebKitCSSMatrix('none' === i ? '' : i)))
              : ((s =
                  a.MozTransform ||
                  a.OTransform ||
                  a.MsTransform ||
                  a.msTransform ||
                  a.transform ||
                  a
                    .getPropertyValue('transform')
                    .replace('translate(', 'matrix(1, 0, 0, 1,')),
                (n = s.toString().split(','))),
            'x' === t &&
              (i = d.WebKitCSSMatrix
                ? s.m41
                : 16 === n.length
                ? parseFloat(n[12])
                : parseFloat(n[4])),
            'y' === t &&
              (i = d.WebKitCSSMatrix
                ? s.m42
                : 16 === n.length
                ? parseFloat(n[13])
                : parseFloat(n[5])),
            i || 0
          );
        },
        parseUrlQuery(e) {
          const t = {};
          let n,
            i,
            s,
            a,
            r = e || d.location.href;
          if ('string' == typeof r && r.length)
            for (
              r = r.indexOf('?') > -1 ? r.replace(/\S*\?/, '') : '',
                i = r.split('&').filter((e) => '' !== e),
                a = i.length,
                n = 0;
              n < a;
              n += 1
            )
              (s = i[n].replace(/#\S+/g, '').split('=')),
                (t[decodeURIComponent(s[0])] =
                  void 0 === s[1] ? void 0 : decodeURIComponent(s[1]) || '');
          return t;
        },
        isObject: (e) =>
          'object' == typeof e &&
          null !== e &&
          e.constructor &&
          e.constructor === Object,
        extend(...e) {
          const t = Object(e[0]);
          for (let n = 1; n < e.length; n += 1) {
            const i = e[n];
            if (null != i) {
              const e = Object.keys(Object(i));
              for (let n = 0, s = e.length; n < s; n += 1) {
                const s = e[n],
                  a = Object.getOwnPropertyDescriptor(i, s);
                void 0 !== a &&
                  a.enumerable &&
                  (f.isObject(t[s]) && f.isObject(i[s])
                    ? f.extend(t[s], i[s])
                    : !f.isObject(t[s]) && f.isObject(i[s])
                    ? ((t[s] = {}), f.extend(t[s], i[s]))
                    : (t[s] = i[s]));
              }
            }
          }
          return t;
        },
      },
      m = {
        touch: !!(
          'ontouchstart' in d ||
          (d.DocumentTouch && o instanceof d.DocumentTouch)
        ),
        pointerEvents:
          !!d.PointerEvent &&
          'maxTouchPoints' in d.navigator &&
          d.navigator.maxTouchPoints >= 0,
        observer: 'MutationObserver' in d || 'WebkitMutationObserver' in d,
        passiveListener: (function () {
          let e = !1;
          try {
            const t = Object.defineProperty({}, 'passive', {
              get() {
                e = !0;
              },
            });
            d.addEventListener('testPassiveListener', null, t);
          } catch (e) {}
          return e;
        })(),
        gestures: 'ongesturestart' in d,
      };
    class g {
      constructor(e = {}) {
        const t = this;
        (t.params = e),
          (t.eventsListeners = {}),
          t.params &&
            t.params.on &&
            Object.keys(t.params.on).forEach((e) => {
              t.on(e, t.params.on[e]);
            });
      }
      on(e, t, n) {
        const i = this;
        if ('function' != typeof t) return i;
        const s = n ? 'unshift' : 'push';
        return (
          e.split(' ').forEach((e) => {
            i.eventsListeners[e] || (i.eventsListeners[e] = []),
              i.eventsListeners[e][s](t);
          }),
          i
        );
      }
      once(e, t, n) {
        const i = this;
        if ('function' != typeof t) return i;
        function s(...n) {
          i.off(e, s), s.f7proxy && delete s.f7proxy, t.apply(i, n);
        }
        return (s.f7proxy = t), i.on(e, s, n);
      }
      off(e, t) {
        const n = this;
        return n.eventsListeners
          ? (e.split(' ').forEach((e) => {
              void 0 === t
                ? (n.eventsListeners[e] = [])
                : n.eventsListeners[e] &&
                  n.eventsListeners[e].length &&
                  n.eventsListeners[e].forEach((i, s) => {
                    (i === t || (i.f7proxy && i.f7proxy === t)) &&
                      n.eventsListeners[e].splice(s, 1);
                  });
            }),
            n)
          : n;
      }
      emit(...e) {
        const t = this;
        if (!t.eventsListeners) return t;
        let n, i, s;
        'string' == typeof e[0] || Array.isArray(e[0])
          ? ((n = e[0]), (i = e.slice(1, e.length)), (s = t))
          : ((n = e[0].events), (i = e[0].data), (s = e[0].context || t));
        return (
          (Array.isArray(n) ? n : n.split(' ')).forEach((e) => {
            if (t.eventsListeners && t.eventsListeners[e]) {
              const n = [];
              t.eventsListeners[e].forEach((e) => {
                n.push(e);
              }),
                n.forEach((e) => {
                  e.apply(s, i);
                });
            }
          }),
          t
        );
      }
      useModulesParams(e) {
        const t = this;
        t.modules &&
          Object.keys(t.modules).forEach((n) => {
            const i = t.modules[n];
            i.params && f.extend(e, i.params);
          });
      }
      useModules(e = {}) {
        const t = this;
        t.modules &&
          Object.keys(t.modules).forEach((n) => {
            const i = t.modules[n],
              s = e[n] || {};
            i.instance &&
              Object.keys(i.instance).forEach((e) => {
                const n = i.instance[e];
                t[e] = 'function' == typeof n ? n.bind(t) : n;
              }),
              i.on &&
                t.on &&
                Object.keys(i.on).forEach((e) => {
                  t.on(e, i.on[e]);
                }),
              i.create && i.create.bind(t)(s);
          });
      }
      static set components(e) {
        this.use && this.use(e);
      }
      static installModule(e, ...t) {
        const n = this;
        n.prototype.modules || (n.prototype.modules = {});
        const i =
          e.name || `${Object.keys(n.prototype.modules).length}_${f.now()}`;
        return (
          (n.prototype.modules[i] = e),
          e.proto &&
            Object.keys(e.proto).forEach((t) => {
              n.prototype[t] = e.proto[t];
            }),
          e.static &&
            Object.keys(e.static).forEach((t) => {
              n[t] = e.static[t];
            }),
          e.install && e.install.apply(n, t),
          n
        );
      }
      static use(e, ...t) {
        const n = this;
        return Array.isArray(e)
          ? (e.forEach((e) => n.installModule(e)), n)
          : n.installModule(e, ...t);
      }
    }
    var v = {
      updateSize: function () {
        const e = this;
        let t, n;
        const i = e.$el;
        (t = void 0 !== e.params.width ? e.params.width : i[0].clientWidth),
          (n =
            void 0 !== e.params.height ? e.params.height : i[0].clientHeight),
          (0 === t && e.isHorizontal()) ||
            (0 === n && e.isVertical()) ||
            ((t =
              t -
              parseInt(i.css('padding-left'), 10) -
              parseInt(i.css('padding-right'), 10)),
            (n =
              n -
              parseInt(i.css('padding-top'), 10) -
              parseInt(i.css('padding-bottom'), 10)),
            f.extend(e, {
              width: t,
              height: n,
              size: e.isHorizontal() ? t : n,
            }));
      },
      updateSlides: function () {
        const e = this,
          t = e.params,
          { $wrapperEl: n, size: i, rtlTranslate: s, wrongRTL: a } = e,
          r = e.virtual && t.virtual.enabled,
          o = r ? e.virtual.slides.length : e.slides.length,
          l = n.children('.' + e.params.slideClass),
          c = r ? e.virtual.slides.length : l.length;
        let u = [];
        const p = [],
          h = [];
        function m(e) {
          return !t.cssMode || e !== l.length - 1;
        }
        let g = t.slidesOffsetBefore;
        'function' == typeof g && (g = t.slidesOffsetBefore.call(e));
        let v = t.slidesOffsetAfter;
        'function' == typeof v && (v = t.slidesOffsetAfter.call(e));
        const y = e.snapGrid.length,
          b = e.snapGrid.length;
        let w,
          x,
          T = t.spaceBetween,
          C = -g,
          E = 0,
          S = 0;
        if (void 0 === i) return;
        'string' == typeof T &&
          T.indexOf('%') >= 0 &&
          (T = (parseFloat(T.replace('%', '')) / 100) * i),
          (e.virtualSize = -T),
          s
            ? l.css({ marginLeft: '', marginTop: '' })
            : l.css({ marginRight: '', marginBottom: '' }),
          t.slidesPerColumn > 1 &&
            ((w =
              Math.floor(c / t.slidesPerColumn) === c / e.params.slidesPerColumn
                ? c
                : Math.ceil(c / t.slidesPerColumn) * t.slidesPerColumn),
            'auto' !== t.slidesPerView &&
              'row' === t.slidesPerColumnFill &&
              (w = Math.max(w, t.slidesPerView * t.slidesPerColumn)));
        const k = t.slidesPerColumn,
          M = w / k,
          $ = Math.floor(c / t.slidesPerColumn);
        for (let n = 0; n < c; n += 1) {
          x = 0;
          const s = l.eq(n);
          if (t.slidesPerColumn > 1) {
            let i, a, r;
            if ('row' === t.slidesPerColumnFill && t.slidesPerGroup > 1) {
              const e = Math.floor(n / (t.slidesPerGroup * t.slidesPerColumn)),
                o = n - t.slidesPerColumn * t.slidesPerGroup * e,
                l =
                  0 === e
                    ? t.slidesPerGroup
                    : Math.min(
                        Math.ceil((c - e * k * t.slidesPerGroup) / k),
                        t.slidesPerGroup
                      );
              (r = Math.floor(o / l)),
                (a = o - r * l + e * t.slidesPerGroup),
                (i = a + (r * w) / k),
                s.css({
                  webkitBoxOrdinalGroup: i,
                  mozBoxOrdinalGroup: i,
                  msFlexOrder: i,
                  webkitOrder: i,
                  order: i,
                });
            } else
              'column' === t.slidesPerColumnFill
                ? ((a = Math.floor(n / k)),
                  (r = n - a * k),
                  (a > $ || (a === $ && r === k - 1)) &&
                    ((r += 1), r >= k && ((r = 0), (a += 1))))
                : ((r = Math.floor(n / M)), (a = n - r * M));
            s.css(
              'margin-' + (e.isHorizontal() ? 'top' : 'left'),
              0 !== r && t.spaceBetween && t.spaceBetween + 'px'
            );
          }
          if ('none' !== s.css('display')) {
            if ('auto' === t.slidesPerView) {
              const n = d.getComputedStyle(s[0], null),
                i = s[0].style.transform,
                a = s[0].style.webkitTransform;
              if (
                (i && (s[0].style.transform = 'none'),
                a && (s[0].style.webkitTransform = 'none'),
                t.roundLengths)
              )
                x = e.isHorizontal() ? s.outerWidth(!0) : s.outerHeight(!0);
              else if (e.isHorizontal()) {
                const e = parseFloat(n.getPropertyValue('width')),
                  t = parseFloat(n.getPropertyValue('padding-left')),
                  i = parseFloat(n.getPropertyValue('padding-right')),
                  s = parseFloat(n.getPropertyValue('margin-left')),
                  a = parseFloat(n.getPropertyValue('margin-right')),
                  r = n.getPropertyValue('box-sizing');
                x = r && 'border-box' === r ? e + s + a : e + t + i + s + a;
              } else {
                const e = parseFloat(n.getPropertyValue('height')),
                  t = parseFloat(n.getPropertyValue('padding-top')),
                  i = parseFloat(n.getPropertyValue('padding-bottom')),
                  s = parseFloat(n.getPropertyValue('margin-top')),
                  a = parseFloat(n.getPropertyValue('margin-bottom')),
                  r = n.getPropertyValue('box-sizing');
                x = r && 'border-box' === r ? e + s + a : e + t + i + s + a;
              }
              i && (s[0].style.transform = i),
                a && (s[0].style.webkitTransform = a),
                t.roundLengths && (x = Math.floor(x));
            } else
              (x = (i - (t.slidesPerView - 1) * T) / t.slidesPerView),
                t.roundLengths && (x = Math.floor(x)),
                l[n] &&
                  (e.isHorizontal()
                    ? (l[n].style.width = x + 'px')
                    : (l[n].style.height = x + 'px'));
            l[n] && (l[n].swiperSlideSize = x),
              h.push(x),
              t.centeredSlides
                ? ((C = C + x / 2 + E / 2 + T),
                  0 === E && 0 !== n && (C = C - i / 2 - T),
                  0 === n && (C = C - i / 2 - T),
                  Math.abs(C) < 0.001 && (C = 0),
                  t.roundLengths && (C = Math.floor(C)),
                  S % t.slidesPerGroup == 0 && u.push(C),
                  p.push(C))
                : (t.roundLengths && (C = Math.floor(C)),
                  (S - Math.min(e.params.slidesPerGroupSkip, S)) %
                    e.params.slidesPerGroup ==
                    0 && u.push(C),
                  p.push(C),
                  (C = C + x + T)),
              (e.virtualSize += x + T),
              (E = x),
              (S += 1);
          }
        }
        let P;
        if (
          ((e.virtualSize = Math.max(e.virtualSize, i) + v),
          s &&
            a &&
            ('slide' === t.effect || 'coverflow' === t.effect) &&
            n.css({ width: e.virtualSize + t.spaceBetween + 'px' }),
          t.setWrapperSize &&
            (e.isHorizontal()
              ? n.css({ width: e.virtualSize + t.spaceBetween + 'px' })
              : n.css({ height: e.virtualSize + t.spaceBetween + 'px' })),
          t.slidesPerColumn > 1 &&
            ((e.virtualSize = (x + t.spaceBetween) * w),
            (e.virtualSize =
              Math.ceil(e.virtualSize / t.slidesPerColumn) - t.spaceBetween),
            e.isHorizontal()
              ? n.css({ width: e.virtualSize + t.spaceBetween + 'px' })
              : n.css({ height: e.virtualSize + t.spaceBetween + 'px' }),
            t.centeredSlides))
        ) {
          P = [];
          for (let n = 0; n < u.length; n += 1) {
            let i = u[n];
            t.roundLengths && (i = Math.floor(i)),
              u[n] < e.virtualSize + u[0] && P.push(i);
          }
          u = P;
        }
        if (!t.centeredSlides) {
          P = [];
          for (let n = 0; n < u.length; n += 1) {
            let s = u[n];
            t.roundLengths && (s = Math.floor(s)),
              u[n] <= e.virtualSize - i && P.push(s);
          }
          (u = P),
            Math.floor(e.virtualSize - i) - Math.floor(u[u.length - 1]) > 1 &&
              u.push(e.virtualSize - i);
        }
        if (
          (0 === u.length && (u = [0]),
          0 !== t.spaceBetween &&
            (e.isHorizontal()
              ? s
                ? l.filter(m).css({ marginLeft: T + 'px' })
                : l.filter(m).css({ marginRight: T + 'px' })
              : l.filter(m).css({ marginBottom: T + 'px' })),
          t.centeredSlides && t.centeredSlidesBounds)
        ) {
          let e = 0;
          h.forEach((n) => {
            e += n + (t.spaceBetween ? t.spaceBetween : 0);
          }),
            (e -= t.spaceBetween);
          const n = e - i;
          u = u.map((e) => (e < 0 ? -g : e > n ? n + v : e));
        }
        if (t.centerInsufficientSlides) {
          let e = 0;
          if (
            (h.forEach((n) => {
              e += n + (t.spaceBetween ? t.spaceBetween : 0);
            }),
            (e -= t.spaceBetween),
            e < i)
          ) {
            const t = (i - e) / 2;
            u.forEach((e, n) => {
              u[n] = e - t;
            }),
              p.forEach((e, n) => {
                p[n] = e + t;
              });
          }
        }
        f.extend(e, {
          slides: l,
          snapGrid: u,
          slidesGrid: p,
          slidesSizesGrid: h,
        }),
          c !== o && e.emit('slidesLengthChange'),
          u.length !== y &&
            (e.params.watchOverflow && e.checkOverflow(),
            e.emit('snapGridLengthChange')),
          p.length !== b && e.emit('slidesGridLengthChange'),
          (t.watchSlidesProgress || t.watchSlidesVisibility) &&
            e.updateSlidesOffset();
      },
      updateAutoHeight: function (e) {
        const t = this,
          n = [];
        let i,
          s = 0;
        if (
          ('number' == typeof e
            ? t.setTransition(e)
            : !0 === e && t.setTransition(t.params.speed),
          'auto' !== t.params.slidesPerView && t.params.slidesPerView > 1)
        )
          if (t.params.centeredSlides)
            t.visibleSlides.each((e, t) => {
              n.push(t);
            });
          else
            for (i = 0; i < Math.ceil(t.params.slidesPerView); i += 1) {
              const e = t.activeIndex + i;
              if (e > t.slides.length) break;
              n.push(t.slides.eq(e)[0]);
            }
        else n.push(t.slides.eq(t.activeIndex)[0]);
        for (i = 0; i < n.length; i += 1)
          if (void 0 !== n[i]) {
            const e = n[i].offsetHeight;
            s = e > s ? e : s;
          }
        s && t.$wrapperEl.css('height', s + 'px');
      },
      updateSlidesOffset: function () {
        const e = this,
          t = e.slides;
        for (let n = 0; n < t.length; n += 1)
          t[n].swiperSlideOffset = e.isHorizontal()
            ? t[n].offsetLeft
            : t[n].offsetTop;
      },
      updateSlidesProgress: function (e = (this && this.translate) || 0) {
        const t = this,
          n = t.params,
          { slides: i, rtlTranslate: s } = t;
        if (0 === i.length) return;
        void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
        let a = -e;
        s && (a = e),
          i.removeClass(n.slideVisibleClass),
          (t.visibleSlidesIndexes = []),
          (t.visibleSlides = []);
        for (let e = 0; e < i.length; e += 1) {
          const r = i[e],
            o =
              (a +
                (n.centeredSlides ? t.minTranslate() : 0) -
                r.swiperSlideOffset) /
              (r.swiperSlideSize + n.spaceBetween);
          if (n.watchSlidesVisibility || (n.centeredSlides && n.autoHeight)) {
            const s = -(a - r.swiperSlideOffset),
              o = s + t.slidesSizesGrid[e];
            ((s >= 0 && s < t.size - 1) ||
              (o > 1 && o <= t.size) ||
              (s <= 0 && o >= t.size)) &&
              (t.visibleSlides.push(r),
              t.visibleSlidesIndexes.push(e),
              i.eq(e).addClass(n.slideVisibleClass));
          }
          r.progress = s ? -o : o;
        }
        t.visibleSlides = u(t.visibleSlides);
      },
      updateProgress: function (e) {
        const t = this;
        if (void 0 === e) {
          const n = t.rtlTranslate ? -1 : 1;
          e = (t && t.translate && t.translate * n) || 0;
        }
        const n = t.params,
          i = t.maxTranslate() - t.minTranslate();
        let { progress: s, isBeginning: a, isEnd: r } = t;
        const o = a,
          l = r;
        0 === i
          ? ((s = 0), (a = !0), (r = !0))
          : ((s = (e - t.minTranslate()) / i), (a = s <= 0), (r = s >= 1)),
          f.extend(t, { progress: s, isBeginning: a, isEnd: r }),
          (n.watchSlidesProgress ||
            n.watchSlidesVisibility ||
            (n.centeredSlides && n.autoHeight)) &&
            t.updateSlidesProgress(e),
          a && !o && t.emit('reachBeginning toEdge'),
          r && !l && t.emit('reachEnd toEdge'),
          ((o && !a) || (l && !r)) && t.emit('fromEdge'),
          t.emit('progress', s);
      },
      updateSlidesClasses: function () {
        const e = this,
          {
            slides: t,
            params: n,
            $wrapperEl: i,
            activeIndex: s,
            realIndex: a,
          } = e,
          r = e.virtual && n.virtual.enabled;
        let o;
        t.removeClass(
          `${n.slideActiveClass} ${n.slideNextClass} ${n.slidePrevClass} ${n.slideDuplicateActiveClass} ${n.slideDuplicateNextClass} ${n.slideDuplicatePrevClass}`
        ),
          (o = r
            ? e.$wrapperEl.find(
                `.${n.slideClass}[data-swiper-slide-index="${s}"]`
              )
            : t.eq(s)),
          o.addClass(n.slideActiveClass),
          n.loop &&
            (o.hasClass(n.slideDuplicateClass)
              ? i
                  .children(
                    `.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${a}"]`
                  )
                  .addClass(n.slideDuplicateActiveClass)
              : i
                  .children(
                    `.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${a}"]`
                  )
                  .addClass(n.slideDuplicateActiveClass));
        let l = o
          .nextAll('.' + n.slideClass)
          .eq(0)
          .addClass(n.slideNextClass);
        n.loop &&
          0 === l.length &&
          ((l = t.eq(0)), l.addClass(n.slideNextClass));
        let d = o
          .prevAll('.' + n.slideClass)
          .eq(0)
          .addClass(n.slidePrevClass);
        n.loop &&
          0 === d.length &&
          ((d = t.eq(-1)), d.addClass(n.slidePrevClass)),
          n.loop &&
            (l.hasClass(n.slideDuplicateClass)
              ? i
                  .children(
                    `.${n.slideClass}:not(.${
                      n.slideDuplicateClass
                    })[data-swiper-slide-index="${l.attr(
                      'data-swiper-slide-index'
                    )}"]`
                  )
                  .addClass(n.slideDuplicateNextClass)
              : i
                  .children(
                    `.${n.slideClass}.${
                      n.slideDuplicateClass
                    }[data-swiper-slide-index="${l.attr(
                      'data-swiper-slide-index'
                    )}"]`
                  )
                  .addClass(n.slideDuplicateNextClass),
            d.hasClass(n.slideDuplicateClass)
              ? i
                  .children(
                    `.${n.slideClass}:not(.${
                      n.slideDuplicateClass
                    })[data-swiper-slide-index="${d.attr(
                      'data-swiper-slide-index'
                    )}"]`
                  )
                  .addClass(n.slideDuplicatePrevClass)
              : i
                  .children(
                    `.${n.slideClass}.${
                      n.slideDuplicateClass
                    }[data-swiper-slide-index="${d.attr(
                      'data-swiper-slide-index'
                    )}"]`
                  )
                  .addClass(n.slideDuplicatePrevClass));
      },
      updateActiveIndex: function (e) {
        const t = this,
          n = t.rtlTranslate ? t.translate : -t.translate,
          {
            slidesGrid: i,
            snapGrid: s,
            params: a,
            activeIndex: r,
            realIndex: o,
            snapIndex: l,
          } = t;
        let d,
          c = e;
        if (void 0 === c) {
          for (let e = 0; e < i.length; e += 1)
            void 0 !== i[e + 1]
              ? n >= i[e] && n < i[e + 1] - (i[e + 1] - i[e]) / 2
                ? (c = e)
                : n >= i[e] && n < i[e + 1] && (c = e + 1)
              : n >= i[e] && (c = e);
          a.normalizeSlideIndex && (c < 0 || void 0 === c) && (c = 0);
        }
        if (s.indexOf(n) >= 0) d = s.indexOf(n);
        else {
          const e = Math.min(a.slidesPerGroupSkip, c);
          d = e + Math.floor((c - e) / a.slidesPerGroup);
        }
        if ((d >= s.length && (d = s.length - 1), c === r))
          return void (
            d !== l && ((t.snapIndex = d), t.emit('snapIndexChange'))
          );
        const u = parseInt(
          t.slides.eq(c).attr('data-swiper-slide-index') || c,
          10
        );
        f.extend(t, {
          snapIndex: d,
          realIndex: u,
          previousIndex: r,
          activeIndex: c,
        }),
          t.emit('activeIndexChange'),
          t.emit('snapIndexChange'),
          o !== u && t.emit('realIndexChange'),
          (t.initialized || t.params.runCallbacksOnInit) &&
            t.emit('slideChange');
      },
      updateClickedSlide: function (e) {
        const t = this,
          n = t.params,
          i = u(e.target).closest('.' + n.slideClass)[0];
        let s = !1;
        if (i)
          for (let e = 0; e < t.slides.length; e += 1)
            t.slides[e] === i && (s = !0);
        if (!i || !s)
          return (t.clickedSlide = void 0), void (t.clickedIndex = void 0);
        (t.clickedSlide = i),
          t.virtual && t.params.virtual.enabled
            ? (t.clickedIndex = parseInt(
                u(i).attr('data-swiper-slide-index'),
                10
              ))
            : (t.clickedIndex = u(i).index()),
          n.slideToClickedSlide &&
            void 0 !== t.clickedIndex &&
            t.clickedIndex !== t.activeIndex &&
            t.slideToClickedSlide();
      },
    };
    var y = {
      getTranslate: function (e = this.isHorizontal() ? 'x' : 'y') {
        const {
          params: t,
          rtlTranslate: n,
          translate: i,
          $wrapperEl: s,
        } = this;
        if (t.virtualTranslate) return n ? -i : i;
        if (t.cssMode) return i;
        let a = f.getTranslate(s[0], e);
        return n && (a = -a), a || 0;
      },
      setTranslate: function (e, t) {
        const n = this,
          {
            rtlTranslate: i,
            params: s,
            $wrapperEl: a,
            wrapperEl: r,
            progress: o,
          } = n;
        let l,
          d = 0,
          c = 0;
        n.isHorizontal() ? (d = i ? -e : e) : (c = e),
          s.roundLengths && ((d = Math.floor(d)), (c = Math.floor(c))),
          s.cssMode
            ? (r[n.isHorizontal() ? 'scrollLeft' : 'scrollTop'] =
                n.isHorizontal() ? -d : -c)
            : s.virtualTranslate ||
              a.transform(`translate3d(${d}px, ${c}px, 0px)`),
          (n.previousTranslate = n.translate),
          (n.translate = n.isHorizontal() ? d : c);
        const u = n.maxTranslate() - n.minTranslate();
        (l = 0 === u ? 0 : (e - n.minTranslate()) / u),
          l !== o && n.updateProgress(e),
          n.emit('setTranslate', n.translate, t);
      },
      minTranslate: function () {
        return -this.snapGrid[0];
      },
      maxTranslate: function () {
        return -this.snapGrid[this.snapGrid.length - 1];
      },
      translateTo: function (e = 0, t = this.params.speed, n = !0, i = !0, s) {
        const a = this,
          { params: r, wrapperEl: o } = a;
        if (a.animating && r.preventInteractionOnTransition) return !1;
        const l = a.minTranslate(),
          d = a.maxTranslate();
        let c;
        if (
          ((c = i && e > l ? l : i && e < d ? d : e),
          a.updateProgress(c),
          r.cssMode)
        ) {
          const e = a.isHorizontal();
          return (
            0 === t
              ? (o[e ? 'scrollLeft' : 'scrollTop'] = -c)
              : o.scrollTo
              ? o.scrollTo({ [e ? 'left' : 'top']: -c, behavior: 'smooth' })
              : (o[e ? 'scrollLeft' : 'scrollTop'] = -c),
            !0
          );
        }
        return (
          0 === t
            ? (a.setTransition(0),
              a.setTranslate(c),
              n &&
                (a.emit('beforeTransitionStart', t, s),
                a.emit('transitionEnd')))
            : (a.setTransition(t),
              a.setTranslate(c),
              n &&
                (a.emit('beforeTransitionStart', t, s),
                a.emit('transitionStart')),
              a.animating ||
                ((a.animating = !0),
                a.onTranslateToWrapperTransitionEnd ||
                  (a.onTranslateToWrapperTransitionEnd = function (e) {
                    a &&
                      !a.destroyed &&
                      e.target === this &&
                      (a.$wrapperEl[0].removeEventListener(
                        'transitionend',
                        a.onTranslateToWrapperTransitionEnd
                      ),
                      a.$wrapperEl[0].removeEventListener(
                        'webkitTransitionEnd',
                        a.onTranslateToWrapperTransitionEnd
                      ),
                      (a.onTranslateToWrapperTransitionEnd = null),
                      delete a.onTranslateToWrapperTransitionEnd,
                      n && a.emit('transitionEnd'));
                  }),
                a.$wrapperEl[0].addEventListener(
                  'transitionend',
                  a.onTranslateToWrapperTransitionEnd
                ),
                a.$wrapperEl[0].addEventListener(
                  'webkitTransitionEnd',
                  a.onTranslateToWrapperTransitionEnd
                ))),
          !0
        );
      },
    };
    var b = {
      setTransition: function (e, t) {
        const n = this;
        n.params.cssMode || n.$wrapperEl.transition(e),
          n.emit('setTransition', e, t);
      },
      transitionStart: function (e = !0, t) {
        const n = this,
          { activeIndex: i, params: s, previousIndex: a } = n;
        if (s.cssMode) return;
        s.autoHeight && n.updateAutoHeight();
        let r = t;
        if (
          (r || (r = i > a ? 'next' : i < a ? 'prev' : 'reset'),
          n.emit('transitionStart'),
          e && i !== a)
        ) {
          if ('reset' === r) return void n.emit('slideResetTransitionStart');
          n.emit('slideChangeTransitionStart'),
            'next' === r
              ? n.emit('slideNextTransitionStart')
              : n.emit('slidePrevTransitionStart');
        }
      },
      transitionEnd: function (e = !0, t) {
        const n = this,
          { activeIndex: i, previousIndex: s, params: a } = n;
        if (((n.animating = !1), a.cssMode)) return;
        n.setTransition(0);
        let r = t;
        if (
          (r || (r = i > s ? 'next' : i < s ? 'prev' : 'reset'),
          n.emit('transitionEnd'),
          e && i !== s)
        ) {
          if ('reset' === r) return void n.emit('slideResetTransitionEnd');
          n.emit('slideChangeTransitionEnd'),
            'next' === r
              ? n.emit('slideNextTransitionEnd')
              : n.emit('slidePrevTransitionEnd');
        }
      },
    };
    var w = {
      slideTo: function (e = 0, t = this.params.speed, n = !0, i) {
        const s = this;
        let a = e;
        a < 0 && (a = 0);
        const {
          params: r,
          snapGrid: o,
          slidesGrid: l,
          previousIndex: d,
          activeIndex: c,
          rtlTranslate: u,
          wrapperEl: p,
        } = s;
        if (s.animating && r.preventInteractionOnTransition) return !1;
        const h = Math.min(s.params.slidesPerGroupSkip, a);
        let f = h + Math.floor((a - h) / s.params.slidesPerGroup);
        f >= o.length && (f = o.length - 1),
          (c || r.initialSlide || 0) === (d || 0) &&
            n &&
            s.emit('beforeSlideChangeStart');
        const m = -o[f];
        if ((s.updateProgress(m), r.normalizeSlideIndex))
          for (let e = 0; e < l.length; e += 1)
            -Math.floor(100 * m) >= Math.floor(100 * l[e]) && (a = e);
        if (s.initialized && a !== c) {
          if (!s.allowSlideNext && m < s.translate && m < s.minTranslate())
            return !1;
          if (
            !s.allowSlidePrev &&
            m > s.translate &&
            m > s.maxTranslate() &&
            (c || 0) !== a
          )
            return !1;
        }
        let g;
        if (
          ((g = a > c ? 'next' : a < c ? 'prev' : 'reset'),
          (u && -m === s.translate) || (!u && m === s.translate))
        )
          return (
            s.updateActiveIndex(a),
            r.autoHeight && s.updateAutoHeight(),
            s.updateSlidesClasses(),
            'slide' !== r.effect && s.setTranslate(m),
            'reset' !== g && (s.transitionStart(n, g), s.transitionEnd(n, g)),
            !1
          );
        if (r.cssMode) {
          const e = s.isHorizontal();
          let n = -m;
          return (
            u && (n = p.scrollWidth - p.offsetWidth - n),
            0 === t
              ? (p[e ? 'scrollLeft' : 'scrollTop'] = n)
              : p.scrollTo
              ? p.scrollTo({ [e ? 'left' : 'top']: n, behavior: 'smooth' })
              : (p[e ? 'scrollLeft' : 'scrollTop'] = n),
            !0
          );
        }
        return (
          0 === t
            ? (s.setTransition(0),
              s.setTranslate(m),
              s.updateActiveIndex(a),
              s.updateSlidesClasses(),
              s.emit('beforeTransitionStart', t, i),
              s.transitionStart(n, g),
              s.transitionEnd(n, g))
            : (s.setTransition(t),
              s.setTranslate(m),
              s.updateActiveIndex(a),
              s.updateSlidesClasses(),
              s.emit('beforeTransitionStart', t, i),
              s.transitionStart(n, g),
              s.animating ||
                ((s.animating = !0),
                s.onSlideToWrapperTransitionEnd ||
                  (s.onSlideToWrapperTransitionEnd = function (e) {
                    s &&
                      !s.destroyed &&
                      e.target === this &&
                      (s.$wrapperEl[0].removeEventListener(
                        'transitionend',
                        s.onSlideToWrapperTransitionEnd
                      ),
                      s.$wrapperEl[0].removeEventListener(
                        'webkitTransitionEnd',
                        s.onSlideToWrapperTransitionEnd
                      ),
                      (s.onSlideToWrapperTransitionEnd = null),
                      delete s.onSlideToWrapperTransitionEnd,
                      s.transitionEnd(n, g));
                  }),
                s.$wrapperEl[0].addEventListener(
                  'transitionend',
                  s.onSlideToWrapperTransitionEnd
                ),
                s.$wrapperEl[0].addEventListener(
                  'webkitTransitionEnd',
                  s.onSlideToWrapperTransitionEnd
                ))),
          !0
        );
      },
      slideToLoop: function (e = 0, t = this.params.speed, n = !0, i) {
        const s = this;
        let a = e;
        return s.params.loop && (a += s.loopedSlides), s.slideTo(a, t, n, i);
      },
      slideNext: function (e = this.params.speed, t = !0, n) {
        const i = this,
          { params: s, animating: a } = i,
          r = i.activeIndex < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup;
        if (s.loop) {
          if (a) return !1;
          i.loopFix(), (i._clientLeft = i.$wrapperEl[0].clientLeft);
        }
        return i.slideTo(i.activeIndex + r, e, t, n);
      },
      slidePrev: function (e = this.params.speed, t = !0, n) {
        const i = this,
          {
            params: s,
            animating: a,
            snapGrid: r,
            slidesGrid: o,
            rtlTranslate: l,
          } = i;
        if (s.loop) {
          if (a) return !1;
          i.loopFix(), (i._clientLeft = i.$wrapperEl[0].clientLeft);
        }
        function d(e) {
          return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
        }
        const c = d(l ? i.translate : -i.translate),
          u = r.map((e) => d(e));
        o.map((e) => d(e)), r[u.indexOf(c)];
        let p,
          h = r[u.indexOf(c) - 1];
        return (
          void 0 === h &&
            s.cssMode &&
            r.forEach((e) => {
              !h && c >= e && (h = e);
            }),
          void 0 !== h &&
            ((p = o.indexOf(h)), p < 0 && (p = i.activeIndex - 1)),
          i.slideTo(p, e, t, n)
        );
      },
      slideReset: function (e = this.params.speed, t = !0, n) {
        return this.slideTo(this.activeIndex, e, t, n);
      },
      slideToClosest: function (e = this.params.speed, t = !0, n, i = 0.5) {
        const s = this;
        let a = s.activeIndex;
        const r = Math.min(s.params.slidesPerGroupSkip, a),
          o = r + Math.floor((a - r) / s.params.slidesPerGroup),
          l = s.rtlTranslate ? s.translate : -s.translate;
        if (l >= s.snapGrid[o]) {
          const e = s.snapGrid[o];
          l - e > (s.snapGrid[o + 1] - e) * i && (a += s.params.slidesPerGroup);
        } else {
          const e = s.snapGrid[o - 1];
          l - e <= (s.snapGrid[o] - e) * i && (a -= s.params.slidesPerGroup);
        }
        return (
          (a = Math.max(a, 0)),
          (a = Math.min(a, s.slidesGrid.length - 1)),
          s.slideTo(a, e, t, n)
        );
      },
      slideToClickedSlide: function () {
        const e = this,
          { params: t, $wrapperEl: n } = e,
          i =
            'auto' === t.slidesPerView
              ? e.slidesPerViewDynamic()
              : t.slidesPerView;
        let s,
          a = e.clickedIndex;
        if (t.loop) {
          if (e.animating) return;
          (s = parseInt(u(e.clickedSlide).attr('data-swiper-slide-index'), 10)),
            t.centeredSlides
              ? a < e.loopedSlides - i / 2 ||
                a > e.slides.length - e.loopedSlides + i / 2
                ? (e.loopFix(),
                  (a = n
                    .children(
                      `.${t.slideClass}[data-swiper-slide-index="${s}"]:not(.${t.slideDuplicateClass})`
                    )
                    .eq(0)
                    .index()),
                  f.nextTick(() => {
                    e.slideTo(a);
                  }))
                : e.slideTo(a)
              : a > e.slides.length - i
              ? (e.loopFix(),
                (a = n
                  .children(
                    `.${t.slideClass}[data-swiper-slide-index="${s}"]:not(.${t.slideDuplicateClass})`
                  )
                  .eq(0)
                  .index()),
                f.nextTick(() => {
                  e.slideTo(a);
                }))
              : e.slideTo(a);
        } else e.slideTo(a);
      },
    };
    var x = {
      loopCreate: function () {
        const e = this,
          { params: t, $wrapperEl: n } = e;
        n.children(`.${t.slideClass}.${t.slideDuplicateClass}`).remove();
        let i = n.children('.' + t.slideClass);
        if (t.loopFillGroupWithBlank) {
          const e = t.slidesPerGroup - (i.length % t.slidesPerGroup);
          if (e !== t.slidesPerGroup) {
            for (let i = 0; i < e; i += 1) {
              const e = u(o.createElement('div')).addClass(
                `${t.slideClass} ${t.slideBlankClass}`
              );
              n.append(e);
            }
            i = n.children('.' + t.slideClass);
          }
        }
        'auto' !== t.slidesPerView ||
          t.loopedSlides ||
          (t.loopedSlides = i.length),
          (e.loopedSlides = Math.ceil(
            parseFloat(t.loopedSlides || t.slidesPerView, 10)
          )),
          (e.loopedSlides += t.loopAdditionalSlides),
          e.loopedSlides > i.length && (e.loopedSlides = i.length);
        const s = [],
          a = [];
        i.each((t, n) => {
          const r = u(n);
          t < e.loopedSlides && a.push(n),
            t < i.length && t >= i.length - e.loopedSlides && s.push(n),
            r.attr('data-swiper-slide-index', t);
        });
        for (let e = 0; e < a.length; e += 1)
          n.append(u(a[e].cloneNode(!0)).addClass(t.slideDuplicateClass));
        for (let e = s.length - 1; e >= 0; e -= 1)
          n.prepend(u(s[e].cloneNode(!0)).addClass(t.slideDuplicateClass));
      },
      loopFix: function () {
        const e = this;
        e.emit('beforeLoopFix');
        const {
          activeIndex: t,
          slides: n,
          loopedSlides: i,
          allowSlidePrev: s,
          allowSlideNext: a,
          snapGrid: r,
          rtlTranslate: o,
        } = e;
        let l;
        (e.allowSlidePrev = !0), (e.allowSlideNext = !0);
        const d = -r[t] - e.getTranslate();
        if (t < i) {
          (l = n.length - 3 * i + t), (l += i);
          e.slideTo(l, 0, !1, !0) &&
            0 !== d &&
            e.setTranslate((o ? -e.translate : e.translate) - d);
        } else if (t >= n.length - i) {
          (l = -n.length + t + i), (l += i);
          e.slideTo(l, 0, !1, !0) &&
            0 !== d &&
            e.setTranslate((o ? -e.translate : e.translate) - d);
        }
        (e.allowSlidePrev = s), (e.allowSlideNext = a), e.emit('loopFix');
      },
      loopDestroy: function () {
        const { $wrapperEl: e, params: t, slides: n } = this;
        e
          .children(
            `.${t.slideClass}.${t.slideDuplicateClass},.${t.slideClass}.${t.slideBlankClass}`
          )
          .remove(),
          n.removeAttr('data-swiper-slide-index');
      },
    };
    var T = {
      setGrabCursor: function (e) {
        if (
          m.touch ||
          !this.params.simulateTouch ||
          (this.params.watchOverflow && this.isLocked) ||
          this.params.cssMode
        )
          return;
        const t = this.el;
        (t.style.cursor = 'move'),
          (t.style.cursor = e ? '-webkit-grabbing' : '-webkit-grab'),
          (t.style.cursor = e ? '-moz-grabbin' : '-moz-grab'),
          (t.style.cursor = e ? 'grabbing' : 'grab');
      },
      unsetGrabCursor: function () {
        m.touch ||
          (this.params.watchOverflow && this.isLocked) ||
          this.params.cssMode ||
          (this.el.style.cursor = '');
      },
    };
    var C = {
      appendSlide: function (e) {
        const t = this,
          { $wrapperEl: n, params: i } = t;
        if ((i.loop && t.loopDestroy(), 'object' == typeof e && 'length' in e))
          for (let t = 0; t < e.length; t += 1) e[t] && n.append(e[t]);
        else n.append(e);
        i.loop && t.loopCreate(), (i.observer && m.observer) || t.update();
      },
      prependSlide: function (e) {
        const t = this,
          { params: n, $wrapperEl: i, activeIndex: s } = t;
        n.loop && t.loopDestroy();
        let a = s + 1;
        if ('object' == typeof e && 'length' in e) {
          for (let t = 0; t < e.length; t += 1) e[t] && i.prepend(e[t]);
          a = s + e.length;
        } else i.prepend(e);
        n.loop && t.loopCreate(),
          (n.observer && m.observer) || t.update(),
          t.slideTo(a, 0, !1);
      },
      addSlide: function (e, t) {
        const n = this,
          { $wrapperEl: i, params: s, activeIndex: a } = n;
        let r = a;
        s.loop &&
          ((r -= n.loopedSlides),
          n.loopDestroy(),
          (n.slides = i.children('.' + s.slideClass)));
        const o = n.slides.length;
        if (e <= 0) return void n.prependSlide(t);
        if (e >= o) return void n.appendSlide(t);
        let l = r > e ? r + 1 : r;
        const d = [];
        for (let t = o - 1; t >= e; t -= 1) {
          const e = n.slides.eq(t);
          e.remove(), d.unshift(e);
        }
        if ('object' == typeof t && 'length' in t) {
          for (let e = 0; e < t.length; e += 1) t[e] && i.append(t[e]);
          l = r > e ? r + t.length : r;
        } else i.append(t);
        for (let e = 0; e < d.length; e += 1) i.append(d[e]);
        s.loop && n.loopCreate(),
          (s.observer && m.observer) || n.update(),
          s.loop ? n.slideTo(l + n.loopedSlides, 0, !1) : n.slideTo(l, 0, !1);
      },
      removeSlide: function (e) {
        const t = this,
          { params: n, $wrapperEl: i, activeIndex: s } = t;
        let a = s;
        n.loop &&
          ((a -= t.loopedSlides),
          t.loopDestroy(),
          (t.slides = i.children('.' + n.slideClass)));
        let r,
          o = a;
        if ('object' == typeof e && 'length' in e) {
          for (let n = 0; n < e.length; n += 1)
            (r = e[n]),
              t.slides[r] && t.slides.eq(r).remove(),
              r < o && (o -= 1);
          o = Math.max(o, 0);
        } else
          (r = e),
            t.slides[r] && t.slides.eq(r).remove(),
            r < o && (o -= 1),
            (o = Math.max(o, 0));
        n.loop && t.loopCreate(),
          (n.observer && m.observer) || t.update(),
          n.loop ? t.slideTo(o + t.loopedSlides, 0, !1) : t.slideTo(o, 0, !1);
      },
      removeAllSlides: function () {
        const e = this,
          t = [];
        for (let n = 0; n < e.slides.length; n += 1) t.push(n);
        e.removeSlide(t);
      },
    };
    const E = (function () {
      const e = d.navigator.platform,
        t = d.navigator.userAgent,
        n = {
          ios: !1,
          android: !1,
          androidChrome: !1,
          desktop: !1,
          iphone: !1,
          ipod: !1,
          ipad: !1,
          edge: !1,
          ie: !1,
          firefox: !1,
          macos: !1,
          windows: !1,
          cordova: !(!d.cordova && !d.phonegap),
          phonegap: !(!d.cordova && !d.phonegap),
          electron: !1,
        },
        i = d.screen.width,
        s = d.screen.height,
        a = t.match(/(Android);?[\s\/]+([\d.]+)?/);
      let r = t.match(/(iPad).*OS\s([\d_]+)/);
      const o = t.match(/(iPod)(.*OS\s([\d_]+))?/),
        l = !r && t.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
        c = t.indexOf('MSIE ') >= 0 || t.indexOf('Trident/') >= 0,
        u = t.indexOf('Edge/') >= 0,
        p = t.indexOf('Gecko/') >= 0 && t.indexOf('Firefox/') >= 0,
        h = 'Win32' === e,
        f = t.toLowerCase().indexOf('electron') >= 0;
      let g = 'MacIntel' === e;
      return (
        !r &&
          g &&
          m.touch &&
          ((1024 === i && 1366 === s) ||
            (834 === i && 1194 === s) ||
            (834 === i && 1112 === s) ||
            (768 === i && 1024 === s)) &&
          ((r = t.match(/(Version)\/([\d.]+)/)), (g = !1)),
        (n.ie = c),
        (n.edge = u),
        (n.firefox = p),
        a &&
          !h &&
          ((n.os = 'android'),
          (n.osVersion = a[2]),
          (n.android = !0),
          (n.androidChrome = t.toLowerCase().indexOf('chrome') >= 0)),
        (r || l || o) && ((n.os = 'ios'), (n.ios = !0)),
        l && !o && ((n.osVersion = l[2].replace(/_/g, '.')), (n.iphone = !0)),
        r && ((n.osVersion = r[2].replace(/_/g, '.')), (n.ipad = !0)),
        o &&
          ((n.osVersion = o[3] ? o[3].replace(/_/g, '.') : null),
          (n.ipod = !0)),
        n.ios &&
          n.osVersion &&
          t.indexOf('Version/') >= 0 &&
          '10' === n.osVersion.split('.')[0] &&
          (n.osVersion = t.toLowerCase().split('version/')[1].split(' ')[0]),
        (n.webView =
          !(
            !(l || r || o) ||
            (!t.match(/.*AppleWebKit(?!.*Safari)/i) && !d.navigator.standalone)
          ) ||
          (d.matchMedia && d.matchMedia('(display-mode: standalone)').matches)),
        (n.webview = n.webView),
        (n.standalone = n.webView),
        (n.desktop = !(n.ios || n.android) || f),
        n.desktop &&
          ((n.electron = f),
          (n.macos = g),
          (n.windows = h),
          n.macos && (n.os = 'macos'),
          n.windows && (n.os = 'windows')),
        (n.pixelRatio = d.devicePixelRatio || 1),
        n
      );
    })();
    function S(e) {
      const t = this,
        n = t.touchEventsData,
        { params: i, touches: s } = t;
      if (t.animating && i.preventInteractionOnTransition) return;
      let a = e;
      a.originalEvent && (a = a.originalEvent);
      const r = u(a.target);
      if ('wrapper' === i.touchEventsTarget && !r.closest(t.wrapperEl).length)
        return;
      if (
        ((n.isTouchEvent = 'touchstart' === a.type),
        !n.isTouchEvent && 'which' in a && 3 === a.which)
      )
        return;
      if (!n.isTouchEvent && 'button' in a && a.button > 0) return;
      if (n.isTouched && n.isMoved) return;
      if (
        i.noSwiping &&
        r.closest(
          i.noSwipingSelector ? i.noSwipingSelector : '.' + i.noSwipingClass
        )[0]
      )
        return void (t.allowClick = !0);
      if (i.swipeHandler && !r.closest(i.swipeHandler)[0]) return;
      (s.currentX =
        'touchstart' === a.type ? a.targetTouches[0].pageX : a.pageX),
        (s.currentY =
          'touchstart' === a.type ? a.targetTouches[0].pageY : a.pageY);
      const l = s.currentX,
        c = s.currentY,
        p = i.edgeSwipeDetection || i.iOSEdgeSwipeDetection,
        h = i.edgeSwipeThreshold || i.iOSEdgeSwipeThreshold;
      if (!p || !(l <= h || l >= d.screen.width - h)) {
        if (
          (f.extend(n, {
            isTouched: !0,
            isMoved: !1,
            allowTouchCallbacks: !0,
            isScrolling: void 0,
            startMoving: void 0,
          }),
          (s.startX = l),
          (s.startY = c),
          (n.touchStartTime = f.now()),
          (t.allowClick = !0),
          t.updateSize(),
          (t.swipeDirection = void 0),
          i.threshold > 0 && (n.allowThresholdMove = !1),
          'touchstart' !== a.type)
        ) {
          let e = !0;
          r.is(n.formElements) && (e = !1),
            o.activeElement &&
              u(o.activeElement).is(n.formElements) &&
              o.activeElement !== r[0] &&
              o.activeElement.blur();
          const s = e && t.allowTouchMove && i.touchStartPreventDefault;
          (i.touchStartForcePreventDefault || s) && a.preventDefault();
        }
        t.emit('touchStart', a);
      }
    }
    function k(e) {
      const t = this,
        n = t.touchEventsData,
        { params: i, touches: s, rtlTranslate: a } = t;
      let r = e;
      if ((r.originalEvent && (r = r.originalEvent), !n.isTouched))
        return void (
          n.startMoving &&
          n.isScrolling &&
          t.emit('touchMoveOpposite', r)
        );
      if (n.isTouchEvent && 'touchmove' !== r.type) return;
      const l =
          'touchmove' === r.type &&
          r.targetTouches &&
          (r.targetTouches[0] || r.changedTouches[0]),
        d = 'touchmove' === r.type ? l.pageX : r.pageX,
        c = 'touchmove' === r.type ? l.pageY : r.pageY;
      if (r.preventedByNestedSwiper) return (s.startX = d), void (s.startY = c);
      if (!t.allowTouchMove)
        return (
          (t.allowClick = !1),
          void (
            n.isTouched &&
            (f.extend(s, { startX: d, startY: c, currentX: d, currentY: c }),
            (n.touchStartTime = f.now()))
          )
        );
      if (n.isTouchEvent && i.touchReleaseOnEdges && !i.loop)
        if (t.isVertical()) {
          if (
            (c < s.startY && t.translate <= t.maxTranslate()) ||
            (c > s.startY && t.translate >= t.minTranslate())
          )
            return (n.isTouched = !1), void (n.isMoved = !1);
        } else if (
          (d < s.startX && t.translate <= t.maxTranslate()) ||
          (d > s.startX && t.translate >= t.minTranslate())
        )
          return;
      if (
        n.isTouchEvent &&
        o.activeElement &&
        r.target === o.activeElement &&
        u(r.target).is(n.formElements)
      )
        return (n.isMoved = !0), void (t.allowClick = !1);
      if (
        (n.allowTouchCallbacks && t.emit('touchMove', r),
        r.targetTouches && r.targetTouches.length > 1)
      )
        return;
      (s.currentX = d), (s.currentY = c);
      const p = s.currentX - s.startX,
        h = s.currentY - s.startY;
      if (t.params.threshold && Math.sqrt(p ** 2 + h ** 2) < t.params.threshold)
        return;
      if (void 0 === n.isScrolling) {
        let e;
        (t.isHorizontal() && s.currentY === s.startY) ||
        (t.isVertical() && s.currentX === s.startX)
          ? (n.isScrolling = !1)
          : p * p + h * h >= 25 &&
            ((e = (180 * Math.atan2(Math.abs(h), Math.abs(p))) / Math.PI),
            (n.isScrolling = t.isHorizontal()
              ? e > i.touchAngle
              : 90 - e > i.touchAngle));
      }
      if (
        (n.isScrolling && t.emit('touchMoveOpposite', r),
        void 0 === n.startMoving &&
          ((s.currentX === s.startX && s.currentY === s.startY) ||
            (n.startMoving = !0)),
        n.isScrolling)
      )
        return void (n.isTouched = !1);
      if (!n.startMoving) return;
      (t.allowClick = !1),
        !i.cssMode && r.cancelable && r.preventDefault(),
        i.touchMoveStopPropagation && !i.nested && r.stopPropagation(),
        n.isMoved ||
          (i.loop && t.loopFix(),
          (n.startTranslate = t.getTranslate()),
          t.setTransition(0),
          t.animating &&
            t.$wrapperEl.trigger('webkitTransitionEnd transitionend'),
          (n.allowMomentumBounce = !1),
          !i.grabCursor ||
            (!0 !== t.allowSlideNext && !0 !== t.allowSlidePrev) ||
            t.setGrabCursor(!0),
          t.emit('sliderFirstMove', r)),
        t.emit('sliderMove', r),
        (n.isMoved = !0);
      let m = t.isHorizontal() ? p : h;
      (s.diff = m),
        (m *= i.touchRatio),
        a && (m = -m),
        (t.swipeDirection = m > 0 ? 'prev' : 'next'),
        (n.currentTranslate = m + n.startTranslate);
      let g = !0,
        v = i.resistanceRatio;
      if (
        (i.touchReleaseOnEdges && (v = 0),
        m > 0 && n.currentTranslate > t.minTranslate()
          ? ((g = !1),
            i.resistance &&
              (n.currentTranslate =
                t.minTranslate() -
                1 +
                (-t.minTranslate() + n.startTranslate + m) ** v))
          : m < 0 &&
            n.currentTranslate < t.maxTranslate() &&
            ((g = !1),
            i.resistance &&
              (n.currentTranslate =
                t.maxTranslate() +
                1 -
                (t.maxTranslate() - n.startTranslate - m) ** v)),
        g && (r.preventedByNestedSwiper = !0),
        !t.allowSlideNext &&
          'next' === t.swipeDirection &&
          n.currentTranslate < n.startTranslate &&
          (n.currentTranslate = n.startTranslate),
        !t.allowSlidePrev &&
          'prev' === t.swipeDirection &&
          n.currentTranslate > n.startTranslate &&
          (n.currentTranslate = n.startTranslate),
        i.threshold > 0)
      ) {
        if (!(Math.abs(m) > i.threshold || n.allowThresholdMove))
          return void (n.currentTranslate = n.startTranslate);
        if (!n.allowThresholdMove)
          return (
            (n.allowThresholdMove = !0),
            (s.startX = s.currentX),
            (s.startY = s.currentY),
            (n.currentTranslate = n.startTranslate),
            void (s.diff = t.isHorizontal()
              ? s.currentX - s.startX
              : s.currentY - s.startY)
          );
      }
      i.followFinger &&
        !i.cssMode &&
        ((i.freeMode || i.watchSlidesProgress || i.watchSlidesVisibility) &&
          (t.updateActiveIndex(), t.updateSlidesClasses()),
        i.freeMode &&
          (0 === n.velocities.length &&
            n.velocities.push({
              position: s[t.isHorizontal() ? 'startX' : 'startY'],
              time: n.touchStartTime,
            }),
          n.velocities.push({
            position: s[t.isHorizontal() ? 'currentX' : 'currentY'],
            time: f.now(),
          })),
        t.updateProgress(n.currentTranslate),
        t.setTranslate(n.currentTranslate));
    }
    function M(e) {
      const t = this,
        n = t.touchEventsData,
        {
          params: i,
          touches: s,
          rtlTranslate: a,
          $wrapperEl: r,
          slidesGrid: o,
          snapGrid: l,
        } = t;
      let d = e;
      if (
        (d.originalEvent && (d = d.originalEvent),
        n.allowTouchCallbacks && t.emit('touchEnd', d),
        (n.allowTouchCallbacks = !1),
        !n.isTouched)
      )
        return (
          n.isMoved && i.grabCursor && t.setGrabCursor(!1),
          (n.isMoved = !1),
          void (n.startMoving = !1)
        );
      i.grabCursor &&
        n.isMoved &&
        n.isTouched &&
        (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) &&
        t.setGrabCursor(!1);
      const c = f.now(),
        u = c - n.touchStartTime;
      if (
        (t.allowClick &&
          (t.updateClickedSlide(d),
          t.emit('tap click', d),
          u < 300 &&
            c - n.lastClickTime < 300 &&
            t.emit('doubleTap doubleClick', d)),
        (n.lastClickTime = f.now()),
        f.nextTick(() => {
          t.destroyed || (t.allowClick = !0);
        }),
        !n.isTouched ||
          !n.isMoved ||
          !t.swipeDirection ||
          0 === s.diff ||
          n.currentTranslate === n.startTranslate)
      )
        return (n.isTouched = !1), (n.isMoved = !1), void (n.startMoving = !1);
      let p;
      if (
        ((n.isTouched = !1),
        (n.isMoved = !1),
        (n.startMoving = !1),
        (p = i.followFinger
          ? a
            ? t.translate
            : -t.translate
          : -n.currentTranslate),
        i.cssMode)
      )
        return;
      if (i.freeMode) {
        if (p < -t.minTranslate()) return void t.slideTo(t.activeIndex);
        if (p > -t.maxTranslate())
          return void (t.slides.length < l.length
            ? t.slideTo(l.length - 1)
            : t.slideTo(t.slides.length - 1));
        if (i.freeModeMomentum) {
          if (n.velocities.length > 1) {
            const e = n.velocities.pop(),
              s = n.velocities.pop(),
              a = e.position - s.position,
              r = e.time - s.time;
            (t.velocity = a / r),
              (t.velocity /= 2),
              Math.abs(t.velocity) < i.freeModeMinimumVelocity &&
                (t.velocity = 0),
              (r > 150 || f.now() - e.time > 300) && (t.velocity = 0);
          } else t.velocity = 0;
          (t.velocity *= i.freeModeMomentumVelocityRatio),
            (n.velocities.length = 0);
          let e = 1e3 * i.freeModeMomentumRatio;
          const s = t.velocity * e;
          let o = t.translate + s;
          a && (o = -o);
          let d,
            c = !1;
          const u = 20 * Math.abs(t.velocity) * i.freeModeMomentumBounceRatio;
          let p;
          if (o < t.maxTranslate())
            i.freeModeMomentumBounce
              ? (o + t.maxTranslate() < -u && (o = t.maxTranslate() - u),
                (d = t.maxTranslate()),
                (c = !0),
                (n.allowMomentumBounce = !0))
              : (o = t.maxTranslate()),
              i.loop && i.centeredSlides && (p = !0);
          else if (o > t.minTranslate())
            i.freeModeMomentumBounce
              ? (o - t.minTranslate() > u && (o = t.minTranslate() + u),
                (d = t.minTranslate()),
                (c = !0),
                (n.allowMomentumBounce = !0))
              : (o = t.minTranslate()),
              i.loop && i.centeredSlides && (p = !0);
          else if (i.freeModeSticky) {
            let e;
            for (let t = 0; t < l.length; t += 1)
              if (l[t] > -o) {
                e = t;
                break;
              }
            (o =
              Math.abs(l[e] - o) < Math.abs(l[e - 1] - o) ||
              'next' === t.swipeDirection
                ? l[e]
                : l[e - 1]),
              (o = -o);
          }
          if (
            (p &&
              t.once('transitionEnd', () => {
                t.loopFix();
              }),
            0 !== t.velocity)
          ) {
            if (
              ((e = a
                ? Math.abs((-o - t.translate) / t.velocity)
                : Math.abs((o - t.translate) / t.velocity)),
              i.freeModeSticky)
            ) {
              const n = Math.abs((a ? -o : o) - t.translate),
                s = t.slidesSizesGrid[t.activeIndex];
              e = n < s ? i.speed : n < 2 * s ? 1.5 * i.speed : 2.5 * i.speed;
            }
          } else if (i.freeModeSticky) return void t.slideToClosest();
          i.freeModeMomentumBounce && c
            ? (t.updateProgress(d),
              t.setTransition(e),
              t.setTranslate(o),
              t.transitionStart(!0, t.swipeDirection),
              (t.animating = !0),
              r.transitionEnd(() => {
                t &&
                  !t.destroyed &&
                  n.allowMomentumBounce &&
                  (t.emit('momentumBounce'),
                  t.setTransition(i.speed),
                  setTimeout(() => {
                    t.setTranslate(d),
                      r.transitionEnd(() => {
                        t && !t.destroyed && t.transitionEnd();
                      });
                  }, 0));
              }))
            : t.velocity
            ? (t.updateProgress(o),
              t.setTransition(e),
              t.setTranslate(o),
              t.transitionStart(!0, t.swipeDirection),
              t.animating ||
                ((t.animating = !0),
                r.transitionEnd(() => {
                  t && !t.destroyed && t.transitionEnd();
                })))
            : t.updateProgress(o),
            t.updateActiveIndex(),
            t.updateSlidesClasses();
        } else if (i.freeModeSticky) return void t.slideToClosest();
        return void (
          (!i.freeModeMomentum || u >= i.longSwipesMs) &&
          (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses())
        );
      }
      let h = 0,
        m = t.slidesSizesGrid[0];
      for (
        let e = 0;
        e < o.length;
        e += e < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup
      ) {
        const t = e < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
        void 0 !== o[e + t]
          ? p >= o[e] && p < o[e + t] && ((h = e), (m = o[e + t] - o[e]))
          : p >= o[e] && ((h = e), (m = o[o.length - 1] - o[o.length - 2]));
      }
      const g = (p - o[h]) / m,
        v = h < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
      if (u > i.longSwipesMs) {
        if (!i.longSwipes) return void t.slideTo(t.activeIndex);
        'next' === t.swipeDirection &&
          (g >= i.longSwipesRatio ? t.slideTo(h + v) : t.slideTo(h)),
          'prev' === t.swipeDirection &&
            (g > 1 - i.longSwipesRatio ? t.slideTo(h + v) : t.slideTo(h));
      } else {
        if (!i.shortSwipes) return void t.slideTo(t.activeIndex);
        t.navigation &&
        (d.target === t.navigation.nextEl || d.target === t.navigation.prevEl)
          ? d.target === t.navigation.nextEl
            ? t.slideTo(h + v)
            : t.slideTo(h)
          : ('next' === t.swipeDirection && t.slideTo(h + v),
            'prev' === t.swipeDirection && t.slideTo(h));
      }
    }
    function $() {
      const e = this,
        { params: t, el: n } = e;
      if (n && 0 === n.offsetWidth) return;
      t.breakpoints && e.setBreakpoint();
      const { allowSlideNext: i, allowSlidePrev: s, snapGrid: a } = e;
      (e.allowSlideNext = !0),
        (e.allowSlidePrev = !0),
        e.updateSize(),
        e.updateSlides(),
        e.updateSlidesClasses(),
        ('auto' === t.slidesPerView || t.slidesPerView > 1) &&
        e.isEnd &&
        !e.params.centeredSlides
          ? e.slideTo(e.slides.length - 1, 0, !1, !0)
          : e.slideTo(e.activeIndex, 0, !1, !0),
        e.autoplay &&
          e.autoplay.running &&
          e.autoplay.paused &&
          e.autoplay.run(),
        (e.allowSlidePrev = s),
        (e.allowSlideNext = i),
        e.params.watchOverflow && a !== e.snapGrid && e.checkOverflow();
    }
    function P(e) {
      const t = this;
      t.allowClick ||
        (t.params.preventClicks && e.preventDefault(),
        t.params.preventClicksPropagation &&
          t.animating &&
          (e.stopPropagation(), e.stopImmediatePropagation()));
    }
    function L() {
      const e = this,
        { wrapperEl: t, rtlTranslate: n } = e;
      let i;
      (e.previousTranslate = e.translate),
        e.isHorizontal()
          ? (e.translate = n
              ? t.scrollWidth - t.offsetWidth - t.scrollLeft
              : -t.scrollLeft)
          : (e.translate = -t.scrollTop),
        -0 === e.translate && (e.translate = 0),
        e.updateActiveIndex(),
        e.updateSlidesClasses();
      const s = e.maxTranslate() - e.minTranslate();
      (i = 0 === s ? 0 : (e.translate - e.minTranslate()) / s),
        i !== e.progress && e.updateProgress(n ? -e.translate : e.translate),
        e.emit('setTranslate', e.translate, !1);
    }
    let z = !1;
    function A() {}
    var D = {
      init: !0,
      direction: 'horizontal',
      touchEventsTarget: 'container',
      initialSlide: 0,
      speed: 300,
      cssMode: !1,
      updateOnWindowResize: !0,
      preventInteractionOnTransition: !1,
      edgeSwipeDetection: !1,
      edgeSwipeThreshold: 20,
      freeMode: !1,
      freeModeMomentum: !0,
      freeModeMomentumRatio: 1,
      freeModeMomentumBounce: !0,
      freeModeMomentumBounceRatio: 1,
      freeModeMomentumVelocityRatio: 1,
      freeModeSticky: !1,
      freeModeMinimumVelocity: 0.02,
      autoHeight: !1,
      setWrapperSize: !1,
      virtualTranslate: !1,
      effect: 'slide',
      breakpoints: void 0,
      spaceBetween: 0,
      slidesPerView: 1,
      slidesPerColumn: 1,
      slidesPerColumnFill: 'column',
      slidesPerGroup: 1,
      slidesPerGroupSkip: 0,
      centeredSlides: !1,
      centeredSlidesBounds: !1,
      slidesOffsetBefore: 0,
      slidesOffsetAfter: 0,
      normalizeSlideIndex: !0,
      centerInsufficientSlides: !1,
      watchOverflow: !1,
      roundLengths: !1,
      touchRatio: 1,
      touchAngle: 45,
      simulateTouch: !0,
      shortSwipes: !0,
      longSwipes: !0,
      longSwipesRatio: 0.5,
      longSwipesMs: 300,
      followFinger: !0,
      allowTouchMove: !0,
      threshold: 0,
      touchMoveStopPropagation: !1,
      touchStartPreventDefault: !0,
      touchStartForcePreventDefault: !1,
      touchReleaseOnEdges: !1,
      uniqueNavElements: !0,
      resistance: !0,
      resistanceRatio: 0.85,
      watchSlidesProgress: !1,
      watchSlidesVisibility: !1,
      grabCursor: !1,
      preventClicks: !0,
      preventClicksPropagation: !0,
      slideToClickedSlide: !1,
      preloadImages: !0,
      updateOnImagesReady: !0,
      loop: !1,
      loopAdditionalSlides: 0,
      loopedSlides: null,
      loopFillGroupWithBlank: !1,
      allowSlidePrev: !0,
      allowSlideNext: !0,
      swipeHandler: null,
      noSwiping: !0,
      noSwipingClass: 'swiper-no-swiping',
      noSwipingSelector: null,
      passiveListeners: !0,
      containerModifierClass: 'swiper-container-',
      slideClass: 'swiper-slide',
      slideBlankClass: 'swiper-slide-invisible-blank',
      slideActiveClass: 'swiper-slide-active',
      slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
      slideVisibleClass: 'swiper-slide-visible',
      slideDuplicateClass: 'swiper-slide-duplicate',
      slideNextClass: 'swiper-slide-next',
      slideDuplicateNextClass: 'swiper-slide-duplicate-next',
      slidePrevClass: 'swiper-slide-prev',
      slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
      wrapperClass: 'swiper-wrapper',
      runCallbacksOnInit: !0,
    };
    const N = {
        update: v,
        translate: y,
        transition: b,
        slide: w,
        loop: x,
        grabCursor: T,
        manipulation: C,
        events: {
          attachEvents: function () {
            const e = this,
              { params: t, touchEvents: n, el: i, wrapperEl: s } = e;
            (e.onTouchStart = S.bind(e)),
              (e.onTouchMove = k.bind(e)),
              (e.onTouchEnd = M.bind(e)),
              t.cssMode && (e.onScroll = L.bind(e)),
              (e.onClick = P.bind(e));
            const a = !!t.nested;
            if (!m.touch && m.pointerEvents)
              i.addEventListener(n.start, e.onTouchStart, !1),
                o.addEventListener(n.move, e.onTouchMove, a),
                o.addEventListener(n.end, e.onTouchEnd, !1);
            else {
              if (m.touch) {
                const s = !(
                  'touchstart' !== n.start ||
                  !m.passiveListener ||
                  !t.passiveListeners
                ) && { passive: !0, capture: !1 };
                i.addEventListener(n.start, e.onTouchStart, s),
                  i.addEventListener(
                    n.move,
                    e.onTouchMove,
                    m.passiveListener ? { passive: !1, capture: a } : a
                  ),
                  i.addEventListener(n.end, e.onTouchEnd, s),
                  n.cancel && i.addEventListener(n.cancel, e.onTouchEnd, s),
                  z || (o.addEventListener('touchstart', A), (z = !0));
              }
              ((t.simulateTouch && !E.ios && !E.android) ||
                (t.simulateTouch && !m.touch && E.ios)) &&
                (i.addEventListener('mousedown', e.onTouchStart, !1),
                o.addEventListener('mousemove', e.onTouchMove, a),
                o.addEventListener('mouseup', e.onTouchEnd, !1));
            }
            (t.preventClicks || t.preventClicksPropagation) &&
              i.addEventListener('click', e.onClick, !0),
              t.cssMode && s.addEventListener('scroll', e.onScroll),
              t.updateOnWindowResize
                ? e.on(
                    E.ios || E.android
                      ? 'resize orientationchange observerUpdate'
                      : 'resize observerUpdate',
                    $,
                    !0
                  )
                : e.on('observerUpdate', $, !0);
          },
          detachEvents: function () {
            const e = this,
              { params: t, touchEvents: n, el: i, wrapperEl: s } = e,
              a = !!t.nested;
            if (!m.touch && m.pointerEvents)
              i.removeEventListener(n.start, e.onTouchStart, !1),
                o.removeEventListener(n.move, e.onTouchMove, a),
                o.removeEventListener(n.end, e.onTouchEnd, !1);
            else {
              if (m.touch) {
                const s = !(
                  'onTouchStart' !== n.start ||
                  !m.passiveListener ||
                  !t.passiveListeners
                ) && { passive: !0, capture: !1 };
                i.removeEventListener(n.start, e.onTouchStart, s),
                  i.removeEventListener(n.move, e.onTouchMove, a),
                  i.removeEventListener(n.end, e.onTouchEnd, s),
                  n.cancel && i.removeEventListener(n.cancel, e.onTouchEnd, s);
              }
              ((t.simulateTouch && !E.ios && !E.android) ||
                (t.simulateTouch && !m.touch && E.ios)) &&
                (i.removeEventListener('mousedown', e.onTouchStart, !1),
                o.removeEventListener('mousemove', e.onTouchMove, a),
                o.removeEventListener('mouseup', e.onTouchEnd, !1));
            }
            (t.preventClicks || t.preventClicksPropagation) &&
              i.removeEventListener('click', e.onClick, !0),
              t.cssMode && s.removeEventListener('scroll', e.onScroll),
              e.off(
                E.ios || E.android
                  ? 'resize orientationchange observerUpdate'
                  : 'resize observerUpdate',
                $
              );
          },
        },
        breakpoints: {
          setBreakpoint: function () {
            const e = this,
              {
                activeIndex: t,
                initialized: n,
                loopedSlides: i = 0,
                params: s,
                $el: a,
              } = e,
              r = s.breakpoints;
            if (!r || (r && 0 === Object.keys(r).length)) return;
            const o = e.getBreakpoint(r);
            if (o && e.currentBreakpoint !== o) {
              const l = o in r ? r[o] : void 0;
              l &&
                [
                  'slidesPerView',
                  'spaceBetween',
                  'slidesPerGroup',
                  'slidesPerGroupSkip',
                  'slidesPerColumn',
                ].forEach((e) => {
                  const t = l[e];
                  void 0 !== t &&
                    (l[e] =
                      'slidesPerView' !== e || ('AUTO' !== t && 'auto' !== t)
                        ? 'slidesPerView' === e
                          ? parseFloat(t)
                          : parseInt(t, 10)
                        : 'auto');
                });
              const d = l || e.originalParams,
                c = s.slidesPerColumn > 1,
                u = d.slidesPerColumn > 1;
              c && !u
                ? a.removeClass(
                    `${s.containerModifierClass}multirow ${s.containerModifierClass}multirow-column`
                  )
                : !c &&
                  u &&
                  (a.addClass(s.containerModifierClass + 'multirow'),
                  'column' === d.slidesPerColumnFill &&
                    a.addClass(s.containerModifierClass + 'multirow-column'));
              const p = d.direction && d.direction !== s.direction,
                h = s.loop && (d.slidesPerView !== s.slidesPerView || p);
              p && n && e.changeDirection(),
                f.extend(e.params, d),
                f.extend(e, {
                  allowTouchMove: e.params.allowTouchMove,
                  allowSlideNext: e.params.allowSlideNext,
                  allowSlidePrev: e.params.allowSlidePrev,
                }),
                (e.currentBreakpoint = o),
                h &&
                  n &&
                  (e.loopDestroy(),
                  e.loopCreate(),
                  e.updateSlides(),
                  e.slideTo(t - i + e.loopedSlides, 0, !1)),
                e.emit('breakpoint', d);
            }
          },
          getBreakpoint: function (e) {
            if (!e) return;
            let t = !1;
            const n = Object.keys(e).map((e) => {
              if ('string' == typeof e && 0 === e.indexOf('@')) {
                const t = parseFloat(e.substr(1));
                return { value: d.innerHeight * t, point: e };
              }
              return { value: e, point: e };
            });
            n.sort((e, t) => parseInt(e.value, 10) - parseInt(t.value, 10));
            for (let e = 0; e < n.length; e += 1) {
              const { point: i, value: s } = n[e];
              s <= d.innerWidth && (t = i);
            }
            return t || 'max';
          },
        },
        checkOverflow: {
          checkOverflow: function () {
            const e = this,
              t = e.params,
              n = e.isLocked,
              i =
                e.slides.length > 0 &&
                t.slidesOffsetBefore +
                  t.spaceBetween * (e.slides.length - 1) +
                  e.slides[0].offsetWidth * e.slides.length;
            t.slidesOffsetBefore && t.slidesOffsetAfter && i
              ? (e.isLocked = i <= e.size)
              : (e.isLocked = 1 === e.snapGrid.length),
              (e.allowSlideNext = !e.isLocked),
              (e.allowSlidePrev = !e.isLocked),
              n !== e.isLocked && e.emit(e.isLocked ? 'lock' : 'unlock'),
              n && n !== e.isLocked && ((e.isEnd = !1), e.navigation.update());
          },
        },
        classes: {
          addClasses: function () {
            const { classNames: e, params: t, rtl: n, $el: i } = this,
              s = [];
            s.push('initialized'),
              s.push(t.direction),
              t.freeMode && s.push('free-mode'),
              t.autoHeight && s.push('autoheight'),
              n && s.push('rtl'),
              t.slidesPerColumn > 1 &&
                (s.push('multirow'),
                'column' === t.slidesPerColumnFill &&
                  s.push('multirow-column')),
              E.android && s.push('android'),
              E.ios && s.push('ios'),
              t.cssMode && s.push('css-mode'),
              s.forEach((n) => {
                e.push(t.containerModifierClass + n);
              }),
              i.addClass(e.join(' '));
          },
          removeClasses: function () {
            const { $el: e, classNames: t } = this;
            e.removeClass(t.join(' '));
          },
        },
        images: {
          loadImage: function (e, t, n, i, s, a) {
            let r;
            function o() {
              a && a();
            }
            u(e).parent('picture')[0] || (e.complete && s)
              ? o()
              : t
              ? ((r = new d.Image()),
                (r.onload = o),
                (r.onerror = o),
                i && (r.sizes = i),
                n && (r.srcset = n),
                t && (r.src = t))
              : o();
          },
          preloadImages: function () {
            const e = this;
            function t() {
              null != e &&
                e &&
                !e.destroyed &&
                (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1),
                e.imagesLoaded === e.imagesToLoad.length &&
                  (e.params.updateOnImagesReady && e.update(),
                  e.emit('imagesReady')));
            }
            e.imagesToLoad = e.$el.find('img');
            for (let n = 0; n < e.imagesToLoad.length; n += 1) {
              const i = e.imagesToLoad[n];
              e.loadImage(
                i,
                i.currentSrc || i.getAttribute('src'),
                i.srcset || i.getAttribute('srcset'),
                i.sizes || i.getAttribute('sizes'),
                !0,
                t
              );
            }
          },
        },
      },
      I = {};
    class O extends g {
      constructor(...e) {
        let t, n;
        1 === e.length && e[0].constructor && e[0].constructor === Object
          ? (n = e[0])
          : ([t, n] = e),
          n || (n = {}),
          (n = f.extend({}, n)),
          t && !n.el && (n.el = t),
          super(n),
          Object.keys(N).forEach((e) => {
            Object.keys(N[e]).forEach((t) => {
              O.prototype[t] || (O.prototype[t] = N[e][t]);
            });
          });
        const i = this;
        void 0 === i.modules && (i.modules = {}),
          Object.keys(i.modules).forEach((e) => {
            const t = i.modules[e];
            if (t.params) {
              const e = Object.keys(t.params)[0],
                i = t.params[e];
              if ('object' != typeof i || null === i) return;
              if (!(e in n) || !('enabled' in i)) return;
              !0 === n[e] && (n[e] = { enabled: !0 }),
                'object' != typeof n[e] ||
                  'enabled' in n[e] ||
                  (n[e].enabled = !0),
                n[e] || (n[e] = { enabled: !1 });
            }
          });
        const s = f.extend({}, D);
        i.useModulesParams(s),
          (i.params = f.extend({}, s, I, n)),
          (i.originalParams = f.extend({}, i.params)),
          (i.passedParams = f.extend({}, n)),
          (i.$ = u);
        const a = u(i.params.el);
        if (((t = a[0]), !t)) return;
        if (a.length > 1) {
          const e = [];
          return (
            a.each((t, i) => {
              const s = f.extend({}, n, { el: i });
              e.push(new O(s));
            }),
            e
          );
        }
        let r;
        return (
          (t.swiper = i),
          a.data('swiper', i),
          t && t.shadowRoot && t.shadowRoot.querySelector
            ? ((r = u(t.shadowRoot.querySelector('.' + i.params.wrapperClass))),
              (r.children = (e) => a.children(e)))
            : (r = a.children('.' + i.params.wrapperClass)),
          f.extend(i, {
            $el: a,
            el: t,
            $wrapperEl: r,
            wrapperEl: r[0],
            classNames: [],
            slides: u(),
            slidesGrid: [],
            snapGrid: [],
            slidesSizesGrid: [],
            isHorizontal: () => 'horizontal' === i.params.direction,
            isVertical: () => 'vertical' === i.params.direction,
            rtl: 'rtl' === t.dir.toLowerCase() || 'rtl' === a.css('direction'),
            rtlTranslate:
              'horizontal' === i.params.direction &&
              ('rtl' === t.dir.toLowerCase() || 'rtl' === a.css('direction')),
            wrongRTL: '-webkit-box' === r.css('display'),
            activeIndex: 0,
            realIndex: 0,
            isBeginning: !0,
            isEnd: !1,
            translate: 0,
            previousTranslate: 0,
            progress: 0,
            velocity: 0,
            animating: !1,
            allowSlideNext: i.params.allowSlideNext,
            allowSlidePrev: i.params.allowSlidePrev,
            touchEvents: (function () {
              const e = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];
              let t = ['mousedown', 'mousemove', 'mouseup'];
              return (
                m.pointerEvents &&
                  (t = ['pointerdown', 'pointermove', 'pointerup']),
                (i.touchEventsTouch = {
                  start: e[0],
                  move: e[1],
                  end: e[2],
                  cancel: e[3],
                }),
                (i.touchEventsDesktop = { start: t[0], move: t[1], end: t[2] }),
                m.touch || !i.params.simulateTouch
                  ? i.touchEventsTouch
                  : i.touchEventsDesktop
              );
            })(),
            touchEventsData: {
              isTouched: void 0,
              isMoved: void 0,
              allowTouchCallbacks: void 0,
              touchStartTime: void 0,
              isScrolling: void 0,
              currentTranslate: void 0,
              startTranslate: void 0,
              allowThresholdMove: void 0,
              formElements:
                'input, select, option, textarea, button, video, label',
              lastClickTime: f.now(),
              clickTimeout: void 0,
              velocities: [],
              allowMomentumBounce: void 0,
              isTouchEvent: void 0,
              startMoving: void 0,
            },
            allowClick: !0,
            allowTouchMove: i.params.allowTouchMove,
            touches: {
              startX: 0,
              startY: 0,
              currentX: 0,
              currentY: 0,
              diff: 0,
            },
            imagesToLoad: [],
            imagesLoaded: 0,
          }),
          i.useModules(),
          i.params.init && i.init(),
          i
        );
      }
      slidesPerViewDynamic() {
        const {
          params: e,
          slides: t,
          slidesGrid: n,
          size: i,
          activeIndex: s,
        } = this;
        let a = 1;
        if (e.centeredSlides) {
          let e,
            n = t[s].swiperSlideSize;
          for (let r = s + 1; r < t.length; r += 1)
            t[r] &&
              !e &&
              ((n += t[r].swiperSlideSize), (a += 1), n > i && (e = !0));
          for (let r = s - 1; r >= 0; r -= 1)
            t[r] &&
              !e &&
              ((n += t[r].swiperSlideSize), (a += 1), n > i && (e = !0));
        } else
          for (let e = s + 1; e < t.length; e += 1) n[e] - n[s] < i && (a += 1);
        return a;
      }
      update() {
        const e = this;
        if (!e || e.destroyed) return;
        const { snapGrid: t, params: n } = e;
        function i() {
          const t = e.rtlTranslate ? -1 * e.translate : e.translate,
            n = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
          e.setTranslate(n), e.updateActiveIndex(), e.updateSlidesClasses();
        }
        let s;
        n.breakpoints && e.setBreakpoint(),
          e.updateSize(),
          e.updateSlides(),
          e.updateProgress(),
          e.updateSlidesClasses(),
          e.params.freeMode
            ? (i(), e.params.autoHeight && e.updateAutoHeight())
            : ((s =
                ('auto' === e.params.slidesPerView ||
                  e.params.slidesPerView > 1) &&
                e.isEnd &&
                !e.params.centeredSlides
                  ? e.slideTo(e.slides.length - 1, 0, !1, !0)
                  : e.slideTo(e.activeIndex, 0, !1, !0)),
              s || i()),
          n.watchOverflow && t !== e.snapGrid && e.checkOverflow(),
          e.emit('update');
      }
      changeDirection(e, t = !0) {
        const n = this,
          i = n.params.direction;
        return (
          e || (e = 'horizontal' === i ? 'vertical' : 'horizontal'),
          e === i ||
            ('horizontal' !== e && 'vertical' !== e) ||
            (n.$el
              .removeClass(`${n.params.containerModifierClass}${i}`)
              .addClass(`${n.params.containerModifierClass}${e}`),
            (n.params.direction = e),
            n.slides.each((t, n) => {
              'vertical' === e ? (n.style.width = '') : (n.style.height = '');
            }),
            n.emit('changeDirection'),
            t && n.update()),
          n
        );
      }
      init() {
        const e = this;
        e.initialized ||
          (e.emit('beforeInit'),
          e.params.breakpoints && e.setBreakpoint(),
          e.addClasses(),
          e.params.loop && e.loopCreate(),
          e.updateSize(),
          e.updateSlides(),
          e.params.watchOverflow && e.checkOverflow(),
          e.params.grabCursor && e.setGrabCursor(),
          e.params.preloadImages && e.preloadImages(),
          e.params.loop
            ? e.slideTo(
                e.params.initialSlide + e.loopedSlides,
                0,
                e.params.runCallbacksOnInit
              )
            : e.slideTo(e.params.initialSlide, 0, e.params.runCallbacksOnInit),
          e.attachEvents(),
          (e.initialized = !0),
          e.emit('init'));
      }
      destroy(e = !0, t = !0) {
        const n = this,
          { params: i, $el: s, $wrapperEl: a, slides: r } = n;
        return (
          void 0 === n.params ||
            n.destroyed ||
            (n.emit('beforeDestroy'),
            (n.initialized = !1),
            n.detachEvents(),
            i.loop && n.loopDestroy(),
            t &&
              (n.removeClasses(),
              s.removeAttr('style'),
              a.removeAttr('style'),
              r &&
                r.length &&
                r
                  .removeClass(
                    [
                      i.slideVisibleClass,
                      i.slideActiveClass,
                      i.slideNextClass,
                      i.slidePrevClass,
                    ].join(' ')
                  )
                  .removeAttr('style')
                  .removeAttr('data-swiper-slide-index')),
            n.emit('destroy'),
            Object.keys(n.eventsListeners).forEach((e) => {
              n.off(e);
            }),
            !1 !== e &&
              ((n.$el[0].swiper = null),
              n.$el.data('swiper', null),
              f.deleteProps(n)),
            (n.destroyed = !0)),
          null
        );
      }
      static extendDefaults(e) {
        f.extend(I, e);
      }
      static get extendedDefaults() {
        return I;
      }
      static get defaults() {
        return D;
      }
      static get Class() {
        return g;
      }
      static get $() {
        return u;
      }
    }
    var H = { name: 'device', proto: { device: E }, static: { device: E } },
      j = { name: 'support', proto: { support: m }, static: { support: m } };
    const q = {
      isEdge: !!d.navigator.userAgent.match(/Edge/g),
      isSafari: (function () {
        const e = d.navigator.userAgent.toLowerCase();
        return (
          e.indexOf('safari') >= 0 &&
          e.indexOf('chrome') < 0 &&
          e.indexOf('android') < 0
        );
      })(),
      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
        d.navigator.userAgent
      ),
    };
    var B = { name: 'browser', proto: { browser: q }, static: { browser: q } },
      R = {
        name: 'resize',
        create() {
          const e = this;
          f.extend(e, {
            resize: {
              resizeHandler() {
                e &&
                  !e.destroyed &&
                  e.initialized &&
                  (e.emit('beforeResize'), e.emit('resize'));
              },
              orientationChangeHandler() {
                e &&
                  !e.destroyed &&
                  e.initialized &&
                  e.emit('orientationchange');
              },
            },
          });
        },
        on: {
          init() {
            d.addEventListener('resize', this.resize.resizeHandler),
              d.addEventListener(
                'orientationchange',
                this.resize.orientationChangeHandler
              );
          },
          destroy() {
            d.removeEventListener('resize', this.resize.resizeHandler),
              d.removeEventListener(
                'orientationchange',
                this.resize.orientationChangeHandler
              );
          },
        },
      };
    const F = {
      func: d.MutationObserver || d.WebkitMutationObserver,
      attach(e, t = {}) {
        const n = this,
          i = new (0, F.func)((e) => {
            if (1 === e.length) return void n.emit('observerUpdate', e[0]);
            const t = function () {
              n.emit('observerUpdate', e[0]);
            };
            d.requestAnimationFrame
              ? d.requestAnimationFrame(t)
              : d.setTimeout(t, 0);
          });
        i.observe(e, {
          attributes: void 0 === t.attributes || t.attributes,
          childList: void 0 === t.childList || t.childList,
          characterData: void 0 === t.characterData || t.characterData,
        }),
          n.observer.observers.push(i);
      },
      init() {
        const e = this;
        if (m.observer && e.params.observer) {
          if (e.params.observeParents) {
            const t = e.$el.parents();
            for (let n = 0; n < t.length; n += 1) e.observer.attach(t[n]);
          }
          e.observer.attach(e.$el[0], {
            childList: e.params.observeSlideChildren,
          }),
            e.observer.attach(e.$wrapperEl[0], { attributes: !1 });
        }
      },
      destroy() {
        this.observer.observers.forEach((e) => {
          e.disconnect();
        }),
          (this.observer.observers = []);
      },
    };
    var G = {
      name: 'observer',
      params: { observer: !1, observeParents: !1, observeSlideChildren: !1 },
      create() {
        f.extend(this, {
          observer: {
            init: F.init.bind(this),
            attach: F.attach.bind(this),
            destroy: F.destroy.bind(this),
            observers: [],
          },
        });
      },
      on: {
        init() {
          this.observer.init();
        },
        destroy() {
          this.observer.destroy();
        },
      },
    };
    const W = {
      update(e) {
        const t = this,
          { slidesPerView: n, slidesPerGroup: i, centeredSlides: s } = t.params,
          { addSlidesBefore: a, addSlidesAfter: r } = t.params.virtual,
          {
            from: o,
            to: l,
            slides: d,
            slidesGrid: c,
            renderSlide: u,
            offset: p,
          } = t.virtual;
        t.updateActiveIndex();
        const h = t.activeIndex || 0;
        let m, g, v;
        (m = t.rtlTranslate ? 'right' : t.isHorizontal() ? 'left' : 'top'),
          s
            ? ((g = Math.floor(n / 2) + i + a), (v = Math.floor(n / 2) + i + r))
            : ((g = n + (i - 1) + a), (v = i + r));
        const y = Math.max((h || 0) - v, 0),
          b = Math.min((h || 0) + g, d.length - 1),
          w = (t.slidesGrid[y] || 0) - (t.slidesGrid[0] || 0);
        function x() {
          t.updateSlides(),
            t.updateProgress(),
            t.updateSlidesClasses(),
            t.lazy && t.params.lazy.enabled && t.lazy.load();
        }
        if (
          (f.extend(t.virtual, {
            from: y,
            to: b,
            offset: w,
            slidesGrid: t.slidesGrid,
          }),
          o === y && l === b && !e)
        )
          return (
            t.slidesGrid !== c && w !== p && t.slides.css(m, w + 'px'),
            void t.updateProgress()
          );
        if (t.params.virtual.renderExternal)
          return (
            t.params.virtual.renderExternal.call(t, {
              offset: w,
              from: y,
              to: b,
              slides: (function () {
                const e = [];
                for (let t = y; t <= b; t += 1) e.push(d[t]);
                return e;
              })(),
            }),
            void x()
          );
        const T = [],
          C = [];
        if (e) t.$wrapperEl.find('.' + t.params.slideClass).remove();
        else
          for (let e = o; e <= l; e += 1)
            (e < y || e > b) &&
              t.$wrapperEl
                .find(`.${t.params.slideClass}[data-swiper-slide-index="${e}"]`)
                .remove();
        for (let t = 0; t < d.length; t += 1)
          t >= y &&
            t <= b &&
            (void 0 === l || e
              ? C.push(t)
              : (t > l && C.push(t), t < o && T.push(t)));
        C.forEach((e) => {
          t.$wrapperEl.append(u(d[e], e));
        }),
          T.sort((e, t) => t - e).forEach((e) => {
            t.$wrapperEl.prepend(u(d[e], e));
          }),
          t.$wrapperEl.children('.swiper-slide').css(m, w + 'px'),
          x();
      },
      renderSlide(e, t) {
        const n = this,
          i = n.params.virtual;
        if (i.cache && n.virtual.cache[t]) return n.virtual.cache[t];
        const s = i.renderSlide
          ? u(i.renderSlide.call(n, e, t))
          : u(
              `<div class="${n.params.slideClass}" data-swiper-slide-index="${t}">${e}</div>`
            );
        return (
          s.attr('data-swiper-slide-index') ||
            s.attr('data-swiper-slide-index', t),
          i.cache && (n.virtual.cache[t] = s),
          s
        );
      },
      appendSlide(e) {
        const t = this;
        if ('object' == typeof e && 'length' in e)
          for (let n = 0; n < e.length; n += 1)
            e[n] && t.virtual.slides.push(e[n]);
        else t.virtual.slides.push(e);
        t.virtual.update(!0);
      },
      prependSlide(e) {
        const t = this,
          n = t.activeIndex;
        let i = n + 1,
          s = 1;
        if (Array.isArray(e)) {
          for (let n = 0; n < e.length; n += 1)
            e[n] && t.virtual.slides.unshift(e[n]);
          (i = n + e.length), (s = e.length);
        } else t.virtual.slides.unshift(e);
        if (t.params.virtual.cache) {
          const e = t.virtual.cache,
            n = {};
          Object.keys(e).forEach((t) => {
            const i = e[t],
              a = i.attr('data-swiper-slide-index');
            a && i.attr('data-swiper-slide-index', parseInt(a, 10) + 1),
              (n[parseInt(t, 10) + s] = i);
          }),
            (t.virtual.cache = n);
        }
        t.virtual.update(!0), t.slideTo(i, 0);
      },
      removeSlide(e) {
        const t = this;
        if (null == e) return;
        let n = t.activeIndex;
        if (Array.isArray(e))
          for (let i = e.length - 1; i >= 0; i -= 1)
            t.virtual.slides.splice(e[i], 1),
              t.params.virtual.cache && delete t.virtual.cache[e[i]],
              e[i] < n && (n -= 1),
              (n = Math.max(n, 0));
        else
          t.virtual.slides.splice(e, 1),
            t.params.virtual.cache && delete t.virtual.cache[e],
            e < n && (n -= 1),
            (n = Math.max(n, 0));
        t.virtual.update(!0), t.slideTo(n, 0);
      },
      removeAllSlides() {
        const e = this;
        (e.virtual.slides = []),
          e.params.virtual.cache && (e.virtual.cache = {}),
          e.virtual.update(!0),
          e.slideTo(0, 0);
      },
    };
    var V = {
      name: 'virtual',
      params: {
        virtual: {
          enabled: !1,
          slides: [],
          cache: !0,
          renderSlide: null,
          renderExternal: null,
          addSlidesBefore: 0,
          addSlidesAfter: 0,
        },
      },
      create() {
        f.extend(this, {
          virtual: {
            update: W.update.bind(this),
            appendSlide: W.appendSlide.bind(this),
            prependSlide: W.prependSlide.bind(this),
            removeSlide: W.removeSlide.bind(this),
            removeAllSlides: W.removeAllSlides.bind(this),
            renderSlide: W.renderSlide.bind(this),
            slides: this.params.virtual.slides,
            cache: {},
          },
        });
      },
      on: {
        beforeInit() {
          const e = this;
          if (!e.params.virtual.enabled) return;
          e.classNames.push(e.params.containerModifierClass + 'virtual');
          const t = { watchSlidesProgress: !0 };
          f.extend(e.params, t),
            f.extend(e.originalParams, t),
            e.params.initialSlide || e.virtual.update();
        },
        setTranslate() {
          this.params.virtual.enabled && this.virtual.update();
        },
      },
    };
    const X = {
      handle(e) {
        const t = this,
          { rtlTranslate: n } = t;
        let i = e;
        i.originalEvent && (i = i.originalEvent);
        const s = i.keyCode || i.charCode;
        if (
          !t.allowSlideNext &&
          ((t.isHorizontal() && 39 === s) ||
            (t.isVertical() && 40 === s) ||
            34 === s)
        )
          return !1;
        if (
          !t.allowSlidePrev &&
          ((t.isHorizontal() && 37 === s) ||
            (t.isVertical() && 38 === s) ||
            33 === s)
        )
          return !1;
        if (
          !(
            i.shiftKey ||
            i.altKey ||
            i.ctrlKey ||
            i.metaKey ||
            (o.activeElement &&
              o.activeElement.nodeName &&
              ('input' === o.activeElement.nodeName.toLowerCase() ||
                'textarea' === o.activeElement.nodeName.toLowerCase()))
          )
        ) {
          if (
            t.params.keyboard.onlyInViewport &&
            (33 === s ||
              34 === s ||
              37 === s ||
              39 === s ||
              38 === s ||
              40 === s)
          ) {
            let e = !1;
            if (
              t.$el.parents('.' + t.params.slideClass).length > 0 &&
              0 === t.$el.parents('.' + t.params.slideActiveClass).length
            )
              return;
            const i = d.innerWidth,
              s = d.innerHeight,
              a = t.$el.offset();
            n && (a.left -= t.$el[0].scrollLeft);
            const r = [
              [a.left, a.top],
              [a.left + t.width, a.top],
              [a.left, a.top + t.height],
              [a.left + t.width, a.top + t.height],
            ];
            for (let t = 0; t < r.length; t += 1) {
              const n = r[t];
              n[0] >= 0 && n[0] <= i && n[1] >= 0 && n[1] <= s && (e = !0);
            }
            if (!e) return;
          }
          t.isHorizontal()
            ? ((33 !== s && 34 !== s && 37 !== s && 39 !== s) ||
                (i.preventDefault ? i.preventDefault() : (i.returnValue = !1)),
              (((34 !== s && 39 !== s) || n) &&
                ((33 !== s && 37 !== s) || !n)) ||
                t.slideNext(),
              (((33 !== s && 37 !== s) || n) &&
                ((34 !== s && 39 !== s) || !n)) ||
                t.slidePrev())
            : ((33 !== s && 34 !== s && 38 !== s && 40 !== s) ||
                (i.preventDefault ? i.preventDefault() : (i.returnValue = !1)),
              (34 !== s && 40 !== s) || t.slideNext(),
              (33 !== s && 38 !== s) || t.slidePrev()),
            t.emit('keyPress', s);
        }
      },
      enable() {
        this.keyboard.enabled ||
          (u(o).on('keydown', this.keyboard.handle),
          (this.keyboard.enabled = !0));
      },
      disable() {
        this.keyboard.enabled &&
          (u(o).off('keydown', this.keyboard.handle),
          (this.keyboard.enabled = !1));
      },
    };
    var Y = {
      name: 'keyboard',
      params: { keyboard: { enabled: !1, onlyInViewport: !0 } },
      create() {
        f.extend(this, {
          keyboard: {
            enabled: !1,
            enable: X.enable.bind(this),
            disable: X.disable.bind(this),
            handle: X.handle.bind(this),
          },
        });
      },
      on: {
        init() {
          const e = this;
          e.params.keyboard.enabled && e.keyboard.enable();
        },
        destroy() {
          const e = this;
          e.keyboard.enabled && e.keyboard.disable();
        },
      },
    };
    const _ = {
      lastScrollTime: f.now(),
      lastEventBeforeSnap: void 0,
      recentWheelEvents: [],
      event: () =>
        d.navigator.userAgent.indexOf('firefox') > -1
          ? 'DOMMouseScroll'
          : (function () {
              let e = 'onwheel' in o;
              if (!e) {
                const t = o.createElement('div');
                t.setAttribute('onwheel', 'return;'),
                  (e = 'function' == typeof t.onwheel);
              }
              return (
                !e &&
                  o.implementation &&
                  o.implementation.hasFeature &&
                  !0 !== o.implementation.hasFeature('', '') &&
                  (e = o.implementation.hasFeature('Events.wheel', '3.0')),
                e
              );
            })()
          ? 'wheel'
          : 'mousewheel',
      normalize(e) {
        let t = 0,
          n = 0,
          i = 0,
          s = 0;
        return (
          'detail' in e && (n = e.detail),
          'wheelDelta' in e && (n = -e.wheelDelta / 120),
          'wheelDeltaY' in e && (n = -e.wheelDeltaY / 120),
          'wheelDeltaX' in e && (t = -e.wheelDeltaX / 120),
          'axis' in e && e.axis === e.HORIZONTAL_AXIS && ((t = n), (n = 0)),
          (i = 10 * t),
          (s = 10 * n),
          'deltaY' in e && (s = e.deltaY),
          'deltaX' in e && (i = e.deltaX),
          e.shiftKey && !i && ((i = s), (s = 0)),
          (i || s) &&
            e.deltaMode &&
            (1 === e.deltaMode
              ? ((i *= 40), (s *= 40))
              : ((i *= 800), (s *= 800))),
          i && !t && (t = i < 1 ? -1 : 1),
          s && !n && (n = s < 1 ? -1 : 1),
          { spinX: t, spinY: n, pixelX: i, pixelY: s }
        );
      },
      handleMouseEnter() {
        this.mouseEntered = !0;
      },
      handleMouseLeave() {
        this.mouseEntered = !1;
      },
      handle(e) {
        let t = e;
        const n = this,
          i = n.params.mousewheel;
        n.params.cssMode && t.preventDefault();
        let s = n.$el;
        if (
          ('container' !== n.params.mousewheel.eventsTarged &&
            (s = u(n.params.mousewheel.eventsTarged)),
          !n.mouseEntered && !s[0].contains(t.target) && !i.releaseOnEdges)
        )
          return !0;
        t.originalEvent && (t = t.originalEvent);
        let a = 0;
        const r = n.rtlTranslate ? -1 : 1,
          o = _.normalize(t);
        if (i.forceToAxis)
          if (n.isHorizontal()) {
            if (!(Math.abs(o.pixelX) > Math.abs(o.pixelY))) return !0;
            a = o.pixelX * r;
          } else {
            if (!(Math.abs(o.pixelY) > Math.abs(o.pixelX))) return !0;
            a = o.pixelY;
          }
        else
          a =
            Math.abs(o.pixelX) > Math.abs(o.pixelY) ? -o.pixelX * r : -o.pixelY;
        if (0 === a) return !0;
        if ((i.invert && (a = -a), n.params.freeMode)) {
          const e = {
              time: f.now(),
              delta: Math.abs(a),
              direction: Math.sign(a),
            },
            { lastEventBeforeSnap: s } = n.mousewheel,
            r =
              s &&
              e.time < s.time + 500 &&
              e.delta <= s.delta &&
              e.direction === s.direction;
          if (!r) {
            (n.mousewheel.lastEventBeforeSnap = void 0),
              n.params.loop && n.loopFix();
            let s = n.getTranslate() + a * i.sensitivity;
            const o = n.isBeginning,
              l = n.isEnd;
            if (
              (s >= n.minTranslate() && (s = n.minTranslate()),
              s <= n.maxTranslate() && (s = n.maxTranslate()),
              n.setTransition(0),
              n.setTranslate(s),
              n.updateProgress(),
              n.updateActiveIndex(),
              n.updateSlidesClasses(),
              ((!o && n.isBeginning) || (!l && n.isEnd)) &&
                n.updateSlidesClasses(),
              n.params.freeModeSticky)
            ) {
              clearTimeout(n.mousewheel.timeout),
                (n.mousewheel.timeout = void 0);
              const t = n.mousewheel.recentWheelEvents;
              t.length >= 15 && t.shift();
              const i = t.length ? t[t.length - 1] : void 0,
                s = t[0];
              if (
                (t.push(e),
                i && (e.delta > i.delta || e.direction !== i.direction))
              )
                t.splice(0);
              else if (
                t.length >= 15 &&
                e.time - s.time < 500 &&
                s.delta - e.delta >= 1 &&
                e.delta <= 6
              ) {
                const i = a > 0 ? 0.8 : 0.2;
                (n.mousewheel.lastEventBeforeSnap = e),
                  t.splice(0),
                  (n.mousewheel.timeout = f.nextTick(() => {
                    n.slideToClosest(n.params.speed, !0, void 0, i);
                  }, 0));
              }
              n.mousewheel.timeout ||
                (n.mousewheel.timeout = f.nextTick(() => {
                  (n.mousewheel.lastEventBeforeSnap = e),
                    t.splice(0),
                    n.slideToClosest(n.params.speed, !0, void 0, 0.5);
                }, 500));
            }
            if (
              (r || n.emit('scroll', t),
              n.params.autoplay &&
                n.params.autoplayDisableOnInteraction &&
                n.autoplay.stop(),
              s === n.minTranslate() || s === n.maxTranslate())
            )
              return !0;
          }
        } else {
          const t = {
              time: f.now(),
              delta: Math.abs(a),
              direction: Math.sign(a),
              raw: e,
            },
            i = n.mousewheel.recentWheelEvents;
          i.length >= 2 && i.shift();
          const s = i.length ? i[i.length - 1] : void 0;
          if (
            (i.push(t),
            s
              ? (t.direction !== s.direction ||
                  t.delta > s.delta ||
                  t.time > s.time + 150) &&
                n.mousewheel.animateSlider(t)
              : n.mousewheel.animateSlider(t),
            n.mousewheel.releaseScroll(t))
          )
            return !0;
        }
        return t.preventDefault ? t.preventDefault() : (t.returnValue = !1), !1;
      },
      animateSlider(e) {
        const t = this;
        return (
          (e.delta >= 6 && f.now() - t.mousewheel.lastScrollTime < 60) ||
          (e.direction < 0
            ? (t.isEnd && !t.params.loop) ||
              t.animating ||
              (t.slideNext(), t.emit('scroll', e.raw))
            : (t.isBeginning && !t.params.loop) ||
              t.animating ||
              (t.slidePrev(), t.emit('scroll', e.raw)),
          (t.mousewheel.lastScrollTime = new d.Date().getTime()),
          !1)
        );
      },
      releaseScroll(e) {
        const t = this,
          n = t.params.mousewheel;
        if (e.direction < 0) {
          if (t.isEnd && !t.params.loop && n.releaseOnEdges) return !0;
        } else if (t.isBeginning && !t.params.loop && n.releaseOnEdges)
          return !0;
        return !1;
      },
      enable() {
        const e = this,
          t = _.event();
        if (e.params.cssMode)
          return e.wrapperEl.removeEventListener(t, e.mousewheel.handle), !0;
        if (!t) return !1;
        if (e.mousewheel.enabled) return !1;
        let n = e.$el;
        return (
          'container' !== e.params.mousewheel.eventsTarged &&
            (n = u(e.params.mousewheel.eventsTarged)),
          n.on('mouseenter', e.mousewheel.handleMouseEnter),
          n.on('mouseleave', e.mousewheel.handleMouseLeave),
          n.on(t, e.mousewheel.handle),
          (e.mousewheel.enabled = !0),
          !0
        );
      },
      disable() {
        const e = this,
          t = _.event();
        if (e.params.cssMode)
          return e.wrapperEl.addEventListener(t, e.mousewheel.handle), !0;
        if (!t) return !1;
        if (!e.mousewheel.enabled) return !1;
        let n = e.$el;
        return (
          'container' !== e.params.mousewheel.eventsTarged &&
            (n = u(e.params.mousewheel.eventsTarged)),
          n.off(t, e.mousewheel.handle),
          (e.mousewheel.enabled = !1),
          !0
        );
      },
    };
    const U = {
      update() {
        const e = this,
          t = e.params.navigation;
        if (e.params.loop) return;
        const { $nextEl: n, $prevEl: i } = e.navigation;
        i &&
          i.length > 0 &&
          (e.isBeginning
            ? i.addClass(t.disabledClass)
            : i.removeClass(t.disabledClass),
          i[e.params.watchOverflow && e.isLocked ? 'addClass' : 'removeClass'](
            t.lockClass
          )),
          n &&
            n.length > 0 &&
            (e.isEnd
              ? n.addClass(t.disabledClass)
              : n.removeClass(t.disabledClass),
            n[
              e.params.watchOverflow && e.isLocked ? 'addClass' : 'removeClass'
            ](t.lockClass));
      },
      onPrevClick(e) {
        e.preventDefault(),
          (this.isBeginning && !this.params.loop) || this.slidePrev();
      },
      onNextClick(e) {
        e.preventDefault(),
          (this.isEnd && !this.params.loop) || this.slideNext();
      },
      init() {
        const e = this,
          t = e.params.navigation;
        if (!t.nextEl && !t.prevEl) return;
        let n, i;
        t.nextEl &&
          ((n = u(t.nextEl)),
          e.params.uniqueNavElements &&
            'string' == typeof t.nextEl &&
            n.length > 1 &&
            1 === e.$el.find(t.nextEl).length &&
            (n = e.$el.find(t.nextEl))),
          t.prevEl &&
            ((i = u(t.prevEl)),
            e.params.uniqueNavElements &&
              'string' == typeof t.prevEl &&
              i.length > 1 &&
              1 === e.$el.find(t.prevEl).length &&
              (i = e.$el.find(t.prevEl))),
          n && n.length > 0 && n.on('click', e.navigation.onNextClick),
          i && i.length > 0 && i.on('click', e.navigation.onPrevClick),
          f.extend(e.navigation, {
            $nextEl: n,
            nextEl: n && n[0],
            $prevEl: i,
            prevEl: i && i[0],
          });
      },
      destroy() {
        const e = this,
          { $nextEl: t, $prevEl: n } = e.navigation;
        t &&
          t.length &&
          (t.off('click', e.navigation.onNextClick),
          t.removeClass(e.params.navigation.disabledClass)),
          n &&
            n.length &&
            (n.off('click', e.navigation.onPrevClick),
            n.removeClass(e.params.navigation.disabledClass));
      },
    };
    const K = {
      update() {
        const e = this,
          t = e.rtl,
          n = e.params.pagination;
        if (
          !n.el ||
          !e.pagination.el ||
          !e.pagination.$el ||
          0 === e.pagination.$el.length
        )
          return;
        const i =
            e.virtual && e.params.virtual.enabled
              ? e.virtual.slides.length
              : e.slides.length,
          s = e.pagination.$el;
        let a;
        const r = e.params.loop
          ? Math.ceil((i - 2 * e.loopedSlides) / e.params.slidesPerGroup)
          : e.snapGrid.length;
        if (
          (e.params.loop
            ? ((a = Math.ceil(
                (e.activeIndex - e.loopedSlides) / e.params.slidesPerGroup
              )),
              a > i - 1 - 2 * e.loopedSlides && (a -= i - 2 * e.loopedSlides),
              a > r - 1 && (a -= r),
              a < 0 && 'bullets' !== e.params.paginationType && (a = r + a))
            : (a = void 0 !== e.snapIndex ? e.snapIndex : e.activeIndex || 0),
          'bullets' === n.type &&
            e.pagination.bullets &&
            e.pagination.bullets.length > 0)
        ) {
          const i = e.pagination.bullets;
          let r, o, l;
          if (
            (n.dynamicBullets &&
              ((e.pagination.bulletSize = i
                .eq(0)
                [e.isHorizontal() ? 'outerWidth' : 'outerHeight'](!0)),
              s.css(
                e.isHorizontal() ? 'width' : 'height',
                e.pagination.bulletSize * (n.dynamicMainBullets + 4) + 'px'
              ),
              n.dynamicMainBullets > 1 &&
                void 0 !== e.previousIndex &&
                ((e.pagination.dynamicBulletIndex += a - e.previousIndex),
                e.pagination.dynamicBulletIndex > n.dynamicMainBullets - 1
                  ? (e.pagination.dynamicBulletIndex = n.dynamicMainBullets - 1)
                  : e.pagination.dynamicBulletIndex < 0 &&
                    (e.pagination.dynamicBulletIndex = 0)),
              (r = a - e.pagination.dynamicBulletIndex),
              (o = r + (Math.min(i.length, n.dynamicMainBullets) - 1)),
              (l = (o + r) / 2)),
            i.removeClass(
              `${n.bulletActiveClass} ${n.bulletActiveClass}-next ${n.bulletActiveClass}-next-next ${n.bulletActiveClass}-prev ${n.bulletActiveClass}-prev-prev ${n.bulletActiveClass}-main`
            ),
            s.length > 1)
          )
            i.each((e, t) => {
              const i = u(t),
                s = i.index();
              s === a && i.addClass(n.bulletActiveClass),
                n.dynamicBullets &&
                  (s >= r &&
                    s <= o &&
                    i.addClass(n.bulletActiveClass + '-main'),
                  s === r &&
                    i
                      .prev()
                      .addClass(n.bulletActiveClass + '-prev')
                      .prev()
                      .addClass(n.bulletActiveClass + '-prev-prev'),
                  s === o &&
                    i
                      .next()
                      .addClass(n.bulletActiveClass + '-next')
                      .next()
                      .addClass(n.bulletActiveClass + '-next-next'));
            });
          else {
            const t = i.eq(a),
              s = t.index();
            if ((t.addClass(n.bulletActiveClass), n.dynamicBullets)) {
              const t = i.eq(r),
                a = i.eq(o);
              for (let e = r; e <= o; e += 1)
                i.eq(e).addClass(n.bulletActiveClass + '-main');
              if (e.params.loop)
                if (s >= i.length - n.dynamicMainBullets) {
                  for (let e = n.dynamicMainBullets; e >= 0; e -= 1)
                    i.eq(i.length - e).addClass(n.bulletActiveClass + '-main');
                  i.eq(i.length - n.dynamicMainBullets - 1).addClass(
                    n.bulletActiveClass + '-prev'
                  );
                } else
                  t
                    .prev()
                    .addClass(n.bulletActiveClass + '-prev')
                    .prev()
                    .addClass(n.bulletActiveClass + '-prev-prev'),
                    a
                      .next()
                      .addClass(n.bulletActiveClass + '-next')
                      .next()
                      .addClass(n.bulletActiveClass + '-next-next');
              else
                t
                  .prev()
                  .addClass(n.bulletActiveClass + '-prev')
                  .prev()
                  .addClass(n.bulletActiveClass + '-prev-prev'),
                  a
                    .next()
                    .addClass(n.bulletActiveClass + '-next')
                    .next()
                    .addClass(n.bulletActiveClass + '-next-next');
            }
          }
          if (n.dynamicBullets) {
            const s = Math.min(i.length, n.dynamicMainBullets + 4),
              a =
                (e.pagination.bulletSize * s - e.pagination.bulletSize) / 2 -
                l * e.pagination.bulletSize,
              r = t ? 'right' : 'left';
            i.css(e.isHorizontal() ? r : 'top', a + 'px');
          }
        }
        if (
          ('fraction' === n.type &&
            (s.find('.' + n.currentClass).text(n.formatFractionCurrent(a + 1)),
            s.find('.' + n.totalClass).text(n.formatFractionTotal(r))),
          'progressbar' === n.type)
        ) {
          let t;
          t = n.progressbarOpposite
            ? e.isHorizontal()
              ? 'vertical'
              : 'horizontal'
            : e.isHorizontal()
            ? 'horizontal'
            : 'vertical';
          const i = (a + 1) / r;
          let o = 1,
            l = 1;
          'horizontal' === t ? (o = i) : (l = i),
            s
              .find('.' + n.progressbarFillClass)
              .transform(`translate3d(0,0,0) scaleX(${o}) scaleY(${l})`)
              .transition(e.params.speed);
        }
        'custom' === n.type && n.renderCustom
          ? (s.html(n.renderCustom(e, a + 1, r)),
            e.emit('paginationRender', e, s[0]))
          : e.emit('paginationUpdate', e, s[0]),
          s[e.params.watchOverflow && e.isLocked ? 'addClass' : 'removeClass'](
            n.lockClass
          );
      },
      render() {
        const e = this,
          t = e.params.pagination;
        if (
          !t.el ||
          !e.pagination.el ||
          !e.pagination.$el ||
          0 === e.pagination.$el.length
        )
          return;
        const n =
            e.virtual && e.params.virtual.enabled
              ? e.virtual.slides.length
              : e.slides.length,
          i = e.pagination.$el;
        let s = '';
        if ('bullets' === t.type) {
          const a = e.params.loop
            ? Math.ceil((n - 2 * e.loopedSlides) / e.params.slidesPerGroup)
            : e.snapGrid.length;
          for (let n = 0; n < a; n += 1)
            t.renderBullet
              ? (s += t.renderBullet.call(e, n, t.bulletClass))
              : (s += `<${t.bulletElement} class="${t.bulletClass}"></${t.bulletElement}>`);
          i.html(s), (e.pagination.bullets = i.find('.' + t.bulletClass));
        }
        'fraction' === t.type &&
          ((s = t.renderFraction
            ? t.renderFraction.call(e, t.currentClass, t.totalClass)
            : `<span class="${t.currentClass}"></span> / <span class="${t.totalClass}"></span>`),
          i.html(s)),
          'progressbar' === t.type &&
            ((s = t.renderProgressbar
              ? t.renderProgressbar.call(e, t.progressbarFillClass)
              : `<span class="${t.progressbarFillClass}"></span>`),
            i.html(s)),
          'custom' !== t.type &&
            e.emit('paginationRender', e.pagination.$el[0]);
      },
      init() {
        const e = this,
          t = e.params.pagination;
        if (!t.el) return;
        let n = u(t.el);
        0 !== n.length &&
          (e.params.uniqueNavElements &&
            'string' == typeof t.el &&
            n.length > 1 &&
            1 === e.$el.find(t.el).length &&
            (n = e.$el.find(t.el)),
          'bullets' === t.type && t.clickable && n.addClass(t.clickableClass),
          n.addClass(t.modifierClass + t.type),
          'bullets' === t.type &&
            t.dynamicBullets &&
            (n.addClass(`${t.modifierClass}${t.type}-dynamic`),
            (e.pagination.dynamicBulletIndex = 0),
            t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)),
          'progressbar' === t.type &&
            t.progressbarOpposite &&
            n.addClass(t.progressbarOppositeClass),
          t.clickable &&
            n.on('click', '.' + t.bulletClass, function (t) {
              t.preventDefault();
              let n = u(this).index() * e.params.slidesPerGroup;
              e.params.loop && (n += e.loopedSlides), e.slideTo(n);
            }),
          f.extend(e.pagination, { $el: n, el: n[0] }));
      },
      destroy() {
        const e = this.params.pagination;
        if (
          !e.el ||
          !this.pagination.el ||
          !this.pagination.$el ||
          0 === this.pagination.$el.length
        )
          return;
        const t = this.pagination.$el;
        t.removeClass(e.hiddenClass),
          t.removeClass(e.modifierClass + e.type),
          this.pagination.bullets &&
            this.pagination.bullets.removeClass(e.bulletActiveClass),
          e.clickable && t.off('click', '.' + e.bulletClass);
      },
    };
    const Z = {
      setTranslate() {
        const e = this;
        if (!e.params.scrollbar.el || !e.scrollbar.el) return;
        const { scrollbar: t, rtlTranslate: n, progress: i } = e,
          { dragSize: s, trackSize: a, $dragEl: r, $el: o } = t,
          l = e.params.scrollbar;
        let d = s,
          c = (a - s) * i;
        n
          ? ((c = -c),
            c > 0 ? ((d = s - c), (c = 0)) : -c + s > a && (d = a + c))
          : c < 0
          ? ((d = s + c), (c = 0))
          : c + s > a && (d = a - c),
          e.isHorizontal()
            ? (r.transform(`translate3d(${c}px, 0, 0)`),
              (r[0].style.width = d + 'px'))
            : (r.transform(`translate3d(0px, ${c}px, 0)`),
              (r[0].style.height = d + 'px')),
          l.hide &&
            (clearTimeout(e.scrollbar.timeout),
            (o[0].style.opacity = 1),
            (e.scrollbar.timeout = setTimeout(() => {
              (o[0].style.opacity = 0), o.transition(400);
            }, 1e3)));
      },
      setTransition(e) {
        this.params.scrollbar.el &&
          this.scrollbar.el &&
          this.scrollbar.$dragEl.transition(e);
      },
      updateSize() {
        const e = this;
        if (!e.params.scrollbar.el || !e.scrollbar.el) return;
        const { scrollbar: t } = e,
          { $dragEl: n, $el: i } = t;
        (n[0].style.width = ''), (n[0].style.height = '');
        const s = e.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
          a = e.size / e.virtualSize,
          r = a * (s / e.size);
        let o;
        (o =
          'auto' === e.params.scrollbar.dragSize
            ? s * a
            : parseInt(e.params.scrollbar.dragSize, 10)),
          e.isHorizontal()
            ? (n[0].style.width = o + 'px')
            : (n[0].style.height = o + 'px'),
          (i[0].style.display = a >= 1 ? 'none' : ''),
          e.params.scrollbar.hide && (i[0].style.opacity = 0),
          f.extend(t, {
            trackSize: s,
            divider: a,
            moveDivider: r,
            dragSize: o,
          }),
          t.$el[
            e.params.watchOverflow && e.isLocked ? 'addClass' : 'removeClass'
          ](e.params.scrollbar.lockClass);
      },
      getPointerPosition(e) {
        return this.isHorizontal()
          ? 'touchstart' === e.type || 'touchmove' === e.type
            ? e.targetTouches[0].clientX
            : e.clientX
          : 'touchstart' === e.type || 'touchmove' === e.type
          ? e.targetTouches[0].clientY
          : e.clientY;
      },
      setDragPosition(e) {
        const { scrollbar: t, rtlTranslate: n } = this,
          { $el: i, dragSize: s, trackSize: a, dragStartPos: r } = t;
        let o;
        (o =
          (t.getPointerPosition(e) -
            i.offset()[this.isHorizontal() ? 'left' : 'top'] -
            (null !== r ? r : s / 2)) /
          (a - s)),
          (o = Math.max(Math.min(o, 1), 0)),
          n && (o = 1 - o);
        const l =
          this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * o;
        this.updateProgress(l),
          this.setTranslate(l),
          this.updateActiveIndex(),
          this.updateSlidesClasses();
      },
      onDragStart(e) {
        const t = this,
          n = t.params.scrollbar,
          { scrollbar: i, $wrapperEl: s } = t,
          { $el: a, $dragEl: r } = i;
        (t.scrollbar.isTouched = !0),
          (t.scrollbar.dragStartPos =
            e.target === r[0] || e.target === r
              ? i.getPointerPosition(e) -
                e.target.getBoundingClientRect()[
                  t.isHorizontal() ? 'left' : 'top'
                ]
              : null),
          e.preventDefault(),
          e.stopPropagation(),
          s.transition(100),
          r.transition(100),
          i.setDragPosition(e),
          clearTimeout(t.scrollbar.dragTimeout),
          a.transition(0),
          n.hide && a.css('opacity', 1),
          t.params.cssMode && t.$wrapperEl.css('scroll-snap-type', 'none'),
          t.emit('scrollbarDragStart', e);
      },
      onDragMove(e) {
        const { scrollbar: t, $wrapperEl: n } = this,
          { $el: i, $dragEl: s } = t;
        this.scrollbar.isTouched &&
          (e.preventDefault ? e.preventDefault() : (e.returnValue = !1),
          t.setDragPosition(e),
          n.transition(0),
          i.transition(0),
          s.transition(0),
          this.emit('scrollbarDragMove', e));
      },
      onDragEnd(e) {
        const t = this,
          n = t.params.scrollbar,
          { scrollbar: i, $wrapperEl: s } = t,
          { $el: a } = i;
        t.scrollbar.isTouched &&
          ((t.scrollbar.isTouched = !1),
          t.params.cssMode &&
            (t.$wrapperEl.css('scroll-snap-type', ''), s.transition('')),
          n.hide &&
            (clearTimeout(t.scrollbar.dragTimeout),
            (t.scrollbar.dragTimeout = f.nextTick(() => {
              a.css('opacity', 0), a.transition(400);
            }, 1e3))),
          t.emit('scrollbarDragEnd', e),
          n.snapOnRelease && t.slideToClosest());
      },
      enableDraggable() {
        const e = this;
        if (!e.params.scrollbar.el) return;
        const {
            scrollbar: t,
            touchEventsTouch: n,
            touchEventsDesktop: i,
            params: s,
          } = e,
          a = t.$el[0],
          r = !(!m.passiveListener || !s.passiveListeners) && {
            passive: !1,
            capture: !1,
          },
          l = !(!m.passiveListener || !s.passiveListeners) && {
            passive: !0,
            capture: !1,
          };
        m.touch
          ? (a.addEventListener(n.start, e.scrollbar.onDragStart, r),
            a.addEventListener(n.move, e.scrollbar.onDragMove, r),
            a.addEventListener(n.end, e.scrollbar.onDragEnd, l))
          : (a.addEventListener(i.start, e.scrollbar.onDragStart, r),
            o.addEventListener(i.move, e.scrollbar.onDragMove, r),
            o.addEventListener(i.end, e.scrollbar.onDragEnd, l));
      },
      disableDraggable() {
        const e = this;
        if (!e.params.scrollbar.el) return;
        const {
            scrollbar: t,
            touchEventsTouch: n,
            touchEventsDesktop: i,
            params: s,
          } = e,
          a = t.$el[0],
          r = !(!m.passiveListener || !s.passiveListeners) && {
            passive: !1,
            capture: !1,
          },
          l = !(!m.passiveListener || !s.passiveListeners) && {
            passive: !0,
            capture: !1,
          };
        m.touch
          ? (a.removeEventListener(n.start, e.scrollbar.onDragStart, r),
            a.removeEventListener(n.move, e.scrollbar.onDragMove, r),
            a.removeEventListener(n.end, e.scrollbar.onDragEnd, l))
          : (a.removeEventListener(i.start, e.scrollbar.onDragStart, r),
            o.removeEventListener(i.move, e.scrollbar.onDragMove, r),
            o.removeEventListener(i.end, e.scrollbar.onDragEnd, l));
      },
      init() {
        const e = this;
        if (!e.params.scrollbar.el) return;
        const { scrollbar: t, $el: n } = e,
          i = e.params.scrollbar;
        let s = u(i.el);
        e.params.uniqueNavElements &&
          'string' == typeof i.el &&
          s.length > 1 &&
          1 === n.find(i.el).length &&
          (s = n.find(i.el));
        let a = s.find('.' + e.params.scrollbar.dragClass);
        0 === a.length &&
          ((a = u(`<div class="${e.params.scrollbar.dragClass}"></div>`)),
          s.append(a)),
          f.extend(t, { $el: s, el: s[0], $dragEl: a, dragEl: a[0] }),
          i.draggable && t.enableDraggable();
      },
      destroy() {
        this.scrollbar.disableDraggable();
      },
    };
    const Q = {
      setTransform(e, t) {
        const { rtl: n } = this,
          i = u(e),
          s = n ? -1 : 1,
          a = i.attr('data-swiper-parallax') || '0';
        let r = i.attr('data-swiper-parallax-x'),
          o = i.attr('data-swiper-parallax-y');
        const l = i.attr('data-swiper-parallax-scale'),
          d = i.attr('data-swiper-parallax-opacity');
        if (
          (r || o
            ? ((r = r || '0'), (o = o || '0'))
            : this.isHorizontal()
            ? ((r = a), (o = '0'))
            : ((o = a), (r = '0')),
          (r =
            r.indexOf('%') >= 0
              ? parseInt(r, 10) * t * s + '%'
              : r * t * s + 'px'),
          (o = o.indexOf('%') >= 0 ? parseInt(o, 10) * t + '%' : o * t + 'px'),
          null != d)
        ) {
          const e = d - (d - 1) * (1 - Math.abs(t));
          i[0].style.opacity = e;
        }
        if (null == l) i.transform(`translate3d(${r}, ${o}, 0px)`);
        else {
          const e = l - (l - 1) * (1 - Math.abs(t));
          i.transform(`translate3d(${r}, ${o}, 0px) scale(${e})`);
        }
      },
      setTranslate() {
        const e = this,
          { $el: t, slides: n, progress: i, snapGrid: s } = e;
        t
          .children(
            '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
          )
          .each((t, n) => {
            e.parallax.setTransform(n, i);
          }),
          n.each((t, n) => {
            let a = n.progress;
            e.params.slidesPerGroup > 1 &&
              'auto' !== e.params.slidesPerView &&
              (a += Math.ceil(t / 2) - i * (s.length - 1)),
              (a = Math.min(Math.max(a, -1), 1)),
              u(n)
                .find(
                  '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
                )
                .each((t, n) => {
                  e.parallax.setTransform(n, a);
                });
          });
      },
      setTransition(e = this.params.speed) {
        const { $el: t } = this;
        t.find(
          '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
        ).each((t, n) => {
          const i = u(n);
          let s = parseInt(i.attr('data-swiper-parallax-duration'), 10) || e;
          0 === e && (s = 0), i.transition(s);
        });
      },
    };
    const J = {
      getDistanceBetweenTouches(e) {
        if (e.targetTouches.length < 2) return 1;
        const t = e.targetTouches[0].pageX,
          n = e.targetTouches[0].pageY,
          i = e.targetTouches[1].pageX,
          s = e.targetTouches[1].pageY;
        return Math.sqrt((i - t) ** 2 + (s - n) ** 2);
      },
      onGestureStart(e) {
        const t = this,
          n = t.params.zoom,
          i = t.zoom,
          { gesture: s } = i;
        if (
          ((i.fakeGestureTouched = !1), (i.fakeGestureMoved = !1), !m.gestures)
        ) {
          if (
            'touchstart' !== e.type ||
            ('touchstart' === e.type && e.targetTouches.length < 2)
          )
            return;
          (i.fakeGestureTouched = !0),
            (s.scaleStart = J.getDistanceBetweenTouches(e));
        }
        (s.$slideEl && s.$slideEl.length) ||
        ((s.$slideEl = u(e.target).closest('.' + t.params.slideClass)),
        0 === s.$slideEl.length && (s.$slideEl = t.slides.eq(t.activeIndex)),
        (s.$imageEl = s.$slideEl.find(
          'img, svg, canvas, picture, .swiper-zoom-target'
        )),
        (s.$imageWrapEl = s.$imageEl.parent('.' + n.containerClass)),
        (s.maxRatio = s.$imageWrapEl.attr('data-swiper-zoom') || n.maxRatio),
        0 !== s.$imageWrapEl.length)
          ? (s.$imageEl && s.$imageEl.transition(0), (t.zoom.isScaling = !0))
          : (s.$imageEl = void 0);
      },
      onGestureChange(e) {
        const t = this.params.zoom,
          n = this.zoom,
          { gesture: i } = n;
        if (!m.gestures) {
          if (
            'touchmove' !== e.type ||
            ('touchmove' === e.type && e.targetTouches.length < 2)
          )
            return;
          (n.fakeGestureMoved = !0),
            (i.scaleMove = J.getDistanceBetweenTouches(e));
        }
        i.$imageEl &&
          0 !== i.$imageEl.length &&
          ((n.scale = m.gestures
            ? e.scale * n.currentScale
            : (i.scaleMove / i.scaleStart) * n.currentScale),
          n.scale > i.maxRatio &&
            (n.scale = i.maxRatio - 1 + (n.scale - i.maxRatio + 1) ** 0.5),
          n.scale < t.minRatio &&
            (n.scale = t.minRatio + 1 - (t.minRatio - n.scale + 1) ** 0.5),
          i.$imageEl.transform(`translate3d(0,0,0) scale(${n.scale})`));
      },
      onGestureEnd(e) {
        const t = this.params.zoom,
          n = this.zoom,
          { gesture: i } = n;
        if (!m.gestures) {
          if (!n.fakeGestureTouched || !n.fakeGestureMoved) return;
          if (
            'touchend' !== e.type ||
            ('touchend' === e.type && e.changedTouches.length < 2 && !E.android)
          )
            return;
          (n.fakeGestureTouched = !1), (n.fakeGestureMoved = !1);
        }
        i.$imageEl &&
          0 !== i.$imageEl.length &&
          ((n.scale = Math.max(Math.min(n.scale, i.maxRatio), t.minRatio)),
          i.$imageEl
            .transition(this.params.speed)
            .transform(`translate3d(0,0,0) scale(${n.scale})`),
          (n.currentScale = n.scale),
          (n.isScaling = !1),
          1 === n.scale && (i.$slideEl = void 0));
      },
      onTouchStart(e) {
        const t = this.zoom,
          { gesture: n, image: i } = t;
        n.$imageEl &&
          0 !== n.$imageEl.length &&
          (i.isTouched ||
            (E.android && e.cancelable && e.preventDefault(),
            (i.isTouched = !0),
            (i.touchesStart.x =
              'touchstart' === e.type ? e.targetTouches[0].pageX : e.pageX),
            (i.touchesStart.y =
              'touchstart' === e.type ? e.targetTouches[0].pageY : e.pageY)));
      },
      onTouchMove(e) {
        const t = this,
          n = t.zoom,
          { gesture: i, image: s, velocity: a } = n;
        if (!i.$imageEl || 0 === i.$imageEl.length) return;
        if (((t.allowClick = !1), !s.isTouched || !i.$slideEl)) return;
        s.isMoved ||
          ((s.width = i.$imageEl[0].offsetWidth),
          (s.height = i.$imageEl[0].offsetHeight),
          (s.startX = f.getTranslate(i.$imageWrapEl[0], 'x') || 0),
          (s.startY = f.getTranslate(i.$imageWrapEl[0], 'y') || 0),
          (i.slideWidth = i.$slideEl[0].offsetWidth),
          (i.slideHeight = i.$slideEl[0].offsetHeight),
          i.$imageWrapEl.transition(0),
          t.rtl && ((s.startX = -s.startX), (s.startY = -s.startY)));
        const r = s.width * n.scale,
          o = s.height * n.scale;
        if (!(r < i.slideWidth && o < i.slideHeight)) {
          if (
            ((s.minX = Math.min(i.slideWidth / 2 - r / 2, 0)),
            (s.maxX = -s.minX),
            (s.minY = Math.min(i.slideHeight / 2 - o / 2, 0)),
            (s.maxY = -s.minY),
            (s.touchesCurrent.x =
              'touchmove' === e.type ? e.targetTouches[0].pageX : e.pageX),
            (s.touchesCurrent.y =
              'touchmove' === e.type ? e.targetTouches[0].pageY : e.pageY),
            !s.isMoved && !n.isScaling)
          ) {
            if (
              t.isHorizontal() &&
              ((Math.floor(s.minX) === Math.floor(s.startX) &&
                s.touchesCurrent.x < s.touchesStart.x) ||
                (Math.floor(s.maxX) === Math.floor(s.startX) &&
                  s.touchesCurrent.x > s.touchesStart.x))
            )
              return void (s.isTouched = !1);
            if (
              !t.isHorizontal() &&
              ((Math.floor(s.minY) === Math.floor(s.startY) &&
                s.touchesCurrent.y < s.touchesStart.y) ||
                (Math.floor(s.maxY) === Math.floor(s.startY) &&
                  s.touchesCurrent.y > s.touchesStart.y))
            )
              return void (s.isTouched = !1);
          }
          e.cancelable && e.preventDefault(),
            e.stopPropagation(),
            (s.isMoved = !0),
            (s.currentX = s.touchesCurrent.x - s.touchesStart.x + s.startX),
            (s.currentY = s.touchesCurrent.y - s.touchesStart.y + s.startY),
            s.currentX < s.minX &&
              (s.currentX = s.minX + 1 - (s.minX - s.currentX + 1) ** 0.8),
            s.currentX > s.maxX &&
              (s.currentX = s.maxX - 1 + (s.currentX - s.maxX + 1) ** 0.8),
            s.currentY < s.minY &&
              (s.currentY = s.minY + 1 - (s.minY - s.currentY + 1) ** 0.8),
            s.currentY > s.maxY &&
              (s.currentY = s.maxY - 1 + (s.currentY - s.maxY + 1) ** 0.8),
            a.prevPositionX || (a.prevPositionX = s.touchesCurrent.x),
            a.prevPositionY || (a.prevPositionY = s.touchesCurrent.y),
            a.prevTime || (a.prevTime = Date.now()),
            (a.x =
              (s.touchesCurrent.x - a.prevPositionX) /
              (Date.now() - a.prevTime) /
              2),
            (a.y =
              (s.touchesCurrent.y - a.prevPositionY) /
              (Date.now() - a.prevTime) /
              2),
            Math.abs(s.touchesCurrent.x - a.prevPositionX) < 2 && (a.x = 0),
            Math.abs(s.touchesCurrent.y - a.prevPositionY) < 2 && (a.y = 0),
            (a.prevPositionX = s.touchesCurrent.x),
            (a.prevPositionY = s.touchesCurrent.y),
            (a.prevTime = Date.now()),
            i.$imageWrapEl.transform(
              `translate3d(${s.currentX}px, ${s.currentY}px,0)`
            );
        }
      },
      onTouchEnd() {
        const e = this.zoom,
          { gesture: t, image: n, velocity: i } = e;
        if (!t.$imageEl || 0 === t.$imageEl.length) return;
        if (!n.isTouched || !n.isMoved)
          return (n.isTouched = !1), void (n.isMoved = !1);
        (n.isTouched = !1), (n.isMoved = !1);
        let s = 300,
          a = 300;
        const r = i.x * s,
          o = n.currentX + r,
          l = i.y * a,
          d = n.currentY + l;
        0 !== i.x && (s = Math.abs((o - n.currentX) / i.x)),
          0 !== i.y && (a = Math.abs((d - n.currentY) / i.y));
        const c = Math.max(s, a);
        (n.currentX = o), (n.currentY = d);
        const u = n.width * e.scale,
          p = n.height * e.scale;
        (n.minX = Math.min(t.slideWidth / 2 - u / 2, 0)),
          (n.maxX = -n.minX),
          (n.minY = Math.min(t.slideHeight / 2 - p / 2, 0)),
          (n.maxY = -n.minY),
          (n.currentX = Math.max(Math.min(n.currentX, n.maxX), n.minX)),
          (n.currentY = Math.max(Math.min(n.currentY, n.maxY), n.minY)),
          t.$imageWrapEl
            .transition(c)
            .transform(`translate3d(${n.currentX}px, ${n.currentY}px,0)`);
      },
      onTransitionEnd() {
        const e = this.zoom,
          { gesture: t } = e;
        t.$slideEl &&
          this.previousIndex !== this.activeIndex &&
          (t.$imageEl && t.$imageEl.transform('translate3d(0,0,0) scale(1)'),
          t.$imageWrapEl && t.$imageWrapEl.transform('translate3d(0,0,0)'),
          (e.scale = 1),
          (e.currentScale = 1),
          (t.$slideEl = void 0),
          (t.$imageEl = void 0),
          (t.$imageWrapEl = void 0));
      },
      toggle(e) {
        const t = this.zoom;
        t.scale && 1 !== t.scale ? t.out() : t.in(e);
      },
      in(e) {
        const t = this,
          n = t.zoom,
          i = t.params.zoom,
          { gesture: s, image: a } = n;
        if (
          (s.$slideEl ||
            (t.params.virtual && t.params.virtual.enabled && t.virtual
              ? (s.$slideEl = t.$wrapperEl.children(
                  '.' + t.params.slideActiveClass
                ))
              : (s.$slideEl = t.slides.eq(t.activeIndex)),
            (s.$imageEl = s.$slideEl.find(
              'img, svg, canvas, picture, .swiper-zoom-target'
            )),
            (s.$imageWrapEl = s.$imageEl.parent('.' + i.containerClass))),
          !s.$imageEl || 0 === s.$imageEl.length)
        )
          return;
        let r, o, l, d, c, u, p, h, f, m, g, v, y, b, w, x, T, C;
        s.$slideEl.addClass('' + i.zoomedSlideClass),
          void 0 === a.touchesStart.x && e
            ? ((r =
                'touchend' === e.type ? e.changedTouches[0].pageX : e.pageX),
              (o = 'touchend' === e.type ? e.changedTouches[0].pageY : e.pageY))
            : ((r = a.touchesStart.x), (o = a.touchesStart.y)),
          (n.scale = s.$imageWrapEl.attr('data-swiper-zoom') || i.maxRatio),
          (n.currentScale =
            s.$imageWrapEl.attr('data-swiper-zoom') || i.maxRatio),
          e
            ? ((T = s.$slideEl[0].offsetWidth),
              (C = s.$slideEl[0].offsetHeight),
              (l = s.$slideEl.offset().left),
              (d = s.$slideEl.offset().top),
              (c = l + T / 2 - r),
              (u = d + C / 2 - o),
              (f = s.$imageEl[0].offsetWidth),
              (m = s.$imageEl[0].offsetHeight),
              (g = f * n.scale),
              (v = m * n.scale),
              (y = Math.min(T / 2 - g / 2, 0)),
              (b = Math.min(C / 2 - v / 2, 0)),
              (w = -y),
              (x = -b),
              (p = c * n.scale),
              (h = u * n.scale),
              p < y && (p = y),
              p > w && (p = w),
              h < b && (h = b),
              h > x && (h = x))
            : ((p = 0), (h = 0)),
          s.$imageWrapEl
            .transition(300)
            .transform(`translate3d(${p}px, ${h}px,0)`),
          s.$imageEl
            .transition(300)
            .transform(`translate3d(0,0,0) scale(${n.scale})`);
      },
      out() {
        const e = this,
          t = e.zoom,
          n = e.params.zoom,
          { gesture: i } = t;
        i.$slideEl ||
          (e.params.virtual && e.params.virtual.enabled && e.virtual
            ? (i.$slideEl = e.$wrapperEl.children(
                '.' + e.params.slideActiveClass
              ))
            : (i.$slideEl = e.slides.eq(e.activeIndex)),
          (i.$imageEl = i.$slideEl.find(
            'img, svg, canvas, picture, .swiper-zoom-target'
          )),
          (i.$imageWrapEl = i.$imageEl.parent('.' + n.containerClass))),
          i.$imageEl &&
            0 !== i.$imageEl.length &&
            ((t.scale = 1),
            (t.currentScale = 1),
            i.$imageWrapEl.transition(300).transform('translate3d(0,0,0)'),
            i.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)'),
            i.$slideEl.removeClass('' + n.zoomedSlideClass),
            (i.$slideEl = void 0));
      },
      enable() {
        const e = this,
          t = e.zoom;
        if (t.enabled) return;
        t.enabled = !0;
        const n = !(
            'touchstart' !== e.touchEvents.start ||
            !m.passiveListener ||
            !e.params.passiveListeners
          ) && { passive: !0, capture: !1 },
          i = !m.passiveListener || { passive: !1, capture: !0 },
          s = '.' + e.params.slideClass;
        m.gestures
          ? (e.$wrapperEl.on('gesturestart', s, t.onGestureStart, n),
            e.$wrapperEl.on('gesturechange', s, t.onGestureChange, n),
            e.$wrapperEl.on('gestureend', s, t.onGestureEnd, n))
          : 'touchstart' === e.touchEvents.start &&
            (e.$wrapperEl.on(e.touchEvents.start, s, t.onGestureStart, n),
            e.$wrapperEl.on(e.touchEvents.move, s, t.onGestureChange, i),
            e.$wrapperEl.on(e.touchEvents.end, s, t.onGestureEnd, n),
            e.touchEvents.cancel &&
              e.$wrapperEl.on(e.touchEvents.cancel, s, t.onGestureEnd, n)),
          e.$wrapperEl.on(
            e.touchEvents.move,
            '.' + e.params.zoom.containerClass,
            t.onTouchMove,
            i
          );
      },
      disable() {
        const e = this,
          t = e.zoom;
        if (!t.enabled) return;
        e.zoom.enabled = !1;
        const n = !(
            'touchstart' !== e.touchEvents.start ||
            !m.passiveListener ||
            !e.params.passiveListeners
          ) && { passive: !0, capture: !1 },
          i = !m.passiveListener || { passive: !1, capture: !0 },
          s = '.' + e.params.slideClass;
        m.gestures
          ? (e.$wrapperEl.off('gesturestart', s, t.onGestureStart, n),
            e.$wrapperEl.off('gesturechange', s, t.onGestureChange, n),
            e.$wrapperEl.off('gestureend', s, t.onGestureEnd, n))
          : 'touchstart' === e.touchEvents.start &&
            (e.$wrapperEl.off(e.touchEvents.start, s, t.onGestureStart, n),
            e.$wrapperEl.off(e.touchEvents.move, s, t.onGestureChange, i),
            e.$wrapperEl.off(e.touchEvents.end, s, t.onGestureEnd, n),
            e.touchEvents.cancel &&
              e.$wrapperEl.off(e.touchEvents.cancel, s, t.onGestureEnd, n)),
          e.$wrapperEl.off(
            e.touchEvents.move,
            '.' + e.params.zoom.containerClass,
            t.onTouchMove,
            i
          );
      },
    };
    const ee = {
      loadInSlide(e, t = !0) {
        const n = this,
          i = n.params.lazy;
        if (void 0 === e) return;
        if (0 === n.slides.length) return;
        const s =
          n.virtual && n.params.virtual.enabled
            ? n.$wrapperEl.children(
                `.${n.params.slideClass}[data-swiper-slide-index="${e}"]`
              )
            : n.slides.eq(e);
        let a = s.find(
          `.${i.elementClass}:not(.${i.loadedClass}):not(.${i.loadingClass})`
        );
        !s.hasClass(i.elementClass) ||
          s.hasClass(i.loadedClass) ||
          s.hasClass(i.loadingClass) ||
          (a = a.add(s[0])),
          0 !== a.length &&
            a.each((e, a) => {
              const r = u(a);
              r.addClass(i.loadingClass);
              const o = r.attr('data-background'),
                l = r.attr('data-src'),
                d = r.attr('data-srcset'),
                c = r.attr('data-sizes'),
                p = r.parent('picture');
              n.loadImage(r[0], l || o, d, c, !1, () => {
                if (null != n && n && (!n || n.params) && !n.destroyed) {
                  if (
                    (o
                      ? (r.css('background-image', `url("${o}")`),
                        r.removeAttr('data-background'))
                      : (d &&
                          (r.attr('srcset', d), r.removeAttr('data-srcset')),
                        c && (r.attr('sizes', c), r.removeAttr('data-sizes')),
                        p.length &&
                          p.children('source').each((e, t) => {
                            const n = u(t);
                            n.attr('data-srcset') &&
                              (n.attr('srcset', n.attr('data-srcset')),
                              n.removeAttr('data-srcset'));
                          }),
                        l && (r.attr('src', l), r.removeAttr('data-src'))),
                    r.addClass(i.loadedClass).removeClass(i.loadingClass),
                    s.find('.' + i.preloaderClass).remove(),
                    n.params.loop && t)
                  ) {
                    const e = s.attr('data-swiper-slide-index');
                    if (s.hasClass(n.params.slideDuplicateClass)) {
                      const t = n.$wrapperEl.children(
                        `[data-swiper-slide-index="${e}"]:not(.${n.params.slideDuplicateClass})`
                      );
                      n.lazy.loadInSlide(t.index(), !1);
                    } else {
                      const t = n.$wrapperEl.children(
                        `.${n.params.slideDuplicateClass}[data-swiper-slide-index="${e}"]`
                      );
                      n.lazy.loadInSlide(t.index(), !1);
                    }
                  }
                  n.emit('lazyImageReady', s[0], r[0]),
                    n.params.autoHeight && n.updateAutoHeight();
                }
              }),
                n.emit('lazyImageLoad', s[0], r[0]);
            });
      },
      load() {
        const e = this,
          { $wrapperEl: t, params: n, slides: i, activeIndex: s } = e,
          a = e.virtual && n.virtual.enabled,
          r = n.lazy;
        let o = n.slidesPerView;
        function l(e) {
          if (a) {
            if (
              t.children(`.${n.slideClass}[data-swiper-slide-index="${e}"]`)
                .length
            )
              return !0;
          } else if (i[e]) return !0;
          return !1;
        }
        function d(e) {
          return a ? u(e).attr('data-swiper-slide-index') : u(e).index();
        }
        if (
          ('auto' === o && (o = 0),
          e.lazy.initialImageLoaded || (e.lazy.initialImageLoaded = !0),
          e.params.watchSlidesVisibility)
        )
          t.children('.' + n.slideVisibleClass).each((t, n) => {
            const i = a ? u(n).attr('data-swiper-slide-index') : u(n).index();
            e.lazy.loadInSlide(i);
          });
        else if (o > 1)
          for (let t = s; t < s + o; t += 1) l(t) && e.lazy.loadInSlide(t);
        else e.lazy.loadInSlide(s);
        if (r.loadPrevNext)
          if (o > 1 || (r.loadPrevNextAmount && r.loadPrevNextAmount > 1)) {
            const t = r.loadPrevNextAmount,
              n = o,
              a = Math.min(s + n + Math.max(t, n), i.length),
              d = Math.max(s - Math.max(n, t), 0);
            for (let t = s + o; t < a; t += 1) l(t) && e.lazy.loadInSlide(t);
            for (let t = d; t < s; t += 1) l(t) && e.lazy.loadInSlide(t);
          } else {
            const i = t.children('.' + n.slideNextClass);
            i.length > 0 && e.lazy.loadInSlide(d(i));
            const s = t.children('.' + n.slidePrevClass);
            s.length > 0 && e.lazy.loadInSlide(d(s));
          }
      },
    };
    const te = {
      LinearSpline: function (e, t) {
        const n = (function () {
          let e, t, n;
          return (i, s) => {
            for (t = -1, e = i.length; e - t > 1; )
              (n = (e + t) >> 1), i[n] <= s ? (t = n) : (e = n);
            return e;
          };
        })();
        let i, s;
        return (
          (this.x = e),
          (this.y = t),
          (this.lastIndex = e.length - 1),
          (this.interpolate = function (e) {
            return e
              ? ((s = n(this.x, e)),
                (i = s - 1),
                ((e - this.x[i]) * (this.y[s] - this.y[i])) /
                  (this.x[s] - this.x[i]) +
                  this.y[i])
              : 0;
          }),
          this
        );
      },
      getInterpolateFunction(e) {
        const t = this;
        t.controller.spline ||
          (t.controller.spline = t.params.loop
            ? new te.LinearSpline(t.slidesGrid, e.slidesGrid)
            : new te.LinearSpline(t.snapGrid, e.snapGrid));
      },
      setTranslate(e, t) {
        const n = this,
          i = n.controller.control;
        let s, a;
        function r(e) {
          const t = n.rtlTranslate ? -n.translate : n.translate;
          'slide' === n.params.controller.by &&
            (n.controller.getInterpolateFunction(e),
            (a = -n.controller.spline.interpolate(-t))),
            (a && 'container' !== n.params.controller.by) ||
              ((s =
                (e.maxTranslate() - e.minTranslate()) /
                (n.maxTranslate() - n.minTranslate())),
              (a = (t - n.minTranslate()) * s + e.minTranslate())),
            n.params.controller.inverse && (a = e.maxTranslate() - a),
            e.updateProgress(a),
            e.setTranslate(a, n),
            e.updateActiveIndex(),
            e.updateSlidesClasses();
        }
        if (Array.isArray(i))
          for (let e = 0; e < i.length; e += 1)
            i[e] !== t && i[e] instanceof O && r(i[e]);
        else i instanceof O && t !== i && r(i);
      },
      setTransition(e, t) {
        const n = this,
          i = n.controller.control;
        let s;
        function a(t) {
          t.setTransition(e, n),
            0 !== e &&
              (t.transitionStart(),
              t.params.autoHeight &&
                f.nextTick(() => {
                  t.updateAutoHeight();
                }),
              t.$wrapperEl.transitionEnd(() => {
                i &&
                  (t.params.loop &&
                    'slide' === n.params.controller.by &&
                    t.loopFix(),
                  t.transitionEnd());
              }));
        }
        if (Array.isArray(i))
          for (s = 0; s < i.length; s += 1)
            i[s] !== t && i[s] instanceof O && a(i[s]);
        else i instanceof O && t !== i && a(i);
      },
    };
    const ne = {
      makeElFocusable: (e) => (e.attr('tabIndex', '0'), e),
      makeElNotFocusable: (e) => (e.attr('tabIndex', '-1'), e),
      addElRole: (e, t) => (e.attr('role', t), e),
      addElLabel: (e, t) => (e.attr('aria-label', t), e),
      disableEl: (e) => (e.attr('aria-disabled', !0), e),
      enableEl: (e) => (e.attr('aria-disabled', !1), e),
      onEnterKey(e) {
        const t = this,
          n = t.params.a11y;
        if (13 !== e.keyCode) return;
        const i = u(e.target);
        t.navigation &&
          t.navigation.$nextEl &&
          i.is(t.navigation.$nextEl) &&
          ((t.isEnd && !t.params.loop) || t.slideNext(),
          t.isEnd
            ? t.a11y.notify(n.lastSlideMessage)
            : t.a11y.notify(n.nextSlideMessage)),
          t.navigation &&
            t.navigation.$prevEl &&
            i.is(t.navigation.$prevEl) &&
            ((t.isBeginning && !t.params.loop) || t.slidePrev(),
            t.isBeginning
              ? t.a11y.notify(n.firstSlideMessage)
              : t.a11y.notify(n.prevSlideMessage)),
          t.pagination &&
            i.is('.' + t.params.pagination.bulletClass) &&
            i[0].click();
      },
      notify(e) {
        const t = this.a11y.liveRegion;
        0 !== t.length && (t.html(''), t.html(e));
      },
      updateNavigation() {
        const e = this;
        if (e.params.loop || !e.navigation) return;
        const { $nextEl: t, $prevEl: n } = e.navigation;
        n &&
          n.length > 0 &&
          (e.isBeginning
            ? (e.a11y.disableEl(n), e.a11y.makeElNotFocusable(n))
            : (e.a11y.enableEl(n), e.a11y.makeElFocusable(n))),
          t &&
            t.length > 0 &&
            (e.isEnd
              ? (e.a11y.disableEl(t), e.a11y.makeElNotFocusable(t))
              : (e.a11y.enableEl(t), e.a11y.makeElFocusable(t)));
      },
      updatePagination() {
        const e = this,
          t = e.params.a11y;
        e.pagination &&
          e.params.pagination.clickable &&
          e.pagination.bullets &&
          e.pagination.bullets.length &&
          e.pagination.bullets.each((n, i) => {
            const s = u(i);
            e.a11y.makeElFocusable(s),
              e.a11y.addElRole(s, 'button'),
              e.a11y.addElLabel(
                s,
                t.paginationBulletMessage.replace(
                  /\{\{index\}\}/,
                  s.index() + 1
                )
              );
          });
      },
      init() {
        const e = this;
        e.$el.append(e.a11y.liveRegion);
        const t = e.params.a11y;
        let n, i;
        e.navigation && e.navigation.$nextEl && (n = e.navigation.$nextEl),
          e.navigation && e.navigation.$prevEl && (i = e.navigation.$prevEl),
          n &&
            (e.a11y.makeElFocusable(n),
            e.a11y.addElRole(n, 'button'),
            e.a11y.addElLabel(n, t.nextSlideMessage),
            n.on('keydown', e.a11y.onEnterKey)),
          i &&
            (e.a11y.makeElFocusable(i),
            e.a11y.addElRole(i, 'button'),
            e.a11y.addElLabel(i, t.prevSlideMessage),
            i.on('keydown', e.a11y.onEnterKey)),
          e.pagination &&
            e.params.pagination.clickable &&
            e.pagination.bullets &&
            e.pagination.bullets.length &&
            e.pagination.$el.on(
              'keydown',
              '.' + e.params.pagination.bulletClass,
              e.a11y.onEnterKey
            );
      },
      destroy() {
        const e = this;
        let t, n;
        e.a11y.liveRegion &&
          e.a11y.liveRegion.length > 0 &&
          e.a11y.liveRegion.remove(),
          e.navigation && e.navigation.$nextEl && (t = e.navigation.$nextEl),
          e.navigation && e.navigation.$prevEl && (n = e.navigation.$prevEl),
          t && t.off('keydown', e.a11y.onEnterKey),
          n && n.off('keydown', e.a11y.onEnterKey),
          e.pagination &&
            e.params.pagination.clickable &&
            e.pagination.bullets &&
            e.pagination.bullets.length &&
            e.pagination.$el.off(
              'keydown',
              '.' + e.params.pagination.bulletClass,
              e.a11y.onEnterKey
            );
      },
    };
    const ie = {
      init() {
        const e = this;
        if (!e.params.history) return;
        if (!d.history || !d.history.pushState)
          return (
            (e.params.history.enabled = !1),
            void (e.params.hashNavigation.enabled = !0)
          );
        const t = e.history;
        (t.initialized = !0),
          (t.paths = ie.getPathValues()),
          (t.paths.key || t.paths.value) &&
            (t.scrollToSlide(0, t.paths.value, e.params.runCallbacksOnInit),
            e.params.history.replaceState ||
              d.addEventListener('popstate', e.history.setHistoryPopState));
      },
      destroy() {
        const e = this;
        e.params.history.replaceState ||
          d.removeEventListener('popstate', e.history.setHistoryPopState);
      },
      setHistoryPopState() {
        (this.history.paths = ie.getPathValues()),
          this.history.scrollToSlide(
            this.params.speed,
            this.history.paths.value,
            !1
          );
      },
      getPathValues() {
        const e = d.location.pathname
            .slice(1)
            .split('/')
            .filter((e) => '' !== e),
          t = e.length;
        return { key: e[t - 2], value: e[t - 1] };
      },
      setHistory(e, t) {
        if (!this.history.initialized || !this.params.history.enabled) return;
        const n = this.slides.eq(t);
        let i = ie.slugify(n.attr('data-history'));
        d.location.pathname.includes(e) || (i = `${e}/${i}`);
        const s = d.history.state;
        (s && s.value === i) ||
          (this.params.history.replaceState
            ? d.history.replaceState({ value: i }, null, i)
            : d.history.pushState({ value: i }, null, i));
      },
      slugify: (e) =>
        e
          .toString()
          .replace(/\s+/g, '-')
          .replace(/[^\w-]+/g, '')
          .replace(/--+/g, '-')
          .replace(/^-+/, '')
          .replace(/-+$/, ''),
      scrollToSlide(e, t, n) {
        const i = this;
        if (t)
          for (let s = 0, a = i.slides.length; s < a; s += 1) {
            const a = i.slides.eq(s);
            if (
              ie.slugify(a.attr('data-history')) === t &&
              !a.hasClass(i.params.slideDuplicateClass)
            ) {
              const t = a.index();
              i.slideTo(t, e, n);
            }
          }
        else i.slideTo(0, e, n);
      },
    };
    const se = {
      onHashCange() {
        const e = this;
        e.emit('hashChange');
        const t = o.location.hash.replace('#', '');
        if (t !== e.slides.eq(e.activeIndex).attr('data-hash')) {
          const n = e.$wrapperEl
            .children(`.${e.params.slideClass}[data-hash="${t}"]`)
            .index();
          if (void 0 === n) return;
          e.slideTo(n);
        }
      },
      setHash() {
        const e = this;
        if (e.hashNavigation.initialized && e.params.hashNavigation.enabled)
          if (
            e.params.hashNavigation.replaceState &&
            d.history &&
            d.history.replaceState
          )
            d.history.replaceState(
              null,
              null,
              '#' + e.slides.eq(e.activeIndex).attr('data-hash') || ''
            ),
              e.emit('hashSet');
          else {
            const t = e.slides.eq(e.activeIndex),
              n = t.attr('data-hash') || t.attr('data-history');
            (o.location.hash = n || ''), e.emit('hashSet');
          }
      },
      init() {
        const e = this;
        if (
          !e.params.hashNavigation.enabled ||
          (e.params.history && e.params.history.enabled)
        )
          return;
        e.hashNavigation.initialized = !0;
        const t = o.location.hash.replace('#', '');
        if (t) {
          const n = 0;
          for (let i = 0, s = e.slides.length; i < s; i += 1) {
            const s = e.slides.eq(i);
            if (
              (s.attr('data-hash') || s.attr('data-history')) === t &&
              !s.hasClass(e.params.slideDuplicateClass)
            ) {
              const t = s.index();
              e.slideTo(t, n, e.params.runCallbacksOnInit, !0);
            }
          }
        }
        e.params.hashNavigation.watchState &&
          u(d).on('hashchange', e.hashNavigation.onHashCange);
      },
      destroy() {
        const e = this;
        e.params.hashNavigation.watchState &&
          u(d).off('hashchange', e.hashNavigation.onHashCange);
      },
    };
    const ae = {
      run() {
        const e = this,
          t = e.slides.eq(e.activeIndex);
        let n = e.params.autoplay.delay;
        t.attr('data-swiper-autoplay') &&
          (n = t.attr('data-swiper-autoplay') || e.params.autoplay.delay),
          clearTimeout(e.autoplay.timeout),
          (e.autoplay.timeout = f.nextTick(() => {
            e.params.autoplay.reverseDirection
              ? e.params.loop
                ? (e.loopFix(),
                  e.slidePrev(e.params.speed, !0, !0),
                  e.emit('autoplay'))
                : e.isBeginning
                ? e.params.autoplay.stopOnLastSlide
                  ? e.autoplay.stop()
                  : (e.slideTo(e.slides.length - 1, e.params.speed, !0, !0),
                    e.emit('autoplay'))
                : (e.slidePrev(e.params.speed, !0, !0), e.emit('autoplay'))
              : e.params.loop
              ? (e.loopFix(),
                e.slideNext(e.params.speed, !0, !0),
                e.emit('autoplay'))
              : e.isEnd
              ? e.params.autoplay.stopOnLastSlide
                ? e.autoplay.stop()
                : (e.slideTo(0, e.params.speed, !0, !0), e.emit('autoplay'))
              : (e.slideNext(e.params.speed, !0, !0), e.emit('autoplay')),
              e.params.cssMode && e.autoplay.running && e.autoplay.run();
          }, n));
      },
      start() {
        return (
          void 0 === this.autoplay.timeout &&
          !this.autoplay.running &&
          ((this.autoplay.running = !0),
          this.emit('autoplayStart'),
          this.autoplay.run(),
          !0)
        );
      },
      stop() {
        const e = this;
        return (
          !!e.autoplay.running &&
          void 0 !== e.autoplay.timeout &&
          (e.autoplay.timeout &&
            (clearTimeout(e.autoplay.timeout), (e.autoplay.timeout = void 0)),
          (e.autoplay.running = !1),
          e.emit('autoplayStop'),
          !0)
        );
      },
      pause(e) {
        const t = this;
        t.autoplay.running &&
          (t.autoplay.paused ||
            (t.autoplay.timeout && clearTimeout(t.autoplay.timeout),
            (t.autoplay.paused = !0),
            0 !== e && t.params.autoplay.waitForTransition
              ? (t.$wrapperEl[0].addEventListener(
                  'transitionend',
                  t.autoplay.onTransitionEnd
                ),
                t.$wrapperEl[0].addEventListener(
                  'webkitTransitionEnd',
                  t.autoplay.onTransitionEnd
                ))
              : ((t.autoplay.paused = !1), t.autoplay.run())));
      },
    };
    const re = {
      setTranslate() {
        const e = this,
          { slides: t } = e;
        for (let n = 0; n < t.length; n += 1) {
          const t = e.slides.eq(n);
          let i = -t[0].swiperSlideOffset;
          e.params.virtualTranslate || (i -= e.translate);
          let s = 0;
          e.isHorizontal() || ((s = i), (i = 0));
          const a = e.params.fadeEffect.crossFade
            ? Math.max(1 - Math.abs(t[0].progress), 0)
            : 1 + Math.min(Math.max(t[0].progress, -1), 0);
          t.css({ opacity: a }).transform(`translate3d(${i}px, ${s}px, 0px)`);
        }
      },
      setTransition(e) {
        const t = this,
          { slides: n, $wrapperEl: i } = t;
        if ((n.transition(e), t.params.virtualTranslate && 0 !== e)) {
          let e = !1;
          n.transitionEnd(() => {
            if (e) return;
            if (!t || t.destroyed) return;
            (e = !0), (t.animating = !1);
            const n = ['webkitTransitionEnd', 'transitionend'];
            for (let e = 0; e < n.length; e += 1) i.trigger(n[e]);
          });
        }
      },
    };
    const oe = {
      setTranslate() {
        const {
            $el: e,
            $wrapperEl: t,
            slides: n,
            width: i,
            height: s,
            rtlTranslate: a,
            size: r,
          } = this,
          o = this.params.cubeEffect,
          l = this.isHorizontal(),
          d = this.virtual && this.params.virtual.enabled;
        let c,
          p = 0;
        o.shadow &&
          (l
            ? ((c = t.find('.swiper-cube-shadow')),
              0 === c.length &&
                ((c = u('<div class="swiper-cube-shadow"></div>')),
                t.append(c)),
              c.css({ height: i + 'px' }))
            : ((c = e.find('.swiper-cube-shadow')),
              0 === c.length &&
                ((c = u('<div class="swiper-cube-shadow"></div>')),
                e.append(c))));
        for (let e = 0; e < n.length; e += 1) {
          const t = n.eq(e);
          let i = e;
          d && (i = parseInt(t.attr('data-swiper-slide-index'), 10));
          let s = 90 * i,
            c = Math.floor(s / 360);
          a && ((s = -s), (c = Math.floor(-s / 360)));
          const h = Math.max(Math.min(t[0].progress, 1), -1);
          let f = 0,
            m = 0,
            g = 0;
          i % 4 == 0
            ? ((f = 4 * -c * r), (g = 0))
            : (i - 1) % 4 == 0
            ? ((f = 0), (g = 4 * -c * r))
            : (i - 2) % 4 == 0
            ? ((f = r + 4 * c * r), (g = r))
            : (i - 3) % 4 == 0 && ((f = -r), (g = 3 * r + 4 * r * c)),
            a && (f = -f),
            l || ((m = f), (f = 0));
          const v = `rotateX(${l ? 0 : -s}deg) rotateY(${
            l ? s : 0
          }deg) translate3d(${f}px, ${m}px, ${g}px)`;
          if (
            (h <= 1 &&
              h > -1 &&
              ((p = 90 * i + 90 * h), a && (p = 90 * -i - 90 * h)),
            t.transform(v),
            o.slideShadows)
          ) {
            let e = l
                ? t.find('.swiper-slide-shadow-left')
                : t.find('.swiper-slide-shadow-top'),
              n = l
                ? t.find('.swiper-slide-shadow-right')
                : t.find('.swiper-slide-shadow-bottom');
            0 === e.length &&
              ((e = u(
                `<div class="swiper-slide-shadow-${l ? 'left' : 'top'}"></div>`
              )),
              t.append(e)),
              0 === n.length &&
                ((n = u(
                  `<div class="swiper-slide-shadow-${
                    l ? 'right' : 'bottom'
                  }"></div>`
                )),
                t.append(n)),
              e.length && (e[0].style.opacity = Math.max(-h, 0)),
              n.length && (n[0].style.opacity = Math.max(h, 0));
          }
        }
        if (
          (t.css({
            webkitTransformOrigin: `50% 50% -${r / 2}px`,
            mozTransformOrigin: `50% 50% -${r / 2}px`,
            msTransformOrigin: `50% 50% -${r / 2}px`,
            transformOrigin: `50% 50% -${r / 2}px`,
          }),
          o.shadow)
        )
          if (l)
            c.transform(
              `translate3d(0px, ${i / 2 + o.shadowOffset}px, ${
                -i / 2
              }px) rotateX(90deg) rotateZ(0deg) scale(${o.shadowScale})`
            );
          else {
            const e = Math.abs(p) - 90 * Math.floor(Math.abs(p) / 90),
              t =
                1.5 -
                (Math.sin((2 * e * Math.PI) / 360) / 2 +
                  Math.cos((2 * e * Math.PI) / 360) / 2),
              n = o.shadowScale,
              i = o.shadowScale / t,
              a = o.shadowOffset;
            c.transform(
              `scale3d(${n}, 1, ${i}) translate3d(0px, ${s / 2 + a}px, ${
                -s / 2 / i
              }px) rotateX(-90deg)`
            );
          }
        const h = q.isSafari || q.isUiWebView ? -r / 2 : 0;
        t.transform(
          `translate3d(0px,0,${h}px) rotateX(${
            this.isHorizontal() ? 0 : p
          }deg) rotateY(${this.isHorizontal() ? -p : 0}deg)`
        );
      },
      setTransition(e) {
        const { $el: t, slides: n } = this;
        n
          .transition(e)
          .find(
            '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
          )
          .transition(e),
          this.params.cubeEffect.shadow &&
            !this.isHorizontal() &&
            t.find('.swiper-cube-shadow').transition(e);
      },
    };
    const le = {
      setTranslate() {
        const e = this,
          { slides: t, rtlTranslate: n } = e;
        for (let i = 0; i < t.length; i += 1) {
          const s = t.eq(i);
          let a = s[0].progress;
          e.params.flipEffect.limitRotation &&
            (a = Math.max(Math.min(s[0].progress, 1), -1));
          let r = -180 * a,
            o = 0,
            l = -s[0].swiperSlideOffset,
            d = 0;
          if (
            (e.isHorizontal()
              ? n && (r = -r)
              : ((d = l), (l = 0), (o = -r), (r = 0)),
            (s[0].style.zIndex = -Math.abs(Math.round(a)) + t.length),
            e.params.flipEffect.slideShadows)
          ) {
            let t = e.isHorizontal()
                ? s.find('.swiper-slide-shadow-left')
                : s.find('.swiper-slide-shadow-top'),
              n = e.isHorizontal()
                ? s.find('.swiper-slide-shadow-right')
                : s.find('.swiper-slide-shadow-bottom');
            0 === t.length &&
              ((t = u(
                `<div class="swiper-slide-shadow-${
                  e.isHorizontal() ? 'left' : 'top'
                }"></div>`
              )),
              s.append(t)),
              0 === n.length &&
                ((n = u(
                  `<div class="swiper-slide-shadow-${
                    e.isHorizontal() ? 'right' : 'bottom'
                  }"></div>`
                )),
                s.append(n)),
              t.length && (t[0].style.opacity = Math.max(-a, 0)),
              n.length && (n[0].style.opacity = Math.max(a, 0));
          }
          s.transform(
            `translate3d(${l}px, ${d}px, 0px) rotateX(${o}deg) rotateY(${r}deg)`
          );
        }
      },
      setTransition(e) {
        const t = this,
          { slides: n, activeIndex: i, $wrapperEl: s } = t;
        if (
          (n
            .transition(e)
            .find(
              '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
            )
            .transition(e),
          t.params.virtualTranslate && 0 !== e)
        ) {
          let e = !1;
          n.eq(i).transitionEnd(function () {
            if (e) return;
            if (!t || t.destroyed) return;
            (e = !0), (t.animating = !1);
            const n = ['webkitTransitionEnd', 'transitionend'];
            for (let e = 0; e < n.length; e += 1) s.trigger(n[e]);
          });
        }
      },
    };
    const de = {
      setTranslate() {
        const {
            width: e,
            height: t,
            slides: n,
            $wrapperEl: i,
            slidesSizesGrid: s,
          } = this,
          a = this.params.coverflowEffect,
          r = this.isHorizontal(),
          o = this.translate,
          l = r ? e / 2 - o : t / 2 - o,
          d = r ? a.rotate : -a.rotate,
          c = a.depth;
        for (let e = 0, t = n.length; e < t; e += 1) {
          const t = n.eq(e),
            i = s[e],
            o = ((l - t[0].swiperSlideOffset - i / 2) / i) * a.modifier;
          let p = r ? d * o : 0,
            h = r ? 0 : d * o,
            f = -c * Math.abs(o),
            m = a.stretch;
          'string' == typeof m &&
            -1 !== m.indexOf('%') &&
            (m = (parseFloat(a.stretch) / 100) * i);
          let g = r ? 0 : m * o,
            v = r ? m * o : 0;
          Math.abs(v) < 0.001 && (v = 0),
            Math.abs(g) < 0.001 && (g = 0),
            Math.abs(f) < 0.001 && (f = 0),
            Math.abs(p) < 0.001 && (p = 0),
            Math.abs(h) < 0.001 && (h = 0);
          const y = `translate3d(${v}px,${g}px,${f}px)  rotateX(${h}deg) rotateY(${p}deg)`;
          if (
            (t.transform(y),
            (t[0].style.zIndex = 1 - Math.abs(Math.round(o))),
            a.slideShadows)
          ) {
            let e = r
                ? t.find('.swiper-slide-shadow-left')
                : t.find('.swiper-slide-shadow-top'),
              n = r
                ? t.find('.swiper-slide-shadow-right')
                : t.find('.swiper-slide-shadow-bottom');
            0 === e.length &&
              ((e = u(
                `<div class="swiper-slide-shadow-${r ? 'left' : 'top'}"></div>`
              )),
              t.append(e)),
              0 === n.length &&
                ((n = u(
                  `<div class="swiper-slide-shadow-${
                    r ? 'right' : 'bottom'
                  }"></div>`
                )),
                t.append(n)),
              e.length && (e[0].style.opacity = o > 0 ? o : 0),
              n.length && (n[0].style.opacity = -o > 0 ? -o : 0);
          }
        }
        if (m.pointerEvents || m.prefixedPointerEvents) {
          i[0].style.perspectiveOrigin = l + 'px 50%';
        }
      },
      setTransition(e) {
        this.slides
          .transition(e)
          .find(
            '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
          )
          .transition(e);
      },
    };
    const ce = {
      init() {
        const e = this,
          { thumbs: t } = e.params,
          n = e.constructor;
        t.swiper instanceof n
          ? ((e.thumbs.swiper = t.swiper),
            f.extend(e.thumbs.swiper.originalParams, {
              watchSlidesProgress: !0,
              slideToClickedSlide: !1,
            }),
            f.extend(e.thumbs.swiper.params, {
              watchSlidesProgress: !0,
              slideToClickedSlide: !1,
            }))
          : f.isObject(t.swiper) &&
            ((e.thumbs.swiper = new n(
              f.extend({}, t.swiper, {
                watchSlidesVisibility: !0,
                watchSlidesProgress: !0,
                slideToClickedSlide: !1,
              })
            )),
            (e.thumbs.swiperCreated = !0)),
          e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),
          e.thumbs.swiper.on('tap', e.thumbs.onThumbClick);
      },
      onThumbClick() {
        const e = this,
          t = e.thumbs.swiper;
        if (!t) return;
        const n = t.clickedIndex,
          i = t.clickedSlide;
        if (i && u(i).hasClass(e.params.thumbs.slideThumbActiveClass)) return;
        if (null == n) return;
        let s;
        if (
          ((s = t.params.loop
            ? parseInt(u(t.clickedSlide).attr('data-swiper-slide-index'), 10)
            : n),
          e.params.loop)
        ) {
          let t = e.activeIndex;
          e.slides.eq(t).hasClass(e.params.slideDuplicateClass) &&
            (e.loopFix(),
            (e._clientLeft = e.$wrapperEl[0].clientLeft),
            (t = e.activeIndex));
          const n = e.slides
              .eq(t)
              .prevAll(`[data-swiper-slide-index="${s}"]`)
              .eq(0)
              .index(),
            i = e.slides
              .eq(t)
              .nextAll(`[data-swiper-slide-index="${s}"]`)
              .eq(0)
              .index();
          s = void 0 === n ? i : void 0 === i ? n : i - t < t - n ? i : n;
        }
        e.slideTo(s);
      },
      update(e) {
        const t = this,
          n = t.thumbs.swiper;
        if (!n) return;
        const i =
            'auto' === n.params.slidesPerView
              ? n.slidesPerViewDynamic()
              : n.params.slidesPerView,
          s = t.params.thumbs.autoScrollOffset,
          a = s && !n.params.loop;
        if (t.realIndex !== n.realIndex || a) {
          let r,
            o,
            l = n.activeIndex;
          if (n.params.loop) {
            n.slides.eq(l).hasClass(n.params.slideDuplicateClass) &&
              (n.loopFix(),
              (n._clientLeft = n.$wrapperEl[0].clientLeft),
              (l = n.activeIndex));
            const e = n.slides
                .eq(l)
                .prevAll(`[data-swiper-slide-index="${t.realIndex}"]`)
                .eq(0)
                .index(),
              i = n.slides
                .eq(l)
                .nextAll(`[data-swiper-slide-index="${t.realIndex}"]`)
                .eq(0)
                .index();
            (r =
              void 0 === e
                ? i
                : void 0 === i
                ? e
                : i - l == l - e
                ? l
                : i - l < l - e
                ? i
                : e),
              (o = t.activeIndex > t.previousIndex ? 'next' : 'prev');
          } else (r = t.realIndex), (o = r > t.previousIndex ? 'next' : 'prev');
          a && (r += 'next' === o ? s : -1 * s),
            n.visibleSlidesIndexes &&
              n.visibleSlidesIndexes.indexOf(r) < 0 &&
              (n.params.centeredSlides
                ? (r =
                    r > l
                      ? r - Math.floor(i / 2) + 1
                      : r + Math.floor(i / 2) - 1)
                : r > l && (r = r - i + 1),
              n.slideTo(r, e ? 0 : void 0));
        }
        let r = 1;
        const o = t.params.thumbs.slideThumbActiveClass;
        if (
          (t.params.slidesPerView > 1 &&
            !t.params.centeredSlides &&
            (r = t.params.slidesPerView),
          t.params.thumbs.multipleActiveThumbs || (r = 1),
          (r = Math.floor(r)),
          n.slides.removeClass(o),
          n.params.loop || (n.params.virtual && n.params.virtual.enabled))
        )
          for (let e = 0; e < r; e += 1)
            n.$wrapperEl
              .children(`[data-swiper-slide-index="${t.realIndex + e}"]`)
              .addClass(o);
        else
          for (let e = 0; e < r; e += 1)
            n.slides.eq(t.realIndex + e).addClass(o);
      },
    };
    const ue = [
      H,
      j,
      B,
      R,
      G,
      V,
      Y,
      {
        name: 'mousewheel',
        params: {
          mousewheel: {
            enabled: !1,
            releaseOnEdges: !1,
            invert: !1,
            forceToAxis: !1,
            sensitivity: 1,
            eventsTarged: 'container',
          },
        },
        create() {
          f.extend(this, {
            mousewheel: {
              enabled: !1,
              enable: _.enable.bind(this),
              disable: _.disable.bind(this),
              handle: _.handle.bind(this),
              handleMouseEnter: _.handleMouseEnter.bind(this),
              handleMouseLeave: _.handleMouseLeave.bind(this),
              animateSlider: _.animateSlider.bind(this),
              releaseScroll: _.releaseScroll.bind(this),
              lastScrollTime: f.now(),
              lastEventBeforeSnap: void 0,
              recentWheelEvents: [],
            },
          });
        },
        on: {
          init() {
            const e = this;
            !e.params.mousewheel.enabled &&
              e.params.cssMode &&
              e.mousewheel.disable(),
              e.params.mousewheel.enabled && e.mousewheel.enable();
          },
          destroy() {
            const e = this;
            e.params.cssMode && e.mousewheel.enable(),
              e.mousewheel.enabled && e.mousewheel.disable();
          },
        },
      },
      {
        name: 'navigation',
        params: {
          navigation: {
            nextEl: null,
            prevEl: null,
            hideOnClick: !1,
            disabledClass: 'swiper-button-disabled',
            hiddenClass: 'swiper-button-hidden',
            lockClass: 'swiper-button-lock',
          },
        },
        create() {
          f.extend(this, {
            navigation: {
              init: U.init.bind(this),
              update: U.update.bind(this),
              destroy: U.destroy.bind(this),
              onNextClick: U.onNextClick.bind(this),
              onPrevClick: U.onPrevClick.bind(this),
            },
          });
        },
        on: {
          init() {
            this.navigation.init(), this.navigation.update();
          },
          toEdge() {
            this.navigation.update();
          },
          fromEdge() {
            this.navigation.update();
          },
          destroy() {
            this.navigation.destroy();
          },
          click(e) {
            const t = this,
              { $nextEl: n, $prevEl: i } = t.navigation;
            if (
              t.params.navigation.hideOnClick &&
              !u(e.target).is(i) &&
              !u(e.target).is(n)
            ) {
              let e;
              n
                ? (e = n.hasClass(t.params.navigation.hiddenClass))
                : i && (e = i.hasClass(t.params.navigation.hiddenClass)),
                !0 === e
                  ? t.emit('navigationShow', t)
                  : t.emit('navigationHide', t),
                n && n.toggleClass(t.params.navigation.hiddenClass),
                i && i.toggleClass(t.params.navigation.hiddenClass);
            }
          },
        },
      },
      {
        name: 'pagination',
        params: {
          pagination: {
            el: null,
            bulletElement: 'span',
            clickable: !1,
            hideOnClick: !1,
            renderBullet: null,
            renderProgressbar: null,
            renderFraction: null,
            renderCustom: null,
            progressbarOpposite: !1,
            type: 'bullets',
            dynamicBullets: !1,
            dynamicMainBullets: 1,
            formatFractionCurrent: (e) => e,
            formatFractionTotal: (e) => e,
            bulletClass: 'swiper-pagination-bullet',
            bulletActiveClass: 'swiper-pagination-bullet-active',
            modifierClass: 'swiper-pagination-',
            currentClass: 'swiper-pagination-current',
            totalClass: 'swiper-pagination-total',
            hiddenClass: 'swiper-pagination-hidden',
            progressbarFillClass: 'swiper-pagination-progressbar-fill',
            progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',
            clickableClass: 'swiper-pagination-clickable',
            lockClass: 'swiper-pagination-lock',
          },
        },
        create() {
          f.extend(this, {
            pagination: {
              init: K.init.bind(this),
              render: K.render.bind(this),
              update: K.update.bind(this),
              destroy: K.destroy.bind(this),
              dynamicBulletIndex: 0,
            },
          });
        },
        on: {
          init() {
            this.pagination.init(),
              this.pagination.render(),
              this.pagination.update();
          },
          activeIndexChange() {
            const e = this;
            (e.params.loop || void 0 === e.snapIndex) && e.pagination.update();
          },
          snapIndexChange() {
            const e = this;
            e.params.loop || e.pagination.update();
          },
          slidesLengthChange() {
            const e = this;
            e.params.loop && (e.pagination.render(), e.pagination.update());
          },
          snapGridLengthChange() {
            const e = this;
            e.params.loop || (e.pagination.render(), e.pagination.update());
          },
          destroy() {
            this.pagination.destroy();
          },
          click(e) {
            const t = this;
            if (
              t.params.pagination.el &&
              t.params.pagination.hideOnClick &&
              t.pagination.$el.length > 0 &&
              !u(e.target).hasClass(t.params.pagination.bulletClass)
            ) {
              !0 === t.pagination.$el.hasClass(t.params.pagination.hiddenClass)
                ? t.emit('paginationShow', t)
                : t.emit('paginationHide', t),
                t.pagination.$el.toggleClass(t.params.pagination.hiddenClass);
            }
          },
        },
      },
      {
        name: 'scrollbar',
        params: {
          scrollbar: {
            el: null,
            dragSize: 'auto',
            hide: !1,
            draggable: !1,
            snapOnRelease: !0,
            lockClass: 'swiper-scrollbar-lock',
            dragClass: 'swiper-scrollbar-drag',
          },
        },
        create() {
          f.extend(this, {
            scrollbar: {
              init: Z.init.bind(this),
              destroy: Z.destroy.bind(this),
              updateSize: Z.updateSize.bind(this),
              setTranslate: Z.setTranslate.bind(this),
              setTransition: Z.setTransition.bind(this),
              enableDraggable: Z.enableDraggable.bind(this),
              disableDraggable: Z.disableDraggable.bind(this),
              setDragPosition: Z.setDragPosition.bind(this),
              getPointerPosition: Z.getPointerPosition.bind(this),
              onDragStart: Z.onDragStart.bind(this),
              onDragMove: Z.onDragMove.bind(this),
              onDragEnd: Z.onDragEnd.bind(this),
              isTouched: !1,
              timeout: null,
              dragTimeout: null,
            },
          });
        },
        on: {
          init() {
            this.scrollbar.init(),
              this.scrollbar.updateSize(),
              this.scrollbar.setTranslate();
          },
          update() {
            this.scrollbar.updateSize();
          },
          resize() {
            this.scrollbar.updateSize();
          },
          observerUpdate() {
            this.scrollbar.updateSize();
          },
          setTranslate() {
            this.scrollbar.setTranslate();
          },
          setTransition(e) {
            this.scrollbar.setTransition(e);
          },
          destroy() {
            this.scrollbar.destroy();
          },
        },
      },
      {
        name: 'parallax',
        params: { parallax: { enabled: !1 } },
        create() {
          f.extend(this, {
            parallax: {
              setTransform: Q.setTransform.bind(this),
              setTranslate: Q.setTranslate.bind(this),
              setTransition: Q.setTransition.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            this.params.parallax.enabled &&
              ((this.params.watchSlidesProgress = !0),
              (this.originalParams.watchSlidesProgress = !0));
          },
          init() {
            this.params.parallax.enabled && this.parallax.setTranslate();
          },
          setTranslate() {
            this.params.parallax.enabled && this.parallax.setTranslate();
          },
          setTransition(e) {
            this.params.parallax.enabled && this.parallax.setTransition(e);
          },
        },
      },
      {
        name: 'zoom',
        params: {
          zoom: {
            enabled: !1,
            maxRatio: 3,
            minRatio: 1,
            toggle: !0,
            containerClass: 'swiper-zoom-container',
            zoomedSlideClass: 'swiper-slide-zoomed',
          },
        },
        create() {
          const e = this,
            t = {
              enabled: !1,
              scale: 1,
              currentScale: 1,
              isScaling: !1,
              gesture: {
                $slideEl: void 0,
                slideWidth: void 0,
                slideHeight: void 0,
                $imageEl: void 0,
                $imageWrapEl: void 0,
                maxRatio: 3,
              },
              image: {
                isTouched: void 0,
                isMoved: void 0,
                currentX: void 0,
                currentY: void 0,
                minX: void 0,
                minY: void 0,
                maxX: void 0,
                maxY: void 0,
                width: void 0,
                height: void 0,
                startX: void 0,
                startY: void 0,
                touchesStart: {},
                touchesCurrent: {},
              },
              velocity: {
                x: void 0,
                y: void 0,
                prevPositionX: void 0,
                prevPositionY: void 0,
                prevTime: void 0,
              },
            };
          'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'
            .split(' ')
            .forEach((n) => {
              t[n] = J[n].bind(e);
            }),
            f.extend(e, { zoom: t });
          let n = 1;
          Object.defineProperty(e.zoom, 'scale', {
            get: () => n,
            set(t) {
              if (n !== t) {
                const n = e.zoom.gesture.$imageEl
                    ? e.zoom.gesture.$imageEl[0]
                    : void 0,
                  i = e.zoom.gesture.$slideEl
                    ? e.zoom.gesture.$slideEl[0]
                    : void 0;
                e.emit('zoomChange', t, n, i);
              }
              n = t;
            },
          });
        },
        on: {
          init() {
            const e = this;
            e.params.zoom.enabled && e.zoom.enable();
          },
          destroy() {
            this.zoom.disable();
          },
          touchStart(e) {
            this.zoom.enabled && this.zoom.onTouchStart(e);
          },
          touchEnd(e) {
            this.zoom.enabled && this.zoom.onTouchEnd(e);
          },
          doubleTap(e) {
            const t = this;
            t.params.zoom.enabled &&
              t.zoom.enabled &&
              t.params.zoom.toggle &&
              t.zoom.toggle(e);
          },
          transitionEnd() {
            const e = this;
            e.zoom.enabled && e.params.zoom.enabled && e.zoom.onTransitionEnd();
          },
          slideChange() {
            const e = this;
            e.zoom.enabled &&
              e.params.zoom.enabled &&
              e.params.cssMode &&
              e.zoom.onTransitionEnd();
          },
        },
      },
      {
        name: 'lazy',
        params: {
          lazy: {
            enabled: !1,
            loadPrevNext: !1,
            loadPrevNextAmount: 1,
            loadOnTransitionStart: !1,
            elementClass: 'swiper-lazy',
            loadingClass: 'swiper-lazy-loading',
            loadedClass: 'swiper-lazy-loaded',
            preloaderClass: 'swiper-lazy-preloader',
          },
        },
        create() {
          f.extend(this, {
            lazy: {
              initialImageLoaded: !1,
              load: ee.load.bind(this),
              loadInSlide: ee.loadInSlide.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            const e = this;
            e.params.lazy.enabled &&
              e.params.preloadImages &&
              (e.params.preloadImages = !1);
          },
          init() {
            const e = this;
            e.params.lazy.enabled &&
              !e.params.loop &&
              0 === e.params.initialSlide &&
              e.lazy.load();
          },
          scroll() {
            const e = this;
            e.params.freeMode && !e.params.freeModeSticky && e.lazy.load();
          },
          resize() {
            const e = this;
            e.params.lazy.enabled && e.lazy.load();
          },
          scrollbarDragMove() {
            const e = this;
            e.params.lazy.enabled && e.lazy.load();
          },
          transitionStart() {
            const e = this;
            e.params.lazy.enabled &&
              (e.params.lazy.loadOnTransitionStart ||
                (!e.params.lazy.loadOnTransitionStart &&
                  !e.lazy.initialImageLoaded)) &&
              e.lazy.load();
          },
          transitionEnd() {
            const e = this;
            e.params.lazy.enabled &&
              !e.params.lazy.loadOnTransitionStart &&
              e.lazy.load();
          },
          slideChange() {
            const e = this;
            e.params.lazy.enabled && e.params.cssMode && e.lazy.load();
          },
        },
      },
      {
        name: 'controller',
        params: { controller: { control: void 0, inverse: !1, by: 'slide' } },
        create() {
          f.extend(this, {
            controller: {
              control: this.params.controller.control,
              getInterpolateFunction: te.getInterpolateFunction.bind(this),
              setTranslate: te.setTranslate.bind(this),
              setTransition: te.setTransition.bind(this),
            },
          });
        },
        on: {
          update() {
            const e = this;
            e.controller.control &&
              e.controller.spline &&
              ((e.controller.spline = void 0), delete e.controller.spline);
          },
          resize() {
            const e = this;
            e.controller.control &&
              e.controller.spline &&
              ((e.controller.spline = void 0), delete e.controller.spline);
          },
          observerUpdate() {
            const e = this;
            e.controller.control &&
              e.controller.spline &&
              ((e.controller.spline = void 0), delete e.controller.spline);
          },
          setTranslate(e, t) {
            this.controller.control && this.controller.setTranslate(e, t);
          },
          setTransition(e, t) {
            this.controller.control && this.controller.setTransition(e, t);
          },
        },
      },
      {
        name: 'a11y',
        params: {
          a11y: {
            enabled: !0,
            notificationClass: 'swiper-notification',
            prevSlideMessage: 'Previous slide',
            nextSlideMessage: 'Next slide',
            firstSlideMessage: 'This is the first slide',
            lastSlideMessage: 'This is the last slide',
            paginationBulletMessage: 'Go to slide {{index}}',
          },
        },
        create() {
          const e = this;
          f.extend(e, {
            a11y: {
              liveRegion: u(
                `<span class="${e.params.a11y.notificationClass}" aria-live="assertive" aria-atomic="true"></span>`
              ),
            },
          }),
            Object.keys(ne).forEach((t) => {
              e.a11y[t] = ne[t].bind(e);
            });
        },
        on: {
          init() {
            this.params.a11y.enabled &&
              (this.a11y.init(), this.a11y.updateNavigation());
          },
          toEdge() {
            this.params.a11y.enabled && this.a11y.updateNavigation();
          },
          fromEdge() {
            this.params.a11y.enabled && this.a11y.updateNavigation();
          },
          paginationUpdate() {
            this.params.a11y.enabled && this.a11y.updatePagination();
          },
          destroy() {
            this.params.a11y.enabled && this.a11y.destroy();
          },
        },
      },
      {
        name: 'history',
        params: { history: { enabled: !1, replaceState: !1, key: 'slides' } },
        create() {
          f.extend(this, {
            history: {
              init: ie.init.bind(this),
              setHistory: ie.setHistory.bind(this),
              setHistoryPopState: ie.setHistoryPopState.bind(this),
              scrollToSlide: ie.scrollToSlide.bind(this),
              destroy: ie.destroy.bind(this),
            },
          });
        },
        on: {
          init() {
            const e = this;
            e.params.history.enabled && e.history.init();
          },
          destroy() {
            const e = this;
            e.params.history.enabled && e.history.destroy();
          },
          transitionEnd() {
            const e = this;
            e.history.initialized &&
              e.history.setHistory(e.params.history.key, e.activeIndex);
          },
          slideChange() {
            const e = this;
            e.history.initialized &&
              e.params.cssMode &&
              e.history.setHistory(e.params.history.key, e.activeIndex);
          },
        },
      },
      {
        name: 'hash-navigation',
        params: {
          hashNavigation: { enabled: !1, replaceState: !1, watchState: !1 },
        },
        create() {
          f.extend(this, {
            hashNavigation: {
              initialized: !1,
              init: se.init.bind(this),
              destroy: se.destroy.bind(this),
              setHash: se.setHash.bind(this),
              onHashCange: se.onHashCange.bind(this),
            },
          });
        },
        on: {
          init() {
            const e = this;
            e.params.hashNavigation.enabled && e.hashNavigation.init();
          },
          destroy() {
            const e = this;
            e.params.hashNavigation.enabled && e.hashNavigation.destroy();
          },
          transitionEnd() {
            const e = this;
            e.hashNavigation.initialized && e.hashNavigation.setHash();
          },
          slideChange() {
            const e = this;
            e.hashNavigation.initialized &&
              e.params.cssMode &&
              e.hashNavigation.setHash();
          },
        },
      },
      {
        name: 'autoplay',
        params: {
          autoplay: {
            enabled: !1,
            delay: 3e3,
            waitForTransition: !0,
            disableOnInteraction: !0,
            stopOnLastSlide: !1,
            reverseDirection: !1,
          },
        },
        create() {
          const e = this;
          f.extend(e, {
            autoplay: {
              running: !1,
              paused: !1,
              run: ae.run.bind(e),
              start: ae.start.bind(e),
              stop: ae.stop.bind(e),
              pause: ae.pause.bind(e),
              onVisibilityChange() {
                'hidden' === document.visibilityState &&
                  e.autoplay.running &&
                  e.autoplay.pause(),
                  'visible' === document.visibilityState &&
                    e.autoplay.paused &&
                    (e.autoplay.run(), (e.autoplay.paused = !1));
              },
              onTransitionEnd(t) {
                e &&
                  !e.destroyed &&
                  e.$wrapperEl &&
                  t.target === this &&
                  (e.$wrapperEl[0].removeEventListener(
                    'transitionend',
                    e.autoplay.onTransitionEnd
                  ),
                  e.$wrapperEl[0].removeEventListener(
                    'webkitTransitionEnd',
                    e.autoplay.onTransitionEnd
                  ),
                  (e.autoplay.paused = !1),
                  e.autoplay.running ? e.autoplay.run() : e.autoplay.stop());
              },
            },
          });
        },
        on: {
          init() {
            const e = this;
            e.params.autoplay.enabled &&
              (e.autoplay.start(),
              document.addEventListener(
                'visibilitychange',
                e.autoplay.onVisibilityChange
              ));
          },
          beforeTransitionStart(e, t) {
            const n = this;
            n.autoplay.running &&
              (t || !n.params.autoplay.disableOnInteraction
                ? n.autoplay.pause(e)
                : n.autoplay.stop());
          },
          sliderFirstMove() {
            const e = this;
            e.autoplay.running &&
              (e.params.autoplay.disableOnInteraction
                ? e.autoplay.stop()
                : e.autoplay.pause());
          },
          touchEnd() {
            const e = this;
            e.params.cssMode &&
              e.autoplay.paused &&
              !e.params.autoplay.disableOnInteraction &&
              e.autoplay.run();
          },
          destroy() {
            const e = this;
            e.autoplay.running && e.autoplay.stop(),
              document.removeEventListener(
                'visibilitychange',
                e.autoplay.onVisibilityChange
              );
          },
        },
      },
      {
        name: 'effect-fade',
        params: { fadeEffect: { crossFade: !1 } },
        create() {
          f.extend(this, {
            fadeEffect: {
              setTranslate: re.setTranslate.bind(this),
              setTransition: re.setTransition.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            if ('fade' !== this.params.effect) return;
            this.classNames.push(this.params.containerModifierClass + 'fade');
            const e = {
              slidesPerView: 1,
              slidesPerColumn: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: !0,
              spaceBetween: 0,
              virtualTranslate: !0,
            };
            f.extend(this.params, e), f.extend(this.originalParams, e);
          },
          setTranslate() {
            'fade' === this.params.effect && this.fadeEffect.setTranslate();
          },
          setTransition(e) {
            'fade' === this.params.effect && this.fadeEffect.setTransition(e);
          },
        },
      },
      {
        name: 'effect-cube',
        params: {
          cubeEffect: {
            slideShadows: !0,
            shadow: !0,
            shadowOffset: 20,
            shadowScale: 0.94,
          },
        },
        create() {
          f.extend(this, {
            cubeEffect: {
              setTranslate: oe.setTranslate.bind(this),
              setTransition: oe.setTransition.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            if ('cube' !== this.params.effect) return;
            this.classNames.push(this.params.containerModifierClass + 'cube'),
              this.classNames.push(this.params.containerModifierClass + '3d');
            const e = {
              slidesPerView: 1,
              slidesPerColumn: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: !0,
              resistanceRatio: 0,
              spaceBetween: 0,
              centeredSlides: !1,
              virtualTranslate: !0,
            };
            f.extend(this.params, e), f.extend(this.originalParams, e);
          },
          setTranslate() {
            'cube' === this.params.effect && this.cubeEffect.setTranslate();
          },
          setTransition(e) {
            'cube' === this.params.effect && this.cubeEffect.setTransition(e);
          },
        },
      },
      {
        name: 'effect-flip',
        params: { flipEffect: { slideShadows: !0, limitRotation: !0 } },
        create() {
          f.extend(this, {
            flipEffect: {
              setTranslate: le.setTranslate.bind(this),
              setTransition: le.setTransition.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            if ('flip' !== this.params.effect) return;
            this.classNames.push(this.params.containerModifierClass + 'flip'),
              this.classNames.push(this.params.containerModifierClass + '3d');
            const e = {
              slidesPerView: 1,
              slidesPerColumn: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: !0,
              spaceBetween: 0,
              virtualTranslate: !0,
            };
            f.extend(this.params, e), f.extend(this.originalParams, e);
          },
          setTranslate() {
            'flip' === this.params.effect && this.flipEffect.setTranslate();
          },
          setTransition(e) {
            'flip' === this.params.effect && this.flipEffect.setTransition(e);
          },
        },
      },
      {
        name: 'effect-coverflow',
        params: {
          coverflowEffect: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows: !0,
          },
        },
        create() {
          f.extend(this, {
            coverflowEffect: {
              setTranslate: de.setTranslate.bind(this),
              setTransition: de.setTransition.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            'coverflow' === this.params.effect &&
              (this.classNames.push(
                this.params.containerModifierClass + 'coverflow'
              ),
              this.classNames.push(this.params.containerModifierClass + '3d'),
              (this.params.watchSlidesProgress = !0),
              (this.originalParams.watchSlidesProgress = !0));
          },
          setTranslate() {
            'coverflow' === this.params.effect &&
              this.coverflowEffect.setTranslate();
          },
          setTransition(e) {
            'coverflow' === this.params.effect &&
              this.coverflowEffect.setTransition(e);
          },
        },
      },
      {
        name: 'thumbs',
        params: {
          thumbs: {
            swiper: null,
            multipleActiveThumbs: !0,
            autoScrollOffset: 0,
            slideThumbActiveClass: 'swiper-slide-thumb-active',
            thumbsContainerClass: 'swiper-container-thumbs',
          },
        },
        create() {
          f.extend(this, {
            thumbs: {
              swiper: null,
              init: ce.init.bind(this),
              update: ce.update.bind(this),
              onThumbClick: ce.onThumbClick.bind(this),
            },
          });
        },
        on: {
          beforeInit() {
            const { thumbs: e } = this.params;
            e && e.swiper && (this.thumbs.init(), this.thumbs.update(!0));
          },
          slideChange() {
            this.thumbs.swiper && this.thumbs.update();
          },
          update() {
            this.thumbs.swiper && this.thumbs.update();
          },
          resize() {
            this.thumbs.swiper && this.thumbs.update();
          },
          observerUpdate() {
            this.thumbs.swiper && this.thumbs.update();
          },
          setTransition(e) {
            const t = this.thumbs.swiper;
            t && t.setTransition(e);
          },
          beforeDestroy() {
            const e = this.thumbs.swiper;
            e && this.thumbs.swiperCreated && e && e.destroy();
          },
        },
      },
    ];
    void 0 === O.use &&
      ((O.use = O.Class.use), (O.installModule = O.Class.installModule)),
      O.use(ue);
    var pe,
      he = O;
    n(1);
    s()(document).ready(function () {
      window.location.pathname.split('/').length;
      var e = window.location.pathname.split('/').pop();
      ('' != e && null != e && null != e) || (e = '/'),
        s()('nav .navigation li a, .megamenu .navigation ul li a').each(
          function () {
            var t = s()(this).attr('href').split('/').pop();
            '' == t && (t = '/'), t == e && s()(this).addClass('active');
          }
        ),
        s()('.header-placeholder').height(
          s()('header.main-menu').innerHeight() + 15
        ),
        s()('[data-paths]').each(function () {
          for (
            var e = parseInt(s()(this).attr('data-paths')), t = 0;
            t < e;
            t++
          )
            s()(this).append('<span class="path' + (t + 1) + '"></span>');
        });
      var t = s()('.swiper-container.cards .swiper-slide').length,
        n = 100 / (t + 1),
        i = new he('.swiper-container.cards', {
          spaceBetween: 0,
          speed: 500,
          draggable: !1,
          loop: !0,
          pagination: { el: '.swiper-pagination.cards', clickable: !0 },
          autoplay: { delay: 5e3 },
          on: {
            init: function () {
              s()('.pagination-progress').css({ width: 1 * n + '%' });
            },
          },
        });
      if (
        (i.on('slideChangeTransitionStart', function () {
          var e = i.activeIndex;
          0 == e
            ? s()('.pagination-progress').css({ width: n * t + '%' })
            : e == t + 1
            ? s()('.pagination-progress').css({ width: 1 * n + '%' })
            : s()('.pagination-progress').css({
                width: n * i.activeIndex + '%',
              });
        }),
        s()('[data-pagination-text]').each(function (e, t) {
          s()(
            '.swiper-pagination .swiper-pagination-bullet:nth-child(' + e + ')'
          ).append(
            '<small class="pagination-text">' +
              s()(this).attr('data-pagination-text') +
              '</small>'
          );
        }),
        s()(window).width() <= 768)
      )
        new he('.swiper-container.news', {
          spaceBetween: 30,
          speed: 500,
          draggable: !1,
          loop: !0,
          pagination: { el: '.swiper-pagination.news', clickable: !0 },
        });
      s()('.vaccination-image a').on('click', function () {
        return (
          s()('html,body').animate(
            { scrollTop: s()(this.hash).offset().top },
            500
          ),
          !1
        );
      }),
        s()('.hamburger').on('click', function () {
          s()('.megamenu').addClass('show');
        }),
        s()('.megamenu .close, .menu-overlay').on('click', function () {
          s()('.megamenu').removeClass('show');
        }),
        s()('[data-video]').on('click', function () {
          var e = s()(this).attr('data-video');
          s()('#video-frame').attr('src', e + '?rel=0');
        }),
        s()('[data-modal-open]').on('click', function () {
          var e = s()(this).attr('data-modal-open');
          s()('.overlay').addClass('show'),
            s()('[data-modal-id]').removeClass('show'),
            s()('[data-modal-id="' + e + '"]').addClass('show');
        }),
        s()('.overlay, .close').on('click', function () {
          s()('.overlay').removeClass('show'),
            s()('[data-modal-id]').removeClass('show'),
            s()('#video-frame').removeAttr('src');
        }),
        s()('#file').on('change', function (e) {
          var t = e.target.files[0].name;
          s()('#file-name').text(t);
        }),
        s()('#search-submit').on('click', function () {
          var e = s()('#categoryFilter').val(),
            t = s()('#cityFilter').val();
          console.log(e, t),
            s()('.filterable .job-block').each(function () {
              var n = s()(this),
                i = n.attr('data-category').split(','),
                a = n.attr('data-city').split(','),
                r = i.indexOf(e) > -1,
                o = a.indexOf(t) > -1;
              '' == e &&
                '' == t &&
                (s()('.filterable .job-block').removeClass('hide show'),
                s()('#filter-errors').html('')),
                '' !== e &&
                  '' !== t &&
                  (r && o
                    ? (s()('.filterable .job-block')
                        .not('.show')
                        .addClass('hide'),
                      n.addClass('show').removeClass('hide'),
                      s()('#filter-errors').html(''))
                    : n.addClass('hide').removeClass('show'),
                  0 == s()('.filterable .job-block:visible').length &&
                    s()('#filter-errors').html(
                      '<p>There are no current job openings for ' +
                        e +
                        ' in ' +
                        t +
                        ' at the moment. However, we are always on the lookout for the right talent. Please send us your resume at <a class="link font--orange" href="mailto:talent@chalo.com">talent@chalo.com</a> and we will reach out whenever we have a suitable opening.<p>'
                    )),
                '' !== e &&
                  '' == t &&
                  (r
                    ? (s()('.filterable .job-block')
                        .not('.show')
                        .addClass('hide'),
                      n.addClass('show').removeClass('hide'),
                      s()('#filter-errors').html(''))
                    : n.addClass('hide').removeClass('show'),
                  0 == s()('.filterable .job-block:visible').length &&
                    s()('#filter-errors').html(
                      '<p>There are no job openings for ' +
                        e +
                        ' at the moment. However, we are always on the lookout for the right talent. Please send us your resume at <a class="link font--orange" href="mailto:talent@chalo.com">talent@chalo.com</a> and we will reach out whenever we have a suitable opening.<p>'
                    )),
                '' == e &&
                  '' !== t &&
                  (o
                    ? (s()('.filterable .job-block')
                        .not('.show')
                        .addClass('hide'),
                      n.addClass('show').removeClass('hide'),
                      s()('#filter-errors').html(''))
                    : n.addClass('hide').removeClass('show'),
                  0 == s()('.filterable .job-block:visible').length &&
                    s()('#filter-errors').html(
                      '<p>There are no current job openings in ' +
                        t +
                        ' at the moment. However, we are always on the lookout for the right talent. Please send us your resume at <a class="link font--orange" href="mailto:talent@chalo.com">talent@chalo.com</a> and we will reach out whenever we have a suitable opening.<p>'
                    ));
            });
        }),
        s()('#role').val(
          s()('#jobForm')
            .parents('.modal-content')
            .find('.section--title')
            .text()
        ),
        s()('#jobForm').validate({
          rules: {
            name: 'required',
            email: 'required',
            mobile: 'required',
            role: 'required',
            resume: 'required',
          },
          messages: {
            name: 'Please enter your name',
            email: 'Please enter your email',
            mobile: 'Please enter your mobile number',
            role: 'Please enter the role you wish to apply for',
            resume: 'Please upload your resume',
          },
        }),
        s()('#main-content').css({
          minHeight:
            s()(window).height() -
            s()('footer').innerHeight() -
            s()('.header-placeholder').height(),
        }),
        s()('.downloadNowBtn').on('click', function () {
          ga('gtag_UA_114084661_1.send', {
            hitType: 'event',
            eventCategory: 'App',
            eventAction: 'Install App',
            eventLabel: 'Masthead Button',
          }),
            fbq('trackCustom', 'Install App', {
              content_name: 'Masthead Button',
              content_category: 'App',
            });
        }),
        s()('.try-chalo-event').on('click', function () {
          ga('gtag_UA_114084661_1.send', {
            hitType: 'event',
            eventCategory: 'App',
            eventAction: 'Try Chalo',
            eventLabel: 'Masthead Button',
          }),
            fbq('trackCustom', 'Try Chalo', {
              content_name: 'Masthead Button',
              content_category: 'App',
            });
        }),
        s()('[data-href]').on('click', function (e) {
          e.preventDefault();
          var t = s()(this).attr('data-href');
          s()('html, body')
            .stop()
            .animate(
              {
                scrollTop:
                  s()(t).offset().top - s()('.main-menu').height() - 30,
              },
              600
            );
        }),
        s()('.view-all-centres-link').on('click', function () {
          s()('.card--centre-wrapper .card--centre-box').show(),
            s()(this).hide();
        });
    }),
      s()(window).on('load', function () {
        pe = setInterval(function () {
          s()('body').hasClass('loaded') ||
            (s()('body').addClass('loaded'),
            console.log('loaded'),
            s()('body').hasClass('loaded') &&
              (s()(
                '.section--banner .circle, .section--banner img, .section--banner .right, .seo-title'
              ).addClass('show'),
              s()('.mobile-fixed-button, #fixed-jobs-btn').length &&
                s()('footer').addClass('fixed-button'),
              clearInterval(pe)));
        }, 500);
      });
    n(2);
  },
]);
